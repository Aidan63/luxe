{
  "source": "luxe.tween.actuators.IGenericActuator",
  "doc": "",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "Members",
      "link": "#Members",
      "values": [
        {
          "name": "meta",
          "meta": [],
          "public": false,
          "inline": false,
          "static": false,
          "signature": "meta : Dynamic",
          "type": "Dynamic",
          "doc": ""
        }
      ]
    },
    {
      "name": "Meta",
      "link": "#Meta",
      "values": [
        {
          "name": ":noCompletion",
          "value": ""
        }
      ]
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": [
        {
          "name": "autoVisible",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Flash performs faster when objects are set to visible = false rather than only alpha = 0. autoVisible toggles automatically based on alpha values\n     * @param   value       Whether autoVisible should be enabled (Default is true)\n     * @return      The current actuator instance",
          "signature": "autoVisible(?value:Bool) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "delay",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Increases the delay before a tween is executed\n     * @param   duration        The amount of seconds to delay\n     * @return      The current actuator instance",
          "signature": "delay(duration:Float) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "duration",
              "type": "Float"
            }
          ]
        },
        {
          "name": "timescale",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Specify whether this should be scaled by the global timescale\n     * @param   _value      Whether or not it should be\n     * @return      The current actuator instance",
          "signature": "timescale(?_value:Bool) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?_value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "snapping",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Snapping causes tween values to be rounded automatically\n     * @param   value       Whether tween values should be rounded (Default is true)\n     * @return      The current actuator instance",
          "signature": "snapping(?value:Bool) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "smartRotation",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Enabling smartRotation can prevent undesired results when tweening rotation values\n     * @param   value       Whether smart rotation should be enabled (Default is true)\n     * @return      The current actuator instance",
          "signature": "smartRotation(?value:Bool) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "onComplete",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Defines a function which will be called when the tween finishes\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
          "signature": "onComplete(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "handler",
              "type": "Dynamic"
            },
            {
              "name": "?parameters",
              "type": "Array<Dynamic>"
            }
          ]
        },
        {
          "name": "onRepeat",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Defines a function which will be called when the tween repeats\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
          "signature": "onRepeat(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "handler",
              "type": "Dynamic"
            },
            {
              "name": "?parameters",
              "type": "Array<Dynamic>"
            }
          ]
        },
        {
          "name": "reflect",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Automatically changes the reverse value when the tween repeats. Repeat must be enabled for this to have any effect\n     * @param   value       Whether reflect should be enabled (Default is true)\n     * @return      The current actuator instance",
          "signature": "reflect(?value:Bool) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "repeat",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Repeats the tween after it finishes\n     * @param   times       The number of times you would like the tween to repeat, or -1 if you would like to repeat the tween indefinitely (Default is -1)\n     * @return      The current actuator instance",
          "signature": "repeat(?times:Int) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?times",
              "type": "Int"
            }
          ]
        },
        {
          "name": "onUpdate",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Defines a function which will be called when the tween updates\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
          "signature": "onUpdate(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "handler",
              "type": "Dynamic"
            },
            {
              "name": "?parameters",
              "type": "Array<Dynamic>"
            }
          ]
        },
        {
          "name": "reverse",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Sets if the tween should be handled in reverse\n     * @param   value       Whether the tween should be reversed (Default is true)\n     * @return      The current actuator instance",
          "signature": "reverse(?value:Bool) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "?value",
              "type": "Bool"
            }
          ]
        },
        {
          "name": "ease",
          "meta": [],
          "public": true,
          "static": false,
          "inline": false,
          "doc": "* Sets the easing which is used when running the tween\n     * @param   easing      An easing equation, like Elastic.easeIn or Quad.easeOut\n     * @return      The current actuator instance",
          "signature": "ease(easing:luxe.tween.easing.IEasing) : luxe.tween.actuators.IGenericActuator",
          "return": ": luxe.tween.actuators.IGenericActuator",
          "args": [
            {
              "name": "easing",
              "type": "luxe.tween.easing.IEasing"
            }
          ]
        }
      ]
    }
  ]
}