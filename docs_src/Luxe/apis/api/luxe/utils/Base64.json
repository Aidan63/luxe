{
  "source": "luxe.utils.Base64",
  "doc": "",
  "links": [],
  "toplinks": [],
  "sections": [
    {
      "name": "StaticMethods",
      "link": "#StaticMethods",
      "values": [
        {
          "name": "encodeBytesData",
          "meta": [],
          "ispublic": true,
          "isstatic": true,
          "isinline": false,
          "doc": "",
          "signature": "encodeBytesData(bytesData:haxe.io.BytesData) : String",
          "return": ": String",
          "args": [
            {
              "name": "bytesData",
              "type": "haxe.io.BytesData",
              "value": "null"
            }
          ]
        },
        {
          "name": "encode",
          "meta": [],
          "ispublic": true,
          "isstatic": true,
          "isinline": false,
          "doc": "",
          "signature": "encode(_string:String) : String",
          "return": ": String",
          "args": [
            {
              "name": "_string",
              "type": "String",
              "value": "null"
            }
          ]
        },
        {
          "name": "decodeBytesData",
          "meta": [],
          "ispublic": true,
          "isstatic": true,
          "isinline": false,
          "doc": "",
          "signature": "decodeBytesData(base64:String) : haxe.io.BytesData",
          "return": ": haxe.io.BytesData",
          "args": [
            {
              "name": "base64",
              "type": "String",
              "value": "null"
            }
          ]
        },
        {
          "name": "decode",
          "meta": [],
          "ispublic": true,
          "isstatic": true,
          "isinline": false,
          "doc": "",
          "signature": "decode(_string:String) : String",
          "return": ": String",
          "args": [
            {
              "name": "_string",
              "type": "String",
              "value": "null"
            }
          ]
        }
      ]
    },
    {
      "name": "Methods",
      "link": "#Methods",
      "values": []
    }
  ]
}