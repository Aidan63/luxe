{
  "classes":[
    { "name": "luxe.Camera",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Entity" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"shake_vector",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shake_vector : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"view",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"view : phoenix.Camera",
            "type":"phoenix.Camera",
            "doc":""
        },
        {
          "name":"shake_amount",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shake_amount : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"_final_pos",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_final_pos : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"bounds",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"bounds : luxe.Rectangle",
            "type":"luxe.Rectangle",
            "doc":""
        },
        {
          "name":"_rotation_cache",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_rotation_cache : phoenix.Quaternion",
            "type":"phoenix.Quaternion",
            "doc":""
        },
        {
          "name":"shaking",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shaking : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_rotation_radian",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_rotation_radian : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"minimum_shake",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"minimum_shake : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"viewport",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"viewport : luxe.Rectangle",
            "doc":"",
            "type":"luxe.Rectangle",
            "type_desc":"read/write"
        },
        {
          "name":"zoom",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"zoom : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"minimum_zoom",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"minimum_zoom : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"center",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"center : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_r:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_r","type": "luxe.Vector" }
            ]
          },
        {
          "name":"get_minimum_zoom",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_minimum_zoom() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_pos",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"shake",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"shake(amount:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "amount","type": "Float" }
            ]
          },
        {
          "name":"set_minimum_zoom",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_minimum_zoom(_m:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_m","type": "Float" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "v","type": "luxe.Vector" }
            ]
          },
        {
          "name":"get_center",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_center() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"get_zoom",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_zoom() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_viewport",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_viewport() : luxe.Rectangle",
            "return":": luxe.Rectangle",
            "args":[
            ]
          },
        {
          "name":"get_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"set_center",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_center(_c:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_c","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_zoom",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_zoom(_z:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_z","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?options:luxe.options.LuxeCameraOptions) ",
            "return":"",
            "args":[
              { "name": "?options","type": "luxe.options.LuxeCameraOptions" }
            ]
          },
        {
          "name":"set_viewport",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_viewport(_v:luxe.Rectangle) : luxe.Rectangle",
            "return":": luxe.Rectangle",
            "args":[
              { "name": "_v","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"set_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale(_c:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_c","type": "luxe.Vector" }
            ]
          },
        {
          "name":"focus",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"focus(_p:luxe.Vector, ?_t:Float, ?oncomplete:Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_p","type": "luxe.Vector" },
              { "name": "?_t","type": "Float" },
              { "name": "?oncomplete","type": "Void" }
            ]
          },
        {
          "name":"get_serialize_data",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialize_data() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"update",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(dt:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "dt","type": "Float" }
            ]
          },
        {
          "name":"screen_point_to_world",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"screen_point_to_world(_vector:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_vector","type": "luxe.Vector" }
            ]
          },
        {
          "name":"world_point_to_screen",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"world_point_to_screen(_vector:luxe.Vector, ?_viewport:luxe.Rectangle) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_vector","type": "luxe.Vector" },
              { "name": "?_viewport","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"get_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug.Inspector",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_title_text",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_title_text : luxe.Text",
            "type":"luxe.Text",
            "doc":""
        },
        {
          "name":"default_button_texture",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_button_texture : phoenix.Texture",
            "type":"phoenix.Texture",
            "doc":""
        },
        {
          "name":"onrefresh",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"onrefresh : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"size",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"size : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"title",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"title : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"default_box_texture",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_box_texture : phoenix.Texture",
            "type":"phoenix.Texture",
            "doc":""
        },
        {
          "name":"_window",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_window : luxe.NineSlice",
            "type":"luxe.NineSlice",
            "doc":""
        },
        {
          "name":"font",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"font : phoenix.BitmapFont",
            "type":"phoenix.BitmapFont",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"pos",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"pos : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"_batcher",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_options:luxe.debug.DebugInspectorOptions) ",
            "return":"",
            "args":[
              { "name": "_options","type": "luxe.debug.DebugInspectorOptions" }
            ]
          },
        {
          "name":"_create_window",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_create_window() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.ColorHSL",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.Color" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
        {
          "name":"h",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"h : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"s",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"s : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"l",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"l : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_h:Float, ?_s:Float, ?_l:Float, ?_a:Float) : phoenix.ColorHSL",
            "return":": phoenix.ColorHSL",
            "args":[
              { "name": "?_h","type": "Float" },
              { "name": "?_s","type": "Float" },
              { "name": "?_l","type": "Float" },
              { "name": "?_a","type": "Float" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.ColorHSL",
            "return":": phoenix.ColorHSL",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_h:Float, ?_s:Float, ?_l:Float, ?_a:Float) ",
            "return":"",
            "args":[
              { "name": "?_h","type": "Float" },
              { "name": "?_s","type": "Float" },
              { "name": "?_l","type": "Float" },
              { "name": "?_a","type": "Float" }
            ]
          },
        {
          "name":"_refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_refresh() : phoenix.ColorHSL",
            "return":": phoenix.ColorHSL",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"tween",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"tween(?_time_in_seconds:Float, ?_dest:luxe.options.ColorOptions, ?_override:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?_time_in_seconds","type": "Float" },
              { "name": "?_dest","type": "luxe.options.ColorOptions" },
              { "name": "?_override","type": "Bool" }
            ]
          },
        {
          "name":"toColor",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toColor() : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
            ]
          },
        {
          "name":"set_s",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_s(_s:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_s","type": "Float" }
            ]
          },
        {
          "name":"set_l",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_l(_l:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_l","type": "Float" }
            ]
          },
        {
          "name":"set_h",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_h(_h:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_h","type": "Float" }
            ]
          },
        {
          "name":"fromColor",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromColor(_color:phoenix.Color) : phoenix.ColorHSL",
            "return":": phoenix.ColorHSL",
            "args":[
              { "name": "_color","type": "phoenix.Color" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Audio",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"core",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"position",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"get/set the position of a named audio reference    \n            **name** The audio reference name to adjust    \n            **pos** A new position value (set), or leave empty (get)   \n            **returns** The position of `name` IF position is unspecified",
            "signature":"position(_name:String, ?_pos:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_pos","type": "Float" }
            ]
          },
        {
          "name":"stop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Stop a named audio reference from playing (or looping)   \n            **name** The audio reference name to stop    \n            **returns** nothing",
            "signature":"stop(_name:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"process",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"exists",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Determine whether a named audio reference exists  \n            **name** The audio reference name to check    \n            **returns** true/false",
            "signature":"exists(_name:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"loop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Loop a named audio reference indefinitely. Use `stop` if needed.  \n            **name** The audio reference name to loop    \n            **returns** nothing",
            "signature":"loop(_name:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Create a named audio reference, with optional stream flag   \n            **name** The name to assign this audio reference    \n            **file** The asset file id from which the audio is loaded/streamed    \n            **stream** Whether or not to stream the audio, default `false`   \n            **returns** The `Sound` instance, but the audio API stores this, use the API to manipulate it by name.",
            "signature":"create(_name:String, _file:String, ?_stream:Bool) : lime.helpers.Sound",
            "return":": lime.helpers.Sound",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_file","type": "String" },
              { "name": "?_stream","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"playing",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Determine whether a named audio reference is playing  \n            **name** The audio reference name to check    \n            **returns** true/false",
            "signature":"playing(_name:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"volume",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"get/set the volume of a named audio reference    \n            **name** The audio reference name to adjust    \n            **volume** A new volume value (set), or leave empty (get)    \n            **returns** The volume of `name` IF volume is unspecified",
            "signature":"volume(_name:String, ?_volume:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_volume","type": "Float" }
            ]
          },
        {
          "name":"sound",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Fetch a named audio reference   \n            **name** The name to acquire audio reference    \n            **returns** The `Sound` instance",
            "signature":"sound(_name:String) : lime.helpers.Sound",
            "return":": lime.helpers.Sound",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"play",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Play a named audio reference   \n            **name** The audio reference name to play    \n            **number_of_times** The exact number of times to play    \n            **start_position_in_s** The start time, in seconds    \n            **returns** nothing",
            "signature":"play(_name:String, ?_number_of_times:Int, ?_start_position_in_s:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_number_of_times","type": "Int" },
              { "name": "?_start_position_in_s","type": "Float" }
            ]
          },
        {
          "name":"on_complete",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"Set the on complete handler for a named audio reference   \n            **name** The audio reference name to assign to   \n            **handler** The callback to call when playback is complete   \n            **returns** nothing",
            "signature":"on_complete(_name:String, handler:lime.helpers.Sound->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "handler","type": "lime.helpers.Sound->Void" }
            ]
          },
        {
          "name":"pan",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"get/set the pan of a named audio reference    \n            **name** The audio reference name to adjust    \n            **pan** A new pan value (set), or leave empty (get)   \n            **returns** The pan of `name` IF pan is unspecified",
            "signature":"pan(_name:String, ?_pan:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_pan","type": "Float" }
            ]
          },
        {
          "name":"init",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe._Events.EventObject",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"properties",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"properties : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_id:String, _event_name:String, _event_properties:Dynamic) ",
            "return":"",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "_event_name","type": "String" },
              { "name": "_event_properties","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "luxe.Draw",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"core",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"line",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"line(options:Dynamic) : phoenix.geometry.LineGeometry",
            "return":": phoenix.geometry.LineGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"box",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"box(options:Dynamic) : phoenix.geometry.QuadGeometry",
            "return":": phoenix.geometry.QuadGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"arc",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"arc(options:Dynamic) : phoenix.geometry.ArcGeometry",
            "return":": phoenix.geometry.ArcGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"axis3D",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"axis3D(?options:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "?options","type": "Dynamic" }
            ]
          },
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"text",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"text(options:Dynamic) : phoenix.geometry.Geometry",
            "return":": phoenix.geometry.Geometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"plane",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"plane(options:Dynamic) : phoenix.geometry.PlaneGeometry",
            "return":": phoenix.geometry.PlaneGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"ring",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ring(options:Dynamic) : phoenix.geometry.RingGeometry",
            "return":": phoenix.geometry.RingGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"circle",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"circle(options:Dynamic) : phoenix.geometry.CircleGeometry",
            "return":": phoenix.geometry.CircleGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"rectangle",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rectangle(options:Dynamic) : phoenix.geometry.RectangleGeometry",
            "return":": phoenix.geometry.RectangleGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"default_options",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"default_options(options:Dynamic) : Dynamic",
            "return":": Dynamic",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"ngon",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ngon(options:Dynamic) : phoenix.geometry.Geometry",
            "return":": phoenix.geometry.Geometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.easing.QuadEaseInOut",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
        { "name":"luxe.tween.easing.IEasing" }
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "k","type": "Float" }
            ]
          },
        {
          "name":"ease",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ease(t:Float, b:Float, c:Float, d:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "t","type": "Float" },
              { "name": "b","type": "Float" },
              { "name": "c","type": "Float" },
              { "name": "d","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Cursor",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"screen",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"screen : luxe.Screen",
            "type":"luxe.Screen",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"visible",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"visible : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"locked",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"locked : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"pos",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"get_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_screen:luxe.Screen) ",
            "return":"",
            "args":[
              { "name": "_screen","type": "luxe.Screen" }
            ]
          },
        {
          "name":"get_visible",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_visible() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_visible",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_visible(_visible:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_visible","type": "Bool" }
            ]
          },
        {
          "name":"get_locked",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_locked() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"set_locked",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_locked(_lock:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_lock","type": "Bool" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.PropertyDetails",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"change",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"change : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"target",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"target : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"start : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"propertyName",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"propertyName : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"isField",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"isField : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(target:Dynamic, propertyName:String, start:Float, change:Float, ?isField:Bool) ",
            "return":"",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "propertyName","type": "String" },
              { "name": "start","type": "Float" },
              { "name": "change","type": "Float" },
              { "name": "?isField","type": "Bool" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.LinearPath",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.tween.BezierPath" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(end:Float, strength:Float) ",
            "return":"",
            "args":[
              { "name": "end","type": "Float" },
              { "name": "strength","type": "Float" }
            ]
          },
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(start:Float, k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "start","type": "Float" },
              { "name": "k","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix._Vector.Vec_Impl_",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"_divide",
            "meta":[
            { "name":":op", "value":"A/B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_divide(lhs:phoenix.Vec, rhs:phoenix.Vec) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "phoenix.Vec" }
            ]
          },
        {
          "name":"_add_scalar_int",
            "meta":[
            { "name":":op", "value":"A+B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_add_scalar_int(lhs:phoenix.Vec, rhs:Int) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Int" }
            ]
          },
        {
          "name":"_add",
            "meta":[
            { "name":":op", "value":"A+B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_add(lhs:phoenix.Vec, rhs:phoenix.Vec) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "phoenix.Vec" }
            ]
          },
        {
          "name":"_divide_scalar_int",
            "meta":[
            { "name":":op", "value":"A/B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_divide_scalar_int(lhs:phoenix.Vec, rhs:Int) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Int" }
            ]
          },
        {
          "name":"_multiply",
            "meta":[
            { "name":":op", "value":"A*B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_multiply(lhs:phoenix.Vec, rhs:phoenix.Vec) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "phoenix.Vec" }
            ]
          },
        {
          "name":"_multiply_scalar",
            "meta":[
            { "name":":op", "value":"A*B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_multiply_scalar(lhs:phoenix.Vec, rhs:Float) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Float" }
            ]
          },
        {
          "name":"_multiply_scalar_int",
            "meta":[
            { "name":":op", "value":"A*B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_multiply_scalar_int(lhs:phoenix.Vec, rhs:Int) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Int" }
            ]
          },
        {
          "name":"_divide_scalar",
            "meta":[
            { "name":":op", "value":"A/B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_divide_scalar(lhs:phoenix.Vec, rhs:Float) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Float" }
            ]
          },
        {
          "name":"_add_scalar",
            "meta":[
            { "name":":op", "value":"A+B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_add_scalar(lhs:phoenix.Vec, rhs:Float) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Float" }
            ]
          },
        {
          "name":"_subtract",
            "meta":[
            { "name":":op", "value":"A-B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_subtract(lhs:phoenix.Vec, rhs:phoenix.Vec) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "phoenix.Vec" }
            ]
          },
        {
          "name":"_subtract_scalar",
            "meta":[
            { "name":":op", "value":"A-B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_subtract_scalar(lhs:phoenix.Vec, rhs:Float) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Float" }
            ]
          },
        {
          "name":"_subtract_scalar_int",
            "meta":[
            { "name":":op", "value":"A-B" }
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"_subtract_scalar_int(lhs:phoenix.Vec, rhs:Int) : phoenix.Vec",
            "return":": phoenix.Vec",
            "args":[
              { "name": "lhs","type": "phoenix.Vec" },
              { "name": "rhs","type": "Int" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "phoenix.geometry.RectangleGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(options:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.MotionPath",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"haxe_doc",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"haxe_doc : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"_x",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_x : luxe.tween.ComponentPath",
            "type":"luxe.tween.ComponentPath",
            "doc":""
        },
        {
          "name":"_y",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_y : luxe.tween.ComponentPath",
            "type":"luxe.tween.ComponentPath",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"y",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"y : luxe.tween.IComponentPath",
            "doc":"",
            "type":"luxe.tween.IComponentPath",
            "type_desc":"(read only)"
        },
        {
          "name":"x",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"x : luxe.tween.IComponentPath",
            "doc":"",
            "type":"luxe.tween.IComponentPath",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"line",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Adds a line to the current motion path\n     * @param   x  The x position of the end point for the line\n     * @param   x  The y position of the end point for the line\n     * @param   strength  The degree of emphasis that should be placed on this segment . If a motion path contains multiple segments with the same strength, they all receive equal emphasis (Default is 1)\n     * @return  The current motion path instance",
            "signature":"line(x:Float, y:Float, ?strength:Float) : luxe.tween.MotionPath",
            "return":": luxe.tween.MotionPath",
            "args":[
              { "name": "x","type": "Float" },
              { "name": "y","type": "Float" },
              { "name": "?strength","type": "Float" }
            ]
          },
        {
          "name":"get_x",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_x() : luxe.tween.IComponentPath",
            "return":": luxe.tween.IComponentPath",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"bezier",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Adds a bezier curve to the current motion path\n     * @param   x  The x position of the end point for the curve\n     * @param   y  The y position of the end point for the curve\n     * @param   controlX  The x position of the control point for the curve, which affects the angle and midpoint\n     * @param   controlX  The x position of the control point for the curve, which affects the angle and midpoint\n     * @param   strength  The degree of emphasis that should be placed on this segment. If a motion path contains multiple segments with the same strength, they all receive equal emphasis (Default is 1)\n     * @return  The current motion path instance",
            "signature":"bezier(x:Float, y:Float, controlX:Float, controlY:Float, ?strength:Float) : luxe.tween.MotionPath",
            "return":": luxe.tween.MotionPath",
            "args":[
              { "name": "x","type": "Float" },
              { "name": "y","type": "Float" },
              { "name": "controlX","type": "Float" },
              { "name": "controlY","type": "Float" },
              { "name": "?strength","type": "Float" }
            ]
          },
        {
          "name":"get_y",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_y() : luxe.tween.IComponentPath",
            "return":": luxe.tween.IComponentPath",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":"* @author Joshua Granick"
    },
    { "name": "phoenix.RenderTexture",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.Texture" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"fbo",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"fbo : lime.gl.GLFramebuffer",
            "type":"lime.gl.GLFramebuffer",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_manager:luxe.ResourceManager, ?_size:phoenix.Vector) ",
            "return":"",
            "args":[
              { "name": "_manager","type": "luxe.ResourceManager" },
              { "name": "?_size","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"unbindBuffer",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"unbindBuffer(?_other:lime.gl.GLFramebuffer) : Void",
            "return":": Void",
            "args":[
              { "name": "?_other","type": "lime.gl.GLFramebuffer" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"bindBuffer",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"bindBuffer() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.NineSlice",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Sprite" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"top",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"top : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"source_y",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"source_y : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"midheight",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"midheight : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"_geometry",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_geometry : phoenix.geometry.ComplexGeometry",
            "type":"phoenix.geometry.ComplexGeometry",
            "doc":""
        },
        {
          "name":"is_set",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"is_set : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"slices",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"slices : Array<luxe.Slice>",
            "type":"Array<luxe.Slice>",
            "doc":""
        },
        {
          "name":"right",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"right : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"midwidth",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"midwidth : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"left",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"left : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"nineslice_options",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"nineslice_options : luxe.options.NineSliceOptions<Dynamic>",
            "type":"luxe.options.NineSliceOptions<Dynamic>",
            "doc":""
        },
        {
          "name":"source_h",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"source_h : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"height",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"height : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"source_w",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"source_w : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"added",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"added : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"bottom",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"bottom : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"width",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"width : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"source_x",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"source_x : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"_batcher",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(_width:Float, _height:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_width","type": "Float" },
              { "name": "_height","type": "Float" }
            ]
          },
        {
          "name":"set_clip",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create(_pos:luxe.Vector, _w:Float, _h:Float, ?_reset:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_pos","type": "luxe.Vector" },
              { "name": "_w","type": "Float" },
              { "name": "_h","type": "Float" },
              { "name": "?_reset","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_options:luxe.options.NineSliceOptions<new.T>) ",
            "return":"",
            "args":[
              { "name": "_options","type": "luxe.options.NineSliceOptions<new.T>" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_v","type": "luxe.Vector" }
            ]
          },
        {
          "name":"destroyed",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroyed() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_color",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_color(_color:luxe.Color) : luxe.Color",
            "return":": luxe.Color",
            "args":[
              { "name": "_color","type": "luxe.Color" }
            ]
          },
        {
          "name":"dirty",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"dirty() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_visible",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_visible(_v:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_v","type": "Bool" }
            ]
          },
        {
          "name":"_create",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_create(_pos:luxe.Vector, _w:Float, _h:Float, ?_reset:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_pos","type": "luxe.Vector" },
              { "name": "_w","type": "Float" },
              { "name": "_h","type": "Float" },
              { "name": "?_reset","type": "Bool" }
            ]
          },
        {
          "name":"update_size",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update_size(_width:Float, _height:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_width","type": "Float" },
              { "name": "_height","type": "Float" }
            ]
          },
        {
          "name":"set_clip_rect",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip_rect(val:luxe.Rectangle) : luxe.Rectangle",
            "return":": luxe.Rectangle",
            "args":[
              { "name": "val","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"lock",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"lock() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_size",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_size(_v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_v","type": "luxe.Vector" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Rectangle",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"listen_y",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_y : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"ignore_listeners",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"ignore_listeners : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"listen_w",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_w : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"listen_h",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_h : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"listen_x",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_x : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"h",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"h : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"serialized",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"serialized : Dynamic",
            "doc":"",
            "type":"Dynamic",
            "type_desc":"(read only)"
        },
        {
          "name":"y",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"y : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"x",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"x : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"w",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"w : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"point_inside",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"point_inside(_p:phoenix.Vector) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_p","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"overlaps",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"overlaps(_other:phoenix.Rectangle) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_other","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_x:Float, ?_y:Float, ?_w:Float, ?_h:Float) : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_w","type": "Float" },
              { "name": "?_h","type": "Float" }
            ]
          },
        {
          "name":"set_y",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_y(_y:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_y","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_x:Float, ?_y:Float, ?_w:Float, ?_h:Float) ",
            "return":"",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_w","type": "Float" },
              { "name": "?_h","type": "Float" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"copy_from",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"copy_from(_rect:phoenix.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_rect","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"set_x",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_x(_x:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_x","type": "Float" }
            ]
          },
        {
          "name":"get_serialized",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialized() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"set_w",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_w(_w:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_w","type": "Float" }
            ]
          },
        {
          "name":"equal",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"equal(_other:phoenix.Rectangle) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_other","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"set_h",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_h(_h:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_h","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Shader",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Resource" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"tex1_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex1_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"tex2_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex2_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"shader",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shader : lime.gl.GLShader",
            "type":"lime.gl.GLShader",
            "doc":""
        },
        {
          "name":"tex3_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex3_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"tex4_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex4_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"tex5_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex5_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"program",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"program : lime.gl.GLProgram",
            "type":"lime.gl.GLProgram",
            "doc":""
        },
        {
          "name":"vert_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vert_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"tex6_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex6_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"errors",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"errors : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"tex7_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex7_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"frag_shader",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"frag_shader : lime.gl.GLShader",
            "type":"lime.gl.GLShader",
            "doc":""
        },
        {
          "name":"normal_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"normal_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"vert_shader",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vert_shader : lime.gl.GLShader",
            "type":"lime.gl.GLShader",
            "doc":""
        },
        {
          "name":"uniforms",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uniforms : Map<String,phoenix.UniformValue>",
            "type":"Map<String,phoenix.UniformValue>",
            "doc":""
        },
        {
          "name":"log",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"log : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"tcoord_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tcoord_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"modelviewmatrix_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"modelviewmatrix_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"color_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"color_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"projectionmatrix_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"projectionmatrix_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"uniform_textures",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"uniform_textures : Map<String,phoenix.Texture>",
            "type":"Map<String,phoenix.Texture>",
            "doc":""
        },
        {
          "name":"tex0_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex0_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set_uniform_vector4",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_vector4(_name:String, _value:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"compile",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"compile(_type:Int, _source:String, ?_verbose:Bool) : lime.gl.GLShader",
            "return":": lime.gl.GLShader",
            "args":[
              { "name": "_type","type": "Int" },
              { "name": "_source","type": "String" },
              { "name": "?_verbose","type": "Bool" }
            ]
          },
        {
          "name":"set_uniform_vector3",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_vector3(_name:String, _value:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"setUniformFloat",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformFloat(uniform_name:String, value:Float, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "Float" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"set_uniform_color",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_color(_name:String, _value:phoenix.Color) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "phoenix.Color" }
            ]
          },
        {
          "name":"setUniformColor",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformColor(uniform_name:String, value:phoenix.Color, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "phoenix.Color" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"set_uniform_float",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_float(_name:String, _value:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"addError",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"addError(_error:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_error","type": "String" }
            ]
          },
        {
          "name":"getUniform",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"getUniform(uniform_name:String) : lime.gl.GLUniformLocation",
            "return":": lime.gl.GLUniformLocation",
            "args":[
              { "name": "uniform_name","type": "String" }
            ]
          },
        {
          "name":"setUniformVector3",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformVector3(uniform_name:String, value:phoenix.Vector, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "phoenix.Vector" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_manager:luxe.ResourceManager) ",
            "return":"",
            "args":[
              { "name": "_manager","type": "luxe.ResourceManager" }
            ]
          },
        {
          "name":"set_uniform_vector2",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_vector2(_name:String, _value:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_uniform_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_texture(_name:String, _value:phoenix.Texture) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "phoenix.Texture" }
            ]
          },
        {
          "name":"setUniformVector2",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformVector2(uniform_name:String, value:phoenix.Vector, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "phoenix.Vector" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"setUniformTexture",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformTexture(uniform_name:String, value:phoenix.Texture, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "phoenix.Texture" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"addLog",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"addLog(_log:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_log","type": "String" }
            ]
          },
        {
          "name":"deactivate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"deactivate() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"activate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"activate() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_uniform_int",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uniform_int(_name:String, _value:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "Int" }
            ]
          },
        {
          "name":"drop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"drop() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"load_from_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_from_string(_vertex_source:String, _fragment_source:String, ?_verbose:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_vertex_source","type": "String" },
              { "name": "_fragment_source","type": "String" },
              { "name": "?_verbose","type": "Bool" }
            ]
          },
        {
          "name":"setUniformInt",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformInt(uniform_name:String, value:Int, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "Int" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"setUniformVector4",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setUniformVector4(uniform_name:String, value:phoenix.Vector, ?location:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "uniform_name","type": "String" },
              { "name": "value","type": "phoenix.Vector" },
              { "name": "?location","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"link",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"link() : lime.gl.GLProgram",
            "return":": lime.gl.GLProgram",
            "args":[
            ]
          },
        {
          "name":"apply_uniforms",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"apply_uniforms() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.LineGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
        {
          "name":"p0",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"p0 : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"p1",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"p1 : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set_p0",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_p0(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(options:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"set_p1",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_p1(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Renderer",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"default_camera",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_camera : phoenix.Camera",
            "type":"phoenix.Camera",
            "doc":""
        },
        {
          "name":"resource_manager",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"resource_manager : luxe.ResourceManager",
            "type":"luxe.ResourceManager",
            "doc":""
        },
        {
          "name":"stop",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"stop : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"stop_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"stop_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"default_shader",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_shader : phoenix.Shader",
            "type":"phoenix.Shader",
            "doc":""
        },
        {
          "name":"default_font",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_font : phoenix.BitmapFont",
            "type":"phoenix.BitmapFont",
            "doc":""
        },
        {
          "name":"clear_color",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"clear_color : phoenix.Color",
            "type":"phoenix.Color",
            "doc":""
        },
        {
          "name":"default_shader_textured",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_shader_textured : phoenix.Shader",
            "type":"phoenix.Shader",
            "doc":""
        },
        {
          "name":"state",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"state : phoenix.RenderState",
            "type":"phoenix.RenderState",
            "doc":""
        },
        {
          "name":"stats",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"stats : phoenix.RendererStats",
            "type":"phoenix.RendererStats",
            "doc":""
        },
        {
          "name":"default_render_path",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_render_path : phoenix.RenderPath",
            "type":"phoenix.RenderPath",
            "doc":""
        },
        {
          "name":"batchers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"batchers : Array<phoenix.Batcher>",
            "type":"Array<phoenix.Batcher>",
            "doc":""
        },
        {
          "name":"default_batcher",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"default_batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        },
        {
          "name":"render_path",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"render_path : phoenix.RenderPath",
            "type":"phoenix.RenderPath",
            "doc":""
        },
        {
          "name":"should_clear",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"should_clear : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"onresize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onresize(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"add_batch",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_batch(batch:phoenix.Batcher) : Void",
            "return":": Void",
            "args":[
              { "name": "batch","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"sort_batchers",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"sort_batchers(a:phoenix.Batcher, b:phoenix.Batcher) : Int",
            "return":": Int",
            "args":[
              { "name": "a","type": "phoenix.Batcher" },
              { "name": "b","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"remove_batch",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove_batch(batch:phoenix.Batcher) : Void",
            "return":": Void",
            "args":[
              { "name": "batch","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"load_texture_from_string_byte_array",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_texture_from_string_byte_array(?_name:String, _string_byte_array:String, _width:Int, _height:Int) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "?_name","type": "String" },
              { "name": "_string_byte_array","type": "String" },
              { "name": "_width","type": "Int" },
              { "name": "_height","type": "Int" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"clear",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clear(_color:phoenix.Color) : Void",
            "return":": Void",
            "args":[
              { "name": "_color","type": "phoenix.Color" }
            ]
          },
        {
          "name":"load_font",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_font(_fontid:String, ?_path:String, ?_onloaded:phoenix.BitmapFont->Void) : phoenix.BitmapFont",
            "return":": phoenix.BitmapFont",
            "args":[
              { "name": "_fontid","type": "String" },
              { "name": "?_path","type": "String" },
              { "name": "?_onloaded","type": "phoenix.BitmapFont->Void" }
            ]
          },
        {
          "name":"load_textures",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_textures(_names:Array<String>, ?_onloaded:Array->Void, ?_silent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_names","type": "Array<String>" },
              { "name": "?_onloaded","type": "Array->Void" },
              { "name": "?_silent","type": "Bool" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_debug",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_debug(v:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "Dynamic" }
            ]
          },
        {
          "name":"init",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"load_shader",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_shader(_psid:String, ?_vsid:String, ?_onloaded:phoenix.Shader->Void) : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
              { "name": "_psid","type": "String" },
              { "name": "?_vsid","type": "String" },
              { "name": "?_onloaded","type": "phoenix.Shader->Void" }
            ]
          },
        {
          "name":"load_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_texture(_name:String, ?_onloaded:phoenix.Texture->Void, ?_silent:Bool, ?asset_bytes:lime.utils.ByteArray) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_onloaded","type": "phoenix.Texture->Void" },
              { "name": "?_silent","type": "Bool" },
              { "name": "?asset_bytes","type": "lime.utils.ByteArray" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.ColorHSV",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.Color" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
        {
          "name":"h",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"h : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"v",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"v : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"s",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"s : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_h:Float, ?_s:Float, ?_v:Float, ?_a:Float) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "?_h","type": "Float" },
              { "name": "?_s","type": "Float" },
              { "name": "?_v","type": "Float" },
              { "name": "?_a","type": "Float" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.ColorHSV",
            "return":": phoenix.ColorHSV",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_h:Float, ?_s:Float, ?_v:Float, ?_a:Float) ",
            "return":"",
            "args":[
              { "name": "?_h","type": "Float" },
              { "name": "?_s","type": "Float" },
              { "name": "?_v","type": "Float" },
              { "name": "?_a","type": "Float" }
            ]
          },
        {
          "name":"_refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_refresh() : phoenix.ColorHSV",
            "return":": phoenix.ColorHSV",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"tween",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"tween(?_time_in_seconds:Float, ?_dest:luxe.options.ColorOptions, ?_override:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?_time_in_seconds","type": "Float" },
              { "name": "?_dest","type": "luxe.options.ColorOptions" },
              { "name": "?_override","type": "Bool" }
            ]
          },
        {
          "name":"toColor",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toColor() : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
            ]
          },
        {
          "name":"toColorHSL",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toColorHSL() : phoenix.ColorHSL",
            "return":": phoenix.ColorHSL",
            "args":[
            ]
          },
        {
          "name":"set_s",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_s(_s:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_s","type": "Float" }
            ]
          },
        {
          "name":"set_h",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_h(_h:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_h","type": "Float" }
            ]
          },
        {
          "name":"set_v",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_v(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"fromColorHSL",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromColorHSL(_color_hsl:phoenix.ColorHSL) : phoenix.ColorHSV",
            "return":": phoenix.ColorHSV",
            "args":[
              { "name": "_color_hsl","type": "phoenix.ColorHSL" }
            ]
          },
        {
          "name":"fromColor",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromColor(_color:phoenix.Color) : phoenix.ColorHSV",
            "return":": phoenix.ColorHSV",
            "args":[
              { "name": "_color","type": "phoenix.Color" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.BezierPath",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"control",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"control : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"strength",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"strength : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"end",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"end : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(end:Float, control:Float, strength:Float) ",
            "return":"",
            "args":[
              { "name": "end","type": "Float" },
              { "name": "control","type": "Float" },
              { "name": "strength","type": "Float" }
            ]
          },
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(start:Float, k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "start","type": "Float" },
              { "name": "k","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.Geometry",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"shadow_primitive_type",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"shadow_primitive_type : phoenix.PrimitiveType",
            "type":"phoenix.PrimitiveType",
            "doc":""
        },
        {
          "name":"_final_vert_position",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_final_vert_position : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"shadow_depth",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"shadow_depth : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"vertices",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vertices : Array<phoenix.geometry.Vertex>",
            "type":"Array<phoenix.geometry.Vertex>",
            "doc":""
        },
        {
          "name":"submitted",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"submitted : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"shadow_clip",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"shadow_clip : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"dirty_clip",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dirty_clip : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"matrix",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"matrix : phoenix.Matrix4",
            "type":"phoenix.Matrix4",
            "doc":""
        },
        {
          "name":"static_vertex_buffer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_vertex_buffer : lime.gl.GLBuffer",
            "type":"lime.gl.GLBuffer",
            "doc":""
        },
        {
          "name":"_scale_dirty",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_scale_dirty : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"static_normal_buffer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_normal_buffer : lime.gl.GLBuffer",
            "type":"lime.gl.GLBuffer",
            "doc":""
        },
        {
          "name":"state",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"state : phoenix.geometry.GeometryState",
            "type":"phoenix.geometry.GeometryState",
            "doc":""
        },
        {
          "name":"uuid",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uuid : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"shadow_shader",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"shadow_shader : phoenix.Shader",
            "type":"phoenix.Shader",
            "doc":""
        },
        {
          "name":"shadow_group",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"shadow_group : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"_pos_dirty",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_pos_dirty : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"dirty_depth",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dirty_depth : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"_rotation_dirty",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_rotation_dirty : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"static_vcolor_buffer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_vcolor_buffer : lime.gl.GLBuffer",
            "type":"lime.gl.GLBuffer",
            "doc":""
        },
        {
          "name":"dirty_texture",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dirty_texture : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"dirty_group",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dirty_group : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"static_tcoord_buffer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_tcoord_buffer : lime.gl.GLBuffer",
            "type":"lime.gl.GLBuffer",
            "doc":""
        },
        {
          "name":"key",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"key : phoenix.geometry.GeometryKey",
            "type":"phoenix.geometry.GeometryKey",
            "doc":""
        },
        {
          "name":"dropped",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dropped : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"shadow_texture",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"shadow_texture : phoenix.Texture",
            "type":"phoenix.Texture",
            "doc":""
        },
        {
          "name":"dirty_shader",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dirty_shader : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"dirty_primitive_type",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dirty_primitive_type : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"added",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"added : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"batchers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"batchers : Array<phoenix.Batcher>",
            "type":"Array<phoenix.Batcher>",
            "doc":""
        },
        {
          "name":"immediate",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"immediate : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"texture",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"texture : phoenix.Texture",
            "doc":"",
            "type":"phoenix.Texture",
            "type_desc":"read/write"
        },
        {
          "name":"group",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"group : Int",
            "doc":"",
            "type":"Int",
            "type_desc":"read/write"
        },
        {
          "name":"color",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"color : phoenix.Color",
            "doc":"",
            "type":"phoenix.Color",
            "type_desc":"read/write"
        },
        {
          "name":"visible",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"visible : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"locked",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"locked : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"origin",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"origin : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"shader",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"shader : phoenix.Shader",
            "doc":"",
            "type":"phoenix.Shader",
            "type_desc":"read/write"
        },
        {
          "name":"depth",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"depth : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"dirty",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"dirty : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"clip_rect",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clip_rect : phoenix.Rectangle",
            "doc":"",
            "type":"phoenix.Rectangle",
            "type_desc":"read/write"
        },
        {
          "name":"rotation",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation : phoenix.Quaternion",
            "doc":"",
            "type":"phoenix.Quaternion",
            "type_desc":"read/write"
        },
        {
          "name":"primitive_type",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"primitive_type : phoenix.PrimitiveType",
            "doc":"",
            "type":"phoenix.PrimitiveType",
            "type_desc":"read/write"
        },
        {
          "name":"clip",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clip : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"pos",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scale",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scale : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"get_pos",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"refresh",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_clip",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"translate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"translate(_offset:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_offset","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"get_shader",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_shader() : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
            ]
          },
        {
          "name":"get_dirty",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_dirty() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"key_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"key_string() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"refresh_key",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh_key() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"batch",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"batch(vertlist:Array<Float>, tcoordlist:Array<Float>, colorlist:Array<Float>, normallist:Array<Float>) : Void",
            "return":": Void",
            "args":[
              { "name": "vertlist","type": "Array<Float>" },
              { "name": "tcoordlist","type": "Array<Float>" },
              { "name": "colorlist","type": "Array<Float>" },
              { "name": "normallist","type": "Array<Float>" }
            ]
          },
        {
          "name":"get_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_texture() : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
            ]
          },
        {
          "name":"set_clip_rect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip_rect(val:phoenix.Rectangle) : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
              { "name": "val","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"set_origin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_origin(_origin:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_origin","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_locked",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_locked(_locked:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_locked","type": "Bool" }
            ]
          },
        {
          "name":"get_scale",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"get_primitive_type",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_primitive_type() : phoenix.PrimitiveType",
            "return":": phoenix.PrimitiveType",
            "args":[
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(v:phoenix.geometry.Vertex) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "phoenix.geometry.Vertex" }
            ]
          },
        {
          "name":"batch_into_float32array",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"batch_into_float32array(vert_index:Int, tcoord_index:Int, color_index:Int, normal_index:Int, vertlist:lime.utils.Float32Array, tcoordlist:lime.utils.Float32Array, colorlist:lime.utils.Float32Array, normallist:lime.utils.Float32Array) : Void",
            "return":": Void",
            "args":[
              { "name": "vert_index","type": "Int" },
              { "name": "tcoord_index","type": "Int" },
              { "name": "color_index","type": "Int" },
              { "name": "normal_index","type": "Int" },
              { "name": "vertlist","type": "lime.utils.Float32Array" },
              { "name": "tcoordlist","type": "lime.utils.Float32Array" },
              { "name": "colorlist","type": "lime.utils.Float32Array" },
              { "name": "normallist","type": "lime.utils.Float32Array" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"short_id",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"short_id() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"set_color",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_color(val:phoenix.Color) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "val","type": "phoenix.Color" }
            ]
          },
        {
          "name":"get_group",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_group() : Int",
            "return":": Int",
            "args":[
            ]
          },
        {
          "name":"str",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"str() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(v:phoenix.geometry.Vertex) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "phoenix.geometry.Vertex" }
            ]
          },
        {
          "name":"set_visible",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_visible(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"get_clip",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_clip() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"set_depth",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_depth(val:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "val","type": "Float" }
            ]
          },
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_rotation:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_rotation","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_position:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_position","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_shader",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_shader(val:phoenix.Shader) : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
              { "name": "val","type": "phoenix.Shader" }
            ]
          },
        {
          "name":"get_clip_rect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_clip_rect() : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
            ]
          },
        {
          "name":"get_locked",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_locked() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"set_dirty",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_dirty(_dirty:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_dirty","type": "Bool" }
            ]
          },
        {
          "name":"set_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_texture(val:phoenix.Texture) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "val","type": "phoenix.Texture" }
            ]
          },
        {
          "name":"set_scale",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale(_scale:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_scale","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_primitive_type",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_primitive_type(val:phoenix.PrimitiveType) : phoenix.PrimitiveType",
            "return":": phoenix.PrimitiveType",
            "args":[
              { "name": "val","type": "phoenix.PrimitiveType" }
            ]
          },
        {
          "name":"get_depth",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_depth() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"set_group",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_group(val:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "val","type": "Int" }
            ]
          },
        {
          "name":"drop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"drop(?remove:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?remove","type": "Bool" }
            ]
          },
        {
          "name":"get_rotation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation() : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug.TraceDebugView",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.debug.DebugView" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"lines",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"lines : luxe.Text",
            "type":"luxe.Text",
            "doc":""
        },
        {
          "name":"max_lines",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"max_lines : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"logged",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"logged : Array<String>",
            "type":"Array<String>",
            "doc":""
        },
        {
          "name":"_last_logged_length",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_last_logged_length : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"add_line",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_line(_t:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_t","type": "String" }
            ]
          },
        {
          "name":"refresh_lines",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh_lines() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"on_trace",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"on_trace(v:Dynamic, ?inf:haxe.PosInfos) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "Dynamic" },
              { "name": "?inf","type": "haxe.PosInfos" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.ResourceManager",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"render_textures",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"render_textures : Map<String,phoenix.RenderTexture>",
            "type":"Map<String,phoenix.RenderTexture>",
            "doc":""
        },
        {
          "name":"text",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"text : Map<String,String>",
            "type":"Map<String,String>",
            "doc":""
        },
        {
          "name":"sounds",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"sounds : Map<String,String>",
            "type":"Map<String,String>",
            "doc":""
        },
        {
          "name":"textures",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"textures : Map<String,phoenix.Texture>",
            "type":"Map<String,phoenix.Texture>",
            "doc":""
        },
        {
          "name":"shaders",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shaders : Map<String,phoenix.Shader>",
            "type":"Map<String,phoenix.Shader>",
            "doc":""
        },
        {
          "name":"resourcelist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"resourcelist : Array<luxe.Resource>",
            "type":"Array<luxe.Resource>",
            "doc":""
        },
        {
          "name":"fonts",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"fonts : Map<String,phoenix.BitmapFont>",
            "type":"Map<String,phoenix.BitmapFont>",
            "doc":""
        },
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"data : Map<String,lime.utils.ByteArray>",
            "type":"Map<String,lime.utils.ByteArray>",
            "doc":""
        },
        {
          "name":"stats",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"stats : luxe.ResourceStats",
            "type":"luxe.ResourceStats",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(res:luxe.Resource) : Void",
            "return":": Void",
            "args":[
              { "name": "res","type": "luxe.Resource" }
            ]
          },
        {
          "name":"find_font",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_font(_name:String) : Null<phoenix.BitmapFont>",
            "return":": Null<phoenix.BitmapFont>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"uncache",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uncache(res:luxe.Resource) : Void",
            "return":": Void",
            "args":[
              { "name": "res","type": "luxe.Resource" }
            ]
          },
        {
          "name":"find_render_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_render_texture(_name:String) : Null<phoenix.RenderTexture>",
            "return":": Null<phoenix.RenderTexture>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"find_data",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_data(_name:String) : Null<lime.utils.ByteArray>",
            "return":": Null<lime.utils.ByteArray>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"clear",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clear(?and_persistent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?and_persistent","type": "Bool" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(res:luxe.Resource) : Void",
            "return":": Void",
            "args":[
              { "name": "res","type": "luxe.Resource" }
            ]
          },
        {
          "name":"find_text",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_text(_name:String) : Null<String>",
            "return":": Null<String>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"find_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_texture(_name:String) : Null<phoenix.Texture>",
            "return":": Null<phoenix.Texture>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"find_shader",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_shader(_name:String) : Null<phoenix.Shader>",
            "return":": Null<phoenix.Shader>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"find_sound",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_sound(_name:String) : Null<String>",
            "return":": Null<String>",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"find",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find(id:String) : luxe.Resource",
            "return":": luxe.Resource",
            "args":[
              { "name": "id","type": "String" }
            ]
          },
        {
          "name":"cache",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"cache(res:luxe.Resource) : Void",
            "return":": Void",
            "args":[
              { "name": "res","type": "luxe.Resource" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Screen",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"h",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"h : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"y",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"y : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"x",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"x : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"core",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        },
        {
          "name":"w",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"w : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"cursor",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"cursor : luxe.Cursor",
            "type":"luxe.Cursor",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"mid",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"mid : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"point_inside",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"point_inside(_p:luxe.Vector) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_core:luxe.Core, _x:Int, _y:Int, _w:Int, _h:Int) ",
            "return":"",
            "args":[
              { "name": "?_core","type": "luxe.Core" },
              { "name": "_x","type": "Int" },
              { "name": "_y","type": "Int" },
              { "name": "_w","type": "Int" },
              { "name": "_h","type": "Int" }
            ]
          },
        {
          "name":"get_mid",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_mid() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.BatchGroup",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"post_render",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"post_render : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"pre_render",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"pre_render : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_pre:phoenix.Batcher->Void, _post:phoenix.Batcher->Void) ",
            "return":"",
            "args":[
              { "name": "_pre","type": "phoenix.Batcher->Void" },
              { "name": "_post","type": "phoenix.Batcher->Void" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Batcher",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"vcolorBuffers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vcolorBuffers : Array<lime.gl.GLBuffer>",
            "type":"Array<lime.gl.GLBuffer>",
            "doc":""
        },
        {
          "name":"static_normallist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_normallist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"vert_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vert_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"buffer_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"buffer_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"normal_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"normal_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"tcoord_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tcoord_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"static_colors",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_colors : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"renderer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"renderer : phoenix.Renderer",
            "type":"phoenix.Renderer",
            "doc":""
        },
        {
          "name":"normals",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"normals : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"color_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"color_attribute : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"static_batched_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_batched_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"projectionmatrix_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"projectionmatrix_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"tcoords",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tcoords : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"tex0_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex0_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"static_normals",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_normals : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"tex1_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex1_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"dynamic_batched_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dynamic_batched_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"static_tcoordlist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_tcoordlist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"static_colorlist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_colorlist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"tex2_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex2_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"tex3_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex3_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"view",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"view : phoenix.Camera",
            "type":"phoenix.Camera",
            "doc":""
        },
        {
          "name":"verts",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"verts : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"tex4_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex4_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"visible_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"visible_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"enabled",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"enabled : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"vertlist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vertlist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"tex5_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex5_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"groups",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"groups : Map<Int,Array>",
            "type":"Map<Int,Array>",
            "doc":""
        },
        {
          "name":"static_vertlist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_vertlist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"colors",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"colors : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"normalBuffers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"normalBuffers : Array<lime.gl.GLBuffer>",
            "type":"Array<lime.gl.GLBuffer>",
            "doc":""
        },
        {
          "name":"tex6_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex6_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"normallist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"normallist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"tex7_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tex7_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"geometry : luxe.structural.BalancedBinarySearchTree<phoenix.geometry.GeometryKey,phoenix.geometry.Geometry>",
            "type":"luxe.structural.BalancedBinarySearchTree<phoenix.geometry.GeometryKey,phoenix.geometry.Geometry>",
            "doc":""
        },
        {
          "name":"tcoordBuffers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tcoordBuffers : Array<lime.gl.GLBuffer>",
            "type":"Array<lime.gl.GLBuffer>",
            "doc":""
        },
        {
          "name":"tree_changed",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tree_changed : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"tcoordlist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"tcoordlist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        },
        {
          "name":"buffer_index",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"buffer_index : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"modelviewmatrix_attribute",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"modelviewmatrix_attribute : lime.gl.GLUniformLocation",
            "type":"lime.gl.GLUniformLocation",
            "doc":""
        },
        {
          "name":"log",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"log : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"static_verts",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_verts : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"static_tcoords",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_tcoords : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"vertexBuffers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"vertexBuffers : Array<lime.gl.GLBuffer>",
            "type":"Array<lime.gl.GLBuffer>",
            "doc":""
        },
        {
          "name":"draw_calls",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"draw_calls : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"colorlist",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"colorlist : lime.utils.Float32Array",
            "type":"lime.utils.Float32Array",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"layer",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"layer : Int",
            "doc":"",
            "type":"Int",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"add_group",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_group(_group:Int, _pre_render:phoenix.Batcher->Void, _post_render:phoenix.Batcher->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_group","type": "Int" },
              { "name": "_pre_render","type": "phoenix.Batcher->Void" },
              { "name": "_post_render","type": "phoenix.Batcher->Void" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"submit_current_vertex_list",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"submit_current_vertex_list(type:phoenix.PrimitiveType) : Void",
            "return":": Void",
            "args":[
              { "name": "type","type": "phoenix.PrimitiveType" }
            ]
          },
        {
          "name":"geometry_batch",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"geometry_batch(geom:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "geom","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"geometry_batch_static",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"geometry_batch_static(geom:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "geom","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"geometry_compare",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"geometry_compare(a:phoenix.geometry.GeometryKey, b:phoenix.geometry.GeometryKey) : Int",
            "return":": Int",
            "args":[
              { "name": "a","type": "phoenix.geometry.GeometryKey" },
              { "name": "b","type": "phoenix.geometry.GeometryKey" }
            ]
          },
        {
          "name":"batch",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"batch(?persist_immediate:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?persist_immediate","type": "Bool" }
            ]
          },
        {
          "name":"draw",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"draw(?persist_immediate:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?persist_immediate","type": "Bool" }
            ]
          },
        {
          "name":"_enable_attributes",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_enable_attributes() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"blend_mode",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"blend_mode(?_src_mode:phoenix.BlendMode, ?_dst_mode:phoenix.BlendMode) : Void",
            "return":": Void",
            "args":[
              { "name": "?_src_mode","type": "phoenix.BlendMode" },
              { "name": "?_dst_mode","type": "phoenix.BlendMode" }
            ]
          },
        {
          "name":"list_geometry",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"list_geometry() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"shader_activate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"shader_activate(_shader:phoenix.Shader) : Void",
            "return":": Void",
            "args":[
              { "name": "_shader","type": "phoenix.Shader" }
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(_geom:phoenix.geometry.Geometry, ?_remove_batcher_from_geometry:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_geom","type": "phoenix.geometry.Geometry" },
              { "name": "?_remove_batcher_from_geometry","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_r:phoenix.Renderer, ?_name:String) ",
            "return":"",
            "args":[
              { "name": "_r","type": "phoenix.Renderer" },
              { "name": "?_name","type": "String" }
            ]
          },
        {
          "name":"compare_rule",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"compare_rule(a:phoenix.geometry.GeometryKey, b:phoenix.geometry.GeometryKey) : Int",
            "return":": Int",
            "args":[
              { "name": "a","type": "phoenix.geometry.GeometryKey" },
              { "name": "b","type": "phoenix.geometry.GeometryKey" }
            ]
          },
        {
          "name":"submit_static_geometry",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"submit_static_geometry(geom:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "geom","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(_geom:phoenix.geometry.Geometry, ?_force_add:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_geom","type": "phoenix.geometry.Geometry" },
              { "name": "?_force_add","type": "Bool" }
            ]
          },
        {
          "name":"_debug",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_debug(v:String) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "String" }
            ]
          },
        {
          "name":"compare_rule_to_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"compare_rule_to_string(r:Int) : String",
            "return":": String",
            "args":[
              { "name": "r","type": "Int" }
            ]
          },
        {
          "name":"compare",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"compare(other:phoenix.Batcher) : Int",
            "return":": Int",
            "args":[
              { "name": "other","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"_disable_attributes",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_disable_attributes() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_layer",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_layer(_layer:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "_layer","type": "Int" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Color",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"a",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"a : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"refreshing",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"refreshing : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"is_hsl",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"is_hsl : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"is_hsv",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"is_hsv : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"g",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"g : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"serialized",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"serialized : Dynamic",
            "doc":"",
            "type":"Dynamic",
            "type_desc":"(read only)"
        },
        {
          "name":"r",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"r : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"b",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"b : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set_r",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_r(_r:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_r","type": "Float" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
            ]
          },
        {
          "name":"rgb",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rgb(?_rgb:Int) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "?_rgb","type": "Int" }
            ]
          },
        {
          "name":"set_g",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_g(_g:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_g","type": "Float" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"random",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"random(?_include_alpha:Bool) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "?_include_alpha","type": "Bool" }
            ]
          },
        {
          "name":"get_serialized",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialized() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"toColorHSV",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toColorHSV() : phoenix.ColorHSV",
            "return":": phoenix.ColorHSV",
            "args":[
            ]
          },
        {
          "name":"set_b",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_b(_b:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_b","type": "Float" }
            ]
          },
        {
          "name":"maxRGB",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"maxRGB() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"minRGB",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"minRGB() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"tween",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"tween(?_time_in_seconds:Float, ?_properties_to_tween:luxe.options.ColorOptions, ?_override:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?_time_in_seconds","type": "Float" },
              { "name": "?_properties_to_tween","type": "luxe.options.ColorOptions" },
              { "name": "?_override","type": "Bool" }
            ]
          },
        {
          "name":"toColorHSL",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toColorHSL() : phoenix.ColorHSL",
            "return":": phoenix.ColorHSL",
            "args":[
            ]
          },
        {
          "name":"from_int",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"from_int(_i:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "_i","type": "Int" }
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_r:Float, ?_g:Float, ?_b:Float, ?_a:Float) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "?_r","type": "Float" },
              { "name": "?_g","type": "Float" },
              { "name": "?_b","type": "Float" },
              { "name": "?_a","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_r:Float, ?_g:Float, ?_b:Float, ?_a:Float) ",
            "return":"",
            "args":[
              { "name": "?_r","type": "Float" },
              { "name": "?_g","type": "Float" },
              { "name": "?_b","type": "Float" },
              { "name": "?_a","type": "Float" }
            ]
          },
        {
          "name":"fromColorHSV",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromColorHSV(_color_hsv:phoenix.ColorHSV) : Void",
            "return":": Void",
            "args":[
              { "name": "_color_hsv","type": "phoenix.ColorHSV" }
            ]
          },
        {
          "name":"fromColorHSL",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromColorHSL(_color_hsl:phoenix.ColorHSL) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "_color_hsl","type": "phoenix.ColorHSL" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.MotionPathActuator",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.tween.actuators.SimpleActuator" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"haxe_doc",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"haxe_doc : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(target:Dynamic, duration:Float, properties:Dynamic) ",
            "return":"",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "properties","type": "Dynamic" }
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(currentTime:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "currentTime","type": "Float" }
            ]
          },
        {
          "name":"initialize",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"initialize() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"apply",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"apply() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":"* @author Joshua Granick"
    },
    { "name": "phoenix.defaults.Shaders",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"fragment_textured",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"fragment_textured() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"vertex_shader",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"vertex_shader() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"fragment_untextured",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"fragment_untextured() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.structural.BinarySearchTreeNode",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"key",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"key : luxe.structural.BinarySearchTreeNode.K",
            "type":"luxe.structural.BinarySearchTreeNode.K",
            "doc":""
        },
        {
          "name":"right",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"right : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTreeNode.K,luxe.structural.BinarySearchTreeNode.T>",
            "type":"luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTreeNode.K,luxe.structural.BinarySearchTreeNode.T>",
            "doc":""
        },
        {
          "name":"left",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"left : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTreeNode.K,luxe.structural.BinarySearchTreeNode.T>",
            "type":"luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTreeNode.K,luxe.structural.BinarySearchTreeNode.T>",
            "doc":""
        },
        {
          "name":"nodecount",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"nodecount : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"value",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"value : luxe.structural.BinarySearchTreeNode.T",
            "type":"luxe.structural.BinarySearchTreeNode.T",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_key:luxe.structural.BinarySearchTreeNode.K, _value:luxe.structural.BinarySearchTreeNode.T, _nodecount:Int) ",
            "return":"",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTreeNode.K" },
              { "name": "_value","type": "luxe.structural.BinarySearchTreeNode.T" },
              { "name": "_nodecount","type": "Int" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.json.JSONTokenizer",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"obj",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"obj : Dynamic",
            "type":"Dynamic",
            "doc":"The object that will get parsed from the JSON string"
        },
        {
          "name":"ch",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"ch : String",
            "type":"String",
            "doc":"The current character in the JSON string during parsing"
        },
        {
          "name":"strict",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"strict : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"loc",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"loc : Int",
            "type":"Int",
            "doc":"The current parsing location in the JSON string"
        },
        {
          "name":"jsonString",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"jsonString : String",
            "type":"String",
            "doc":"The JSON string to be parsed"
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Constructs a new JSONDecoder to parse a JSON string \n     * into a native object.\n     *\n     * @param s The JSON string to be converted\n     *      into a native object",
            "signature":"new(s:String, strict:Bool) ",
            "return":"",
            "args":[
              { "name": "s","type": "String" },
              { "name": "strict","type": "Bool" }
            ]
          },
        {
          "name":"readString",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Attempts to read a string from the input string.  Places\n     * the character location at the first character after the\n     * string.  It is assumed that ch is \" before this method is called.\n     *\n     * @return the JSONToken with the string value if a string could\n     *      be read.  Throws an error otherwise.",
            "signature":"readString() : luxe.utils.json.JSONToken",
            "return":": luxe.utils.json.JSONToken",
            "args":[
            ]
          },
        {
          "name":"nextChar",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Reads the next character in the input\n     * string and advances the character location.\n     *\n     * @return The next character in the input string, or\n     *      null if we've read past the end.",
            "signature":"nextChar() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"getNextToken",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Gets the next token in the input sting and advances\n    * the character to the next character after the token",
            "signature":"getNextToken() : luxe.utils.json.JSONToken",
            "return":": luxe.utils.json.JSONToken",
            "args":[
            ]
          },
        {
          "name":"isWhiteSpace",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Determines if a character is whitespace or not.\n     *\n     * @return True if the character passed in is a whitespace\n     *  character",
            "signature":"isWhiteSpace(ch:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "ch","type": "String" }
            ]
          },
        {
          "name":"skipComments",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Skips comments in the input string, either\n     * single-line or multi-line.  Advances the character\n     * to the first position after the end of the comment.",
            "signature":"skipComments() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"skipWhite",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Skip any whitespace in the input string and advances\n     * the character to the first character after any possible\n     * whitespace.",
            "signature":"skipWhite() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"isDigit",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Determines if a character is a digit [0-9].\n     *\n     * @return True if the character passed in is a digit",
            "signature":"isDigit(ch:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "ch","type": "String" }
            ]
          },
        {
          "name":"readNumber",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Attempts to read a number from the input string.  Places\n     * the character location at the first character after the\n     * number.\n     * \n     * @return The JSONToken with the number value if a number could\n     *      be read.  Throws an error otherwise.",
            "signature":"readNumber() : luxe.utils.json.JSONToken",
            "return":": luxe.utils.json.JSONToken",
            "args":[
            ]
          },
        {
          "name":"skipIgnored",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Advances the character location past any\n     * sort of white space and comments",
            "signature":"skipIgnored() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"isHexDigit",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Determines if a character is a digit [0-9].\n     *\n     * @return True if the character passed in is a digit",
            "signature":"isHexDigit(ch:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "ch","type": "String" }
            ]
          },
        {
          "name":"parseError",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Raises a parsing error with a specified message, tacking\n     * on the error location and the original string.\n     *\n     * @param message The message indicating why the error occurred",
            "signature":"parseError(message:String) : Void",
            "return":": Void",
            "args":[
              { "name": "message","type": "String" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Vector",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"listen_y",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_y : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"ignore_listeners",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"ignore_listeners : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"listen_z",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_z : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"w",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"w : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"listen_x",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listen_x : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"serialized",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"serialized : Dynamic",
            "doc":"",
            "type":"Dynamic",
            "type_desc":"(read only)"
        },
        {
          "name":"normalized",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"normalized : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"(read only)"
        },
        {
          "name":"z",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"z : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"length",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"length : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"lengthsq",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"lengthsq : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"(read only)"
        },
        {
          "name":"angle2D",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"angle2D : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"y",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"y : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"inverted",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"inverted : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"(read only)"
        },
        {
          "name":"x",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"x : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"get_lengthsq",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_lengthsq() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"addScalar",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"addScalar(v:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "v","type": "Float" }
            ]
          },
        {
          "name":"SubtractScalar",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"SubtractScalar(a:phoenix.Vector, b:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "Float" }
            ]
          },
        {
          "name":"cross",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"cross(a:phoenix.Vector, b:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"get_angle2D",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_angle2D() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"toDegrees",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toDegrees() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"get_inverted",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_inverted() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"AddScalar",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"AddScalar(a:phoenix.Vector, b:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "Float" }
            ]
          },
        {
          "name":"set_xyzw",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_xyzw(_x:Float, _y:Float, _z:Float, _w:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "_z","type": "Float" },
              { "name": "_w","type": "Float" }
            ]
          },
        {
          "name":"applyProjection",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"applyProjection(m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"Cross",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Cross(a:phoenix.Vector, b:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"ToDegrees",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"ToDegrees(_radian_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_radian_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"multiplyScalar",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyScalar(v:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "v","type": "Float" }
            ]
          },
        {
          "name":"get_normalized",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_normalized() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"set_y",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_y(_y:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_y","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_x:Float, ?_y:Float, ?_z:Float, ?_w:Float) ",
            "return":"",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_z","type": "Float" },
              { "name": "?_w","type": "Float" }
            ]
          },
        {
          "name":"rotationTo",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rotationTo(other:phoenix.Vector) : Float",
            "return":": Float",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(other:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"get_length",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_length() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"transformDirection",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"transformDirection(m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"RotationTo",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"RotationTo(a:phoenix.Vector, b:phoenix.Vector) : Float",
            "return":": Float",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"applyMatrix4",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"applyMatrix4(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"truncate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"truncate(max:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "max","type": "Float" }
            ]
          },
        {
          "name":"Add",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Add(a:phoenix.Vector, b:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"dot",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"dot(other:phoenix.Vector) : Float",
            "return":": Float",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"setEulerFromQuaternion",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setEulerFromQuaternion(q:phoenix.Quaternion, ?order:String) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "q","type": "phoenix.Quaternion" },
              { "name": "?order","type": "String" }
            ]
          },
        {
          "name":"copy_from",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"copy_from(_other:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"get_serialized",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialized() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"divide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"divide(other:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_x",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_x(_x:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_x","type": "Float" }
            ]
          },
        {
          "name":"set_xy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_xy(_x:Float, _y:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" }
            ]
          },
        {
          "name":"equals",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"equals(other:phoenix.Vector) : Bool",
            "return":": Bool",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"DivideVector",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"DivideVector(a:phoenix.Vector, b:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_xyz",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_xyz(_x:Float, _y:Float, _z:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "_z","type": "Float" }
            ]
          },
        {
          "name":"subtract",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"subtract(other:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"multiply",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiply(other:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "other","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_angle2D",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_angle2D(value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "value","type": "Float" }
            ]
          },
        {
          "name":"applyQuaternion",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"applyQuaternion(q:phoenix.Quaternion) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "q","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"setEulerFromRotationMatrix",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setEulerFromRotationMatrix(m:phoenix.Matrix4, ?order:String) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "m","type": "phoenix.Matrix4" },
              { "name": "?order","type": "String" }
            ]
          },
        {
          "name":"Divide",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Divide(a:phoenix.Vector, b:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "Float" }
            ]
          },
        {
          "name":"divideScalar",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"divideScalar(v:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "v","type": "Float" }
            ]
          },
        {
          "name":"toRadians",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toRadians() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_x:Float, ?_y:Float, ?_z:Float, ?_w:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_z","type": "Float" },
              { "name": "?_w","type": "Float" }
            ]
          },
        {
          "name":"MultiplyVector",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"MultiplyVector(a:phoenix.Vector, b:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"Subtract",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Subtract(a:phoenix.Vector, b:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"Multiply",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Multiply(a:phoenix.Vector, b:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "a","type": "phoenix.Vector" },
              { "name": "b","type": "Float" }
            ]
          },
        {
          "name":"ToRadians",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"ToRadians(_degree_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_degree_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"normalize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"normalize() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"set_length",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_length(value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "value","type": "Float" }
            ]
          },
        {
          "name":"set_z",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_z(_z:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_z","type": "Float" }
            ]
          },
        {
          "name":"subtractScalar",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"subtractScalar(v:Float) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "v","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.GeometryState",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"log",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"log : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"dirty",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dirty : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"texture",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"texture : phoenix.Texture",
            "doc":"",
            "type":"phoenix.Texture",
            "type_desc":"read/write"
        },
        {
          "name":"group",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"group : Int",
            "doc":"",
            "type":"Int",
            "type_desc":"read/write"
        },
        {
          "name":"primitive_type",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"primitive_type : phoenix.PrimitiveType",
            "doc":"",
            "type":"phoenix.PrimitiveType",
            "type_desc":"read/write"
        },
        {
          "name":"shader",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"shader : phoenix.Shader",
            "doc":"",
            "type":"phoenix.Shader",
            "type_desc":"read/write"
        },
        {
          "name":"depth",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"depth : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"clip",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clip : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"clip_rect",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clip_rect : phoenix.Rectangle",
            "doc":"",
            "type":"phoenix.Rectangle",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_texture(val:phoenix.Texture) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "val","type": "phoenix.Texture" }
            ]
          },
        {
          "name":"set_clip",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"set_primitive_type",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_primitive_type(val:phoenix.PrimitiveType) : phoenix.PrimitiveType",
            "return":": phoenix.PrimitiveType",
            "args":[
              { "name": "val","type": "phoenix.PrimitiveType" }
            ]
          },
        {
          "name":"clean",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clean() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"str",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"str() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(other:phoenix.geometry.GeometryState) : Void",
            "return":": Void",
            "args":[
              { "name": "other","type": "phoenix.geometry.GeometryState" }
            ]
          },
        {
          "name":"set_shader",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_shader(val:phoenix.Shader) : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
              { "name": "val","type": "phoenix.Shader" }
            ]
          },
        {
          "name":"set_group",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_group(val:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "val","type": "Int" }
            ]
          },
        {
          "name":"clone_onto",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone_onto(_other:phoenix.geometry.GeometryState) : Void",
            "return":": Void",
            "args":[
              { "name": "_other","type": "phoenix.geometry.GeometryState" }
            ]
          },
        {
          "name":"set_clip_rect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip_rect(val:phoenix.Rectangle) : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
              { "name": "val","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"set_depth",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_depth(val:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "val","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.easing.QuadEaseOut",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
        { "name":"luxe.tween.easing.IEasing" }
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "k","type": "Float" }
            ]
          },
        {
          "name":"ease",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ease(t:Float, b:Float, c:Float, d:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "t","type": "Float" },
              { "name": "b","type": "Float" },
              { "name": "c","type": "Float" },
              { "name": "d","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.defaults.FontString",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"data() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.UUID",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"hexChars",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"hexChars : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"rule30",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"rule30 : luxe.utils._UUID.Rule30",
            "type":"luxe.utils._UUID.Rule30",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"generate_undashed",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Generate a Universal Unique Identifier string.\n        For example: B859AA4C0A96CA94F7F82DBECD24205F",
            "signature":"generate_undashed() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"hex",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"hex(sbuf:StringBuf, n:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "sbuf","type": "StringBuf" },
              { "name": "n","type": "Int" }
            ]
          },
        {
          "name":"get",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Generate a Universal Unique Identifier string, with dashes according to the spec.\n        For example: BD5FB953-0BD3-D6B4-82AB-E642B7036246",
            "signature":"get() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "Luxe",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"timescale",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"timescale : Float",
            "type":"Float",
            "doc":"The scale of time that affects the update rates and deltas"
        },
        {
          "name":"dt",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"dt : Float",
            "type":"Float",
            "doc":"The time the last frame took, this value can be altered or fixed using `Luxe.timescale` or `Luxe.fixed_timestep`"
        },
        {
          "name":"draw",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"draw : luxe.Draw",
            "type":"luxe.Draw",
            "doc":"Access to the drawing features"
        },
        {
          "name":"timer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"timer : luxe.Timer",
            "type":"luxe.Timer",
            "doc":"Access to the timing features"
        },
        {
          "name":"utils",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"utils : luxe.utils.Utils",
            "type":"luxe.utils.Utils",
            "doc":"Access to the different utilities"
        },
        {
          "name":"camera",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"camera : luxe.Camera",
            "type":"luxe.Camera",
            "doc":"Access to the default camera"
        },
        {
          "name":"renderer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"renderer : phoenix.Renderer",
            "type":"phoenix.Renderer",
            "doc":"Access to the rendering system"
        },
        {
          "name":"fixed_timestep",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"fixed_timestep : Float",
            "type":"Float",
            "doc":"Set this for a fixed timestep value"
        },
        {
          "name":"audio",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"audio : luxe.Audio",
            "type":"luxe.Audio",
            "doc":"Access to the audio features"
        },
        {
          "name":"mouse",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"mouse : luxe.Vector",
            "type":"luxe.Vector",
            "doc":"The last known mouse position"
        },
        {
          "name":"core",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":"Direct access to the core engine"
        },
        {
          "name":"debug",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"debug : luxe.Debug",
            "type":"luxe.Debug",
            "doc":"Access to the core debug features"
        },
        {
          "name":"events",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"events : luxe.Events",
            "type":"luxe.Events",
            "doc":"Access to the global event system"
        },
        {
          "name":"physics",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"physics : luxe.Physics",
            "type":"luxe.Physics",
            "doc":"Access to the physics bindings, if any"
        },
        {
          "name":"resources",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"resources : luxe.ResourceManager",
            "type":"luxe.ResourceManager",
            "doc":"Access to the default resource manager"
        },
        {
          "name":"input",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"input : luxe.Input",
            "type":"luxe.Input",
            "doc":"Access to the input features"
        },
        {
          "name":"scene",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"scene : luxe.Scene",
            "type":"luxe.Scene",
            "doc":"Access to the default luxe scene"
        }
      ],
      "properties":[
        {
          "name":"screen",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"screen : luxe.Screen",
            "doc":"Access to information about the game window (sizes, cursor etc)",
            "type":"luxe.Screen",
            "type_desc":"(read only)"
        },
        {
          "name":"time",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":false,
            "signature":"time : Float",
            "doc":"The current time in seconds, highest precision from the platform",
            "type":"Float",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"get_screen",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_screen() : luxe.Screen",
            "return":": luxe.Screen",
            "args":[
            ]
          },
        {
          "name":"loadSound",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load a sound resource",
            "signature":"loadSound(_name:String, _id:String, ?_is_music:Bool, ?_onloaded:luxe.SoundResource->Void) : luxe.SoundResource",
            "return":": luxe.SoundResource",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_id","type": "String" },
              { "name": "?_is_music","type": "Bool" },
              { "name": "?_onloaded","type": "luxe.SoundResource->Void" }
            ]
          },
        {
          "name":"loadShader",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load a shader resource",
            "signature":"loadShader(?_ps_id:String, ?_vs_id:String, ?_onloaded:phoenix.Shader->Void) : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
              { "name": "?_ps_id","type": "String" },
              { "name": "?_vs_id","type": "String" },
              { "name": "?_onloaded","type": "phoenix.Shader->Void" }
            ]
          },
        {
          "name":"fileDialogSave",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Open the system file save dialog picker",
            "signature":"fileDialogSave(_title:String, _text:String) : String",
            "return":": String",
            "args":[
              { "name": "_title","type": "String" },
              { "name": "_text","type": "String" }
            ]
          },
        {
          "name":"get_time",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_time() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"loadTextures",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load multiple texture/image resources, useful for preloading",
            "signature":"loadTextures(_ids:Array<String>, ?_onloaded:Array->Void, ?_silent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_ids","type": "Array<String>" },
              { "name": "?_onloaded","type": "Array->Void" },
              { "name": "?_silent","type": "Bool" }
            ]
          },
        {
          "name":"loadText",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load a text resource",
            "signature":"loadText(_id:String, ?_onloaded:luxe.TextResource->Void) : luxe.TextResource",
            "return":": luxe.TextResource",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "?_onloaded","type": "luxe.TextResource->Void" }
            ]
          },
        {
          "name":"loadFont",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load a font resource",
            "signature":"loadFont(_id:String, ?_path:String, ?_onloaded:phoenix.BitmapFont->Void) : phoenix.BitmapFont",
            "return":": phoenix.BitmapFont",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "?_path","type": "String" },
              { "name": "?_onloaded","type": "phoenix.BitmapFont->Void" }
            ]
          },
        {
          "name":"addGeometry",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Add geometry to the default batcher",
            "signature":"addGeometry(_geom:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "_geom","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"loadData",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load a bytes/data resource",
            "signature":"loadData(_id:String, ?_onloaded:luxe.DataResource->Void) : luxe.DataResource",
            "return":": luxe.DataResource",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "?_onloaded","type": "luxe.DataResource->Void" }
            ]
          },
        {
          "name":"loadTexture",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Load a texture/image resource",
            "signature":"loadTexture(_id:String, ?_onloaded:phoenix.Texture->Void, ?_silent:Bool, ?_asset_bytes:lime.utils.ByteArray) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "?_onloaded","type": "phoenix.Texture->Void" },
              { "name": "?_silent","type": "Bool" },
              { "name": "?_asset_bytes","type": "lime.utils.ByteArray" }
            ]
          },
        {
          "name":"fileDialogFolder",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Open the system folder dialog picker",
            "signature":"fileDialogFolder(_title:String, _text:String) : String",
            "return":": String",
            "args":[
              { "name": "_title","type": "String" },
              { "name": "_text","type": "String" }
            ]
          },
        {
          "name":"fileDialogOpen",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Open the system file open dialog picker",
            "signature":"fileDialogOpen(_title:String, _text:String) : String",
            "return":": String",
            "args":[
              { "name": "_title","type": "String" },
              { "name": "_text","type": "String" }
            ]
          },
        {
          "name":"addGroup",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Add a geometry group to the default batcher",
            "signature":"addGroup(_group:Int, ?_pre_render:phoenix.Batcher->Void, ?_post_render:phoenix.Batcher->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_group","type": "Int" },
              { "name": "?_pre_render","type": "phoenix.Batcher->Void" },
              { "name": "?_post_render","type": "phoenix.Batcher->Void" }
            ]
          },
        {
          "name":"shutdown",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"shutdown the engine and quit",
            "signature":"shutdown() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"openURL",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Open the system browser with the given URL",
            "signature":"openURL(_url:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_url","type": "String" }
            ]
          },
        {
          "name":"showConsole",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"show/hide the debug console programmatically",
            "signature":"showConsole(_show:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_show","type": "Bool" }
            ]
          },
        {
          "name":"createBatcher",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Create a batcher, convenience for create batcher, add batcher, and create camera for the batcher.",
            "signature":"createBatcher(?_name:String, ?_camera:luxe.Camera, ?_add:Bool) : phoenix.Batcher",
            "return":": phoenix.Batcher",
            "args":[
              { "name": "?_name","type": "String" },
              { "name": "?_camera","type": "luxe.Camera" },
              { "name": "?_add","type": "Bool" }
            ]
          },
        {
          "name":"removeGeometry",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"Remove geometry to the default batcher",
            "signature":"removeGeometry(_geom:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "_geom","type": "phoenix.geometry.Geometry" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.GeometryUtils",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"luxe",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"luxe : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"intersect_ray_plane",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"intersect_ray_plane(_ray_start:luxe.Vector, _ray_dir:luxe.Vector, _plane_normal:luxe.Vector, _plane_point:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_ray_start","type": "luxe.Vector" },
              { "name": "_ray_dir","type": "luxe.Vector" },
              { "name": "_plane_normal","type": "luxe.Vector" },
              { "name": "_plane_point","type": "luxe.Vector" }
            ]
          },
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_luxe:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_luxe","type": "luxe.Core" }
            ]
          },
        {
          "name":"segments_for_smooth_circle",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"segments_for_smooth_circle(_radius:Float, ?_smooth:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_radius","type": "Float" },
              { "name": "?_smooth","type": "Float" }
            ]
          },
        {
          "name":"point_in_polygon",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"point_in_polygon(_point:luxe.Vector, _offset:luxe.Vector, _verts:Array<luxe.Vector>) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_point","type": "luxe.Vector" },
              { "name": "_offset","type": "luxe.Vector" },
              { "name": "_verts","type": "Array<luxe.Vector>" }
            ]
          },
        {
          "name":"random_point_in_unit_circle",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"random_point_in_unit_circle() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils._UUID.Rule30",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"cells",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"cells : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"cellsLength",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"cellsLength : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"createWithLength",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"createWithLength(length:Int) : luxe.utils._UUID.Rule30",
            "return":": luxe.utils._UUID.Rule30",
            "args":[
              { "name": "length","type": "Int" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(cells:String) ",
            "return":"",
            "args":[
              { "name": "cells","type": "String" }
            ]
          },
        {
          "name":"getBit",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"getBit() : Int",
            "return":": Int",
            "args":[
            ]
          },
        {
          "name":"getBits",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"getBits(length:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "length","type": "Int" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "luxe.Events",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"event_connections",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"event_connections : Map<String,luxe._Events.EventConnection>",
            "type":"Map<String,luxe._Events.EventConnection>",
            "doc":""
        },
        {
          "name":"event_filters",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"event_filters : Map<String,Array>",
            "type":"Map<String,Array>",
            "doc":""
        },
        {
          "name":"event_slots",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"event_slots : Map<String,Array>",
            "type":"Map<String,Array>",
            "doc":""
        },
        {
          "name":"event_queue",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"event_queue : Map<String,luxe._Events.EventObject>",
            "type":"Map<String,luxe._Events.EventObject>",
            "doc":""
        },
        {
          "name":"event_schedules",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"event_schedules : Map<String,haxe.Timer>",
            "type":"Map<String,haxe.Timer>",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"clear",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clear() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"schedule",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"schedule(time:Float, event_name:String, ?properties:schedule.T) : String",
            "return":": String",
            "args":[
              { "name": "time","type": "Float" },
              { "name": "event_name","type": "String" },
              { "name": "?properties","type": "schedule.T" }
            ]
          },
        {
          "name":"listen",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"listen(_event_name:String, _listener:listen.T->Void) : String",
            "return":": String",
            "args":[
              { "name": "_event_name","type": "String" },
              { "name": "_listener","type": "listen.T->Void" }
            ]
          },
        {
          "name":"queue",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"queue(event_name:String, ?properties:queue.T) : String",
            "return":": String",
            "args":[
              { "name": "event_name","type": "String" },
              { "name": "?properties","type": "queue.T" }
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"does_filter_event",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"does_filter_event(_filter:String, _event:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_filter","type": "String" },
              { "name": "_event","type": "String" }
            ]
          },
        {
          "name":"tag_properties",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"tag_properties(_properties:Dynamic, _name:String, _count:Int) : fire.T",
            "return":": fire.T",
            "args":[
              { "name": "_properties","type": "Dynamic" },
              { "name": "_name","type": "String" },
              { "name": "_count","type": "Int" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"fire",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fire(_event_name:String, ?_properties:fire.T) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_event_name","type": "String" },
              { "name": "?_properties","type": "fire.T" }
            ]
          },
        {
          "name":"unschedule",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"unschedule(schedule_id:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "schedule_id","type": "String" }
            ]
          },
        {
          "name":"dequeue",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"dequeue(event_id:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "event_id","type": "String" }
            ]
          },
        {
          "name":"disconnect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"disconnect(event_id:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "event_id","type": "String" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.MethodActuator",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.tween.actuators.SimpleActuator" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"tweenProperties",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"tweenProperties : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"currentParameters",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"currentParameters : Array<Dynamic>",
            "type":"Array<Dynamic>",
            "doc":""
        },
        {
          "name":"haxe_doc",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"haxe_doc : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"complete",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"complete(?sendEvent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?sendEvent","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(target:Dynamic, duration:Float, properties:Dynamic) ",
            "return":"",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "properties","type": "Dynamic" }
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(currentTime:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "currentTime","type": "Float" }
            ]
          },
        {
          "name":"initialize",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"initialize() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"apply",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"apply() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":"* @author Joshua Granick\n * @version 1.2"
    },
    { "name": "luxe.tween.easing.IEasing",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"haxe_doc",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"haxe_doc : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "k","type": "Float" }
            ]
          },
        {
          "name":"ease",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ease(t:Float, b:Float, c:Float, d:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "t","type": "Float" },
              { "name": "b","type": "Float" },
              { "name": "c","type": "Float" },
              { "name": "d","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":"* @author Joshua Granick\n * @author Philippe / http://philippe.elsass.me"
    },
    { "name": "luxe.Entity",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Objects" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"children",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"children : Array<luxe.Entity>",
            "type":"Array<luxe.Entity>",
            "doc":""
        },
        {
          "name":"inited",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"inited : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"options",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"options : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"started",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"started : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_destroyed",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_destroyed : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"serialize",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"serialize : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"fixed_rate_timer",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"fixed_rate_timer : haxe.Timer",
            "type":"haxe.Timer",
            "doc":""
        },
        {
          "name":"events",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"events : luxe.Events",
            "type":"luxe.Events",
            "doc":""
        },
        {
          "name":"_components",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_components : luxe.components.Components",
            "type":"luxe.components.Components",
            "doc":""
        },
        {
          "name":"_last_scale",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_last_scale : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"pos_local",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos_local : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"rotation",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"rotation_local",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation_local : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scale_local",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scale_local : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"components",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"components : Map",
            "doc":"",
            "type":"Map",
            "type_desc":"(read only)"
        },
        {
          "name":"parent",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"parent : luxe.Entity",
            "doc":"",
            "type":"luxe.Entity",
            "type_desc":"read/write"
        },
        {
          "name":"fixed_rate",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"fixed_rate : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"pos",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scale",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scale : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scene",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scene : luxe.Scene",
            "doc":"",
            "type":"luxe.Scene",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"get_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"_ongamepadbuttondown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ongamepadbuttondown(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"_stop_fixed_rate_timer",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_stop_fixed_rate_timer() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_ongamepadaxis",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ongamepadaxis(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"_scale_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_scale_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"get",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get(_name:String, ?_in_children:Bool) : get.T",
            "return":": get.T",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_in_children","type": "Bool" }
            ]
          },
        {
          "name":"_attach_listener",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_attach_listener(_v:luxe.Vector, listener:Float->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "luxe.Vector" },
              { "name": "listener","type": "Float->Void" }
            ]
          },
        {
          "name":"_onkeyup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_onkeyup(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"_onmousewheel",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_onmousewheel(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"_ongamepadhat",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ongamepadhat(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(?_name:String, ?_data:remove.T) : Bool",
            "return":": Bool",
            "args":[
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "remove.T" }
            ]
          },
        {
          "name":"get_scene",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scene() : luxe.Scene",
            "return":": luxe.Scene",
            "args":[
            ]
          },
        {
          "name":"serialize_to_disk",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"serialize_to_disk(_destination_path:String, ?_parent_write:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_destination_path","type": "String" },
              { "name": "?_parent_write","type": "Bool" }
            ]
          },
        {
          "name":"get_scale_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale_local() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"get_parent",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_parent() : luxe.Entity",
            "return":": luxe.Entity",
            "args":[
            ]
          },
        {
          "name":"set_fixed_rate",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_fixed_rate(_rate:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_rate","type": "Float" }
            ]
          },
        {
          "name":"internal_parent_rotation_changed",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"internal_parent_rotation_changed(_parent_rotation:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_parent_rotation","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_rotation_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_rotation_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_r:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_r","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_init",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_init() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_fixed_update",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_fixed_update() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_update",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_update(dt:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "dt","type": "Float" }
            ]
          },
        {
          "name":"get_any",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_any(_name:String, ?_in_children:Bool, ?_first_only:Bool) : Array<get_any.T>",
            "return":": Array<get_any.T>",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_in_children","type": "Bool" },
              { "name": "?_first_only","type": "Bool" }
            ]
          },
        {
          "name":"_ontouchend",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ontouchend(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"get_components",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_components() : Map<String,luxe.components.Component>",
            "return":": Map<String,luxe.components.Component>",
            "args":[
            ]
          },
        {
          "name":"set_rotation_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation_local(_r:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_r","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale(_s:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_s","type": "luxe.Vector" }
            ]
          },
        {
          "name":"get_fixed_rate",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_fixed_rate() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"internal_parent_scale_changed",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"internal_parent_scale_changed(_parent_scale:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_parent_scale","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_add_child",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_add_child(child:luxe.Entity) : Void",
            "return":": Void",
            "args":[
              { "name": "child","type": "luxe.Entity" }
            ]
          },
        {
          "name":"get_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"_onmousedown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_onmousedown(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"_onmousemove",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_onmousemove(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"_oninputdown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_oninputdown(_name:String, e:luxe.InputEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "e","type": "luxe.InputEvent" }
            ]
          },
        {
          "name":"get_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"get_rotation_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation_local() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"_reset",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_reset() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_options:luxe.options.EntityOptions<new.T>) ",
            "return":"",
            "args":[
              { "name": "?_options","type": "luxe.options.EntityOptions<new.T>" }
            ]
          },
        {
          "name":"remove_child",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove_child(child:luxe.Entity) : Void",
            "return":": Void",
            "args":[
              { "name": "child","type": "luxe.Entity" }
            ]
          },
        {
          "name":"set_pos_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos_local(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"add_child",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_child(child:luxe.Entity) : Void",
            "return":": Void",
            "args":[
              { "name": "child","type": "luxe.Entity" }
            ]
          },
        {
          "name":"get_serialize_data",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialize_data() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(type:Class<add.T1>, ?_name:String, ?_data:add.T2) : add.T1",
            "return":": add.T1",
            "args":[
              { "name": "type","type": "Class<add.T1>" },
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "add.T2" }
            ]
          },
        {
          "name":"_ontouchbegin",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ontouchbegin(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"_onmouseup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_onmouseup(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"_ontouchmove",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ontouchmove(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"internal_parent_pos_changed",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"internal_parent_pos_changed(_parent_pos:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_parent_pos","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_pos_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_pos_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"_oninputup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_oninputup(_name:String, e:luxe.InputEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "e","type": "luxe.InputEvent" }
            ]
          },
        {
          "name":"_start_fixed_rate_timer",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_start_fixed_rate_timer(_rate:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_rate","type": "Float" }
            ]
          },
        {
          "name":"get_pos_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos_local() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"_ongamepadball",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ongamepadball(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"has",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"has(_name:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"_onkeydown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_onkeydown(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"set_scene",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scene(_scene:luxe.Scene) : luxe.Scene",
            "return":": luxe.Scene",
            "args":[
              { "name": "_scene","type": "luxe.Scene" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_scale_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale_local(_s:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_s","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_parent",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_parent(other:luxe.Entity) : luxe.Entity",
            "return":": luxe.Entity",
            "args":[
              { "name": "other","type": "luxe.Entity" }
            ]
          },
        {
          "name":"_ongamepadbuttonup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ongamepadbuttonup(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.BitmapFont",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Resource" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"onload",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"onload : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"pages",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"pages : Map<Int,phoenix.Texture>",
            "type":"Map<Int,phoenix.Texture>",
            "doc":""
        },
        {
          "name":"characters",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"characters : Map<Int,phoenix.Character>",
            "type":"Map<Int,phoenix.Character>",
            "doc":""
        },
        {
          "name":"kernings",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"kernings : Map<phoenix.KerningKey,Int>",
            "type":"Map<phoenix.KerningKey,Int>",
            "doc":""
        },
        {
          "name":"line_height",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"line_height : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"font_character_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"font_character_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"on_pages_loaded",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"on_pages_loaded : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"font_size",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"font_size : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"pages_loaded",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"pages_loaded : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"dimensions",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dimensions : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"spacing",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"spacing : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"scale",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"scale : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"line_widths",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"line_widths : Array<Float>",
            "type":"Array<Float>",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"one_page_loaded",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"one_page_loaded(t:phoenix.Texture) : Void",
            "return":": Void",
            "args":[
              { "name": "t","type": "phoenix.Texture" }
            ]
          },
        {
          "name":"get_kerning",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_kerning(_glyph:Int, _index:Int) : Null<Int>",
            "return":": Null<Int>",
            "args":[
              { "name": "_glyph","type": "Int" },
              { "name": "_index","type": "Int" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_resource_manager:luxe.ResourceManager) ",
            "return":"",
            "args":[
              { "name": "?_resource_manager","type": "luxe.ResourceManager" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"set_kerning",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_kerning(_glyph:Int, _index:Int, _amount:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "_glyph","type": "Int" },
              { "name": "_index","type": "Int" },
              { "name": "_amount","type": "Int" }
            ]
          },
        {
          "name":"draw_text",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"draw_text(options:Dynamic) : phoenix.geometry.CompositeGeometry",
            "return":": phoenix.geometry.CompositeGeometry",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"get_text_dimensions",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_text_dimensions(_string:String, _scale:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_string","type": "String" },
              { "name": "_scale","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_tokenize_font_line",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_tokenize_font_line(_line_tokens:Array<String>) : Map<String,phoenix.KeyValuePair>",
            "return":": Map<String,phoenix.KeyValuePair>",
            "args":[
              { "name": "_line_tokens","type": "Array<String>" }
            ]
          },
        {
          "name":"load_from_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"load_from_string(?_bitmap_file:String, ?_folder:String, ?onloaded:phoenix.BitmapFont->Void, ?custom_pages:Array<phoenix.Texture>) : Void",
            "return":": Void",
            "args":[
              { "name": "?_bitmap_file","type": "String" },
              { "name": "?_folder","type": "String" },
              { "name": "?onloaded","type": "phoenix.BitmapFont->Void" },
              { "name": "?custom_pages","type": "Array<phoenix.Texture>" }
            ]
          },
        {
          "name":"on_all_pages_loaded",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"on_all_pages_loaded() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_character",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_character(_index:Int, _char_info:phoenix.Character) : Void",
            "return":": Void",
            "args":[
              { "name": "_index","type": "Int" },
              { "name": "_char_info","type": "phoenix.Character" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.PlaneGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_uv_cache",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_uv_cache : luxe.Rectangle",
            "type":"luxe.Rectangle",
            "doc":""
        },
        {
          "name":"is_set",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"is_set : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"flipy",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"flipy : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"flipx",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"flipx : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(quad:luxe.Rectangle, y:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "quad","type": "luxe.Rectangle" },
              { "name": "y","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"set_flipy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_flipy(_val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_val","type": "Bool" }
            ]
          },
        {
          "name":"uv_space",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uv_space(_rect:luxe.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_rect","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"set_flipx",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_flipx(_val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_val","type": "Bool" }
            ]
          },
        {
          "name":"uv",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uv(_rect:luxe.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_rect","type": "luxe.Rectangle" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Core",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"more_verbose",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"more_verbose : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"lime",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"lime : lime.Lime",
            "type":"lime.Lime",
            "doc":""
        },
        {
          "name":"_mouse_pos",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_mouse_pos : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"screen",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"screen : luxe.Screen",
            "type":"luxe.Screen",
            "doc":""
        },
        {
          "name":"end_dt",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"end_dt : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"touches_down",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"touches_down : Map<Int,luxe.TouchEvent>",
            "type":"Map<Int,luxe.TouchEvent>",
            "doc":""
        },
        {
          "name":"_touch_pos",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_touch_pos : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"renderer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"renderer : phoenix.Renderer",
            "type":"phoenix.Renderer",
            "doc":""
        },
        {
          "name":"version",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"version : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"host",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"host : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"debug",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"debug : luxe.Debug",
            "type":"luxe.Debug",
            "doc":""
        },
        {
          "name":"events",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"events : luxe.Events",
            "type":"luxe.Events",
            "doc":""
        },
        {
          "name":"physics",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"physics : luxe.Physics",
            "type":"luxe.Physics",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"input",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"input : luxe.Input",
            "type":"luxe.Input",
            "doc":""
        },
        {
          "name":"verbose",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"verbose : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"core_thread",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core_thread : cpp.vm.Thread",
            "type":"cpp.vm.Thread",
            "doc":""
        },
        {
          "name":"console_visible",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"console_visible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"draw",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"draw : luxe.Draw",
            "type":"luxe.Draw",
            "doc":""
        },
        {
          "name":"dt",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dt : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"shutting_down",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shutting_down : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"config",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"config : lime.LimeConfig",
            "type":"lime.LimeConfig",
            "doc":""
        },
        {
          "name":"has_shutdown",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"has_shutdown : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_update_handlers",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_update_handlers : Map<String,null>",
            "type":"Map<String,null>",
            "doc":""
        },
        {
          "name":"log",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"log : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"time",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"time : luxe.Timer",
            "type":"luxe.Timer",
            "doc":""
        },
        {
          "name":"thread_message",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"thread_message : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"audio",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"audio : luxe.Audio",
            "type":"luxe.Audio",
            "doc":""
        },
        {
          "name":"scene",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"scene : luxe.Scene",
            "type":"luxe.Scene",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"onresize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onresize(e:null<null,null>) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "null<null,null>" }
            ]
          },
        {
          "name":"ontouchend",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ontouchend(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"render",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"render() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"add_internal_update",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_internal_update(_update:Float->Void) : String",
            "return":": String",
            "args":[
              { "name": "_update","type": "Float->Void" }
            ]
          },
        {
          "name":"onmousedown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousedown(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"ongamepadbuttondown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadbuttondown(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"onmousewheel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousewheel(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"ontouchmove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ontouchmove(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"onmouseup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmouseup(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"ongamepadhat",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadhat(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"ongamepadbuttonup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadbuttonup(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"load",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"load(library:String, method:String, ?args:Int) : Dynamic",
            "return":": Dynamic",
            "args":[
              { "name": "library","type": "String" },
              { "name": "method","type": "String" },
              { "name": "?args","type": "Int" }
            ]
          },
        {
          "name":"shutdown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"shutdown() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onkeydown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeydown(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_host:Dynamic) ",
            "return":"",
            "args":[
              { "name": "_host","type": "Dynamic" }
            ]
          },
        {
          "name":"oninputdown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"oninputdown(_name:String, e:luxe.InputEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "e","type": "luxe.InputEvent" }
            ]
          },
        {
          "name":"onmousemove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousemove(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"ongamepadaxis",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadaxis(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"oninputup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"oninputup(_name:String, e:luxe.InputEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "e","type": "luxe.InputEvent" }
            ]
          },
        {
          "name":"_debug",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_debug(value:Dynamic, ?_verbose:Bool, ?_more_verbose:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "value","type": "Dynamic" },
              { "name": "?_verbose","type": "Bool" },
              { "name": "?_more_verbose","type": "Bool" }
            ]
          },
        {
          "name":"ready",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ready(_lime:lime.Lime) : Void",
            "return":": Void",
            "args":[
              { "name": "_lime","type": "lime.Lime" }
            ]
          },
        {
          "name":"show_console",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show_console(?_show:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?_show","type": "Bool" }
            ]
          },
        {
          "name":"onkeyup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeyup(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"ontouchbegin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ontouchbegin(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"ongamepadball",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadball(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"init",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_renderer",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_renderer(_renderer:phoenix.Renderer) : Void",
            "return":": Void",
            "args":[
              { "name": "_renderer","type": "phoenix.Renderer" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.GenericActuator",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
        { "name":"luxe.tween.actuators.IGenericActuator" }
      ],
      "members":[
        {
          "name":"properties",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"properties : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"target",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"target : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"_ease",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_ease : luxe.tween.easing.IEasing",
            "type":"luxe.tween.easing.IEasing",
            "doc":""
        },
        {
          "name":"_onRepeat",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_onRepeat : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"_onRepeatParams",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_onRepeatParams : Array<Dynamic>",
            "type":"Array<Dynamic>",
            "doc":""
        },
        {
          "name":"_onUpdate",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_onUpdate : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"timescaled",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"timescaled : Bool",
            "type":"Bool",
            "doc":"* Specify whether this should be scaled by the global timescale\n     * @param   _value      Whether or not it should be\n     * @return      The current actuator instance"
        },
        {
          "name":"_autoVisible",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_autoVisible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_onCompleteParams",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_onCompleteParams : Array<Dynamic>",
            "type":"Array<Dynamic>",
            "doc":""
        },
        {
          "name":"_delay",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_delay : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"_reflect",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_reflect : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_smartRotation",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_smartRotation : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_onComplete",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_onComplete : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"_snapping",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_snapping : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"_reverse",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_reverse : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"special",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"special : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_onUpdateParams",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_onUpdateParams : Array<Dynamic>",
            "type":"Array<Dynamic>",
            "doc":""
        },
        {
          "name":"duration",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"duration : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"_repeat",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_repeat : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"autoVisible",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* sometimes drawing performs faster when objects are set to visible = false rather than only alpha = 0. autoVisible toggles automatically based on alpha values\n     * @param   value       Whether autoVisible should be enabled (Default is true)\n     * @return      The current actuator instance",
            "signature":"autoVisible(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"complete",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"complete(?sendEvent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?sendEvent","type": "Bool" }
            ]
          },
        {
          "name":"delay",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Increases the delay before a tween is executed\n     * @param   duration        The amount of seconds to delay\n     * @return      The current actuator instance",
            "signature":"delay(duration:Float) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "duration","type": "Float" }
            ]
          },
        {
          "name":"move",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"move() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"timescale",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"timescale(?_value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?_value","type": "Bool" }
            ]
          },
        {
          "name":"resume",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"resume() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"stop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"stop(properties:Dynamic, complete:Bool, sendEvent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "properties","type": "Dynamic" },
              { "name": "complete","type": "Bool" },
              { "name": "sendEvent","type": "Bool" }
            ]
          },
        {
          "name":"smartRotation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Enabling smartRotation can prevent undesired results when tweening rotation values\n     * @param   value       Whether smart rotation should be enabled (Default is true)\n     * @return      The current actuator instance",
            "signature":"smartRotation(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"onComplete",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Defines a function which will be called when the tween finishes\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
            "signature":"onComplete(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"onRepeat",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Defines a function which will be called when the tween repeats\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
            "signature":"onRepeat(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"onUpdate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Defines a function which will be called when the tween updates\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
            "signature":"onUpdate(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"reverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Sets if the tween should be handled in reverse\n     * @param   value       Whether the tween should be reversed (Default is true)\n     * @return      The current actuator instance",
            "signature":"reverse(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"change() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"snapping",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Snapping causes tween values to be rounded automatically\n     * @param   value       Whether tween values should be rounded (Default is true)\n     * @return      The current actuator instance",
            "signature":"snapping(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(target:Dynamic, duration:Float, properties:Dynamic) ",
            "return":"",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "properties","type": "Dynamic" }
            ]
          },
        {
          "name":"pause",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"pause() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"reflect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Automatically changes the reverse value when the tween repeats. Repeat must be enabled for this to have any effect\n     * @param   value       Whether reflect should be enabled (Default is true)\n     * @return      The current actuator instance",
            "signature":"reflect(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"repeat",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Repeats the tween after it finishes\n     * @param   times       The number of times you would like the tween to repeat, or -1 if you would like to repeat the tween indefinitely (Default is -1)\n     * @return      The current actuator instance",
            "signature":"repeat(?times:Int) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?times","type": "Int" }
            ]
          },
        {
          "name":"apply",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"apply() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"ease",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Sets the easing which is used when running the tween\n     * @param   easing      An easing equation, like Elastic.easeIn or Quad.easeOut\n     * @return      The current actuator instance",
            "signature":"ease(easing:luxe.tween.easing.IEasing) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "easing","type": "luxe.tween.easing.IEasing" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug._ProfilerDebugView.ProfilerValue",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"offsets",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"offsets : Array<luxe.debug._ProfilerDebugView.ProfilerValue>",
            "type":"Array<luxe.debug._ProfilerDebugView.ProfilerValue>",
            "doc":""
        },
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"hidden",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"hidden : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"count",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"start : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"accum",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"accum : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"bar",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"bar : luxe.debug._ProfilerDebugView.ProfilerBar",
            "type":"luxe.debug._ProfilerDebugView.ProfilerBar",
            "doc":""
        },
        {
          "name":"history",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"history : Array<Float>",
            "type":"Array<Float>",
            "doc":""
        },
        {
          "name":"avg",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"avg : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_name:String, _bar:luxe.debug._ProfilerDebugView.ProfilerBar) ",
            "return":"",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_bar","type": "luxe.debug._ProfilerDebugView.ProfilerBar" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "luxe.debug.ProfilerDebugView",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.debug.DebugView" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"lists",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"lists : Map<String,luxe.debug._ProfilerDebugView.ProfilerValue>",
            "type":"Map<String,luxe.debug._ProfilerDebugView.ProfilerValue>",
            "doc":""
        },
        {
          "name":"_setup",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_setup : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"hide_item",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"hide_item(_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_id","type": "String" }
            ]
          },
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"start(_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_id","type": "String" }
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"add_offset",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"add_offset(_id:String, _offset:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "_offset","type": "String" }
            ]
          },
        {
          "name":"show_item",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"show_item(_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_id","type": "String" }
            ]
          },
        {
          "name":"end",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"end(_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_id","type": "String" }
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.structural.BalancedBinarySearchTreeNode",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"color",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"color : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"key",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"key : luxe.structural.BalancedBinarySearchTreeNode.K",
            "type":"luxe.structural.BalancedBinarySearchTreeNode.K",
            "doc":""
        },
        {
          "name":"right",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"right : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTreeNode.K,luxe.structural.BalancedBinarySearchTreeNode.T>",
            "type":"luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTreeNode.K,luxe.structural.BalancedBinarySearchTreeNode.T>",
            "doc":""
        },
        {
          "name":"left",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"left : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTreeNode.K,luxe.structural.BalancedBinarySearchTreeNode.T>",
            "type":"luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTreeNode.K,luxe.structural.BalancedBinarySearchTreeNode.T>",
            "doc":""
        },
        {
          "name":"nodecount",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"nodecount : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"value",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"value : luxe.structural.BalancedBinarySearchTreeNode.T",
            "type":"luxe.structural.BalancedBinarySearchTreeNode.T",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_key:luxe.structural.BalancedBinarySearchTreeNode.K, _value:luxe.structural.BalancedBinarySearchTreeNode.T, _nodecount:Int, _color:Bool) ",
            "return":"",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTreeNode.K" },
              { "name": "_value","type": "luxe.structural.BalancedBinarySearchTreeNode.T" },
              { "name": "_nodecount","type": "Int" },
              { "name": "_color","type": "Bool" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.IGenericActuator",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"autoVisible",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Flash performs faster when objects are set to visible = false rather than only alpha = 0. autoVisible toggles automatically based on alpha values\n     * @param   value       Whether autoVisible should be enabled (Default is true)\n     * @return      The current actuator instance",
            "signature":"autoVisible(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"delay",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Increases the delay before a tween is executed\n     * @param   duration        The amount of seconds to delay\n     * @return      The current actuator instance",
            "signature":"delay(duration:Float) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "duration","type": "Float" }
            ]
          },
        {
          "name":"timescale",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Specify whether this should be scaled by the global timescale\n     * @param   _value      Whether or not it should be\n     * @return      The current actuator instance",
            "signature":"timescale(?_value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?_value","type": "Bool" }
            ]
          },
        {
          "name":"snapping",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Snapping causes tween values to be rounded automatically\n     * @param   value       Whether tween values should be rounded (Default is true)\n     * @return      The current actuator instance",
            "signature":"snapping(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"smartRotation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Enabling smartRotation can prevent undesired results when tweening rotation values\n     * @param   value       Whether smart rotation should be enabled (Default is true)\n     * @return      The current actuator instance",
            "signature":"smartRotation(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"onComplete",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Defines a function which will be called when the tween finishes\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
            "signature":"onComplete(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"onRepeat",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Defines a function which will be called when the tween repeats\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
            "signature":"onRepeat(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"reflect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Automatically changes the reverse value when the tween repeats. Repeat must be enabled for this to have any effect\n     * @param   value       Whether reflect should be enabled (Default is true)\n     * @return      The current actuator instance",
            "signature":"reflect(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"repeat",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Repeats the tween after it finishes\n     * @param   times       The number of times you would like the tween to repeat, or -1 if you would like to repeat the tween indefinitely (Default is -1)\n     * @return      The current actuator instance",
            "signature":"repeat(?times:Int) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?times","type": "Int" }
            ]
          },
        {
          "name":"onUpdate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Defines a function which will be called when the tween updates\n     * @param   handler     The function you would like to be called\n     * @param   parameters      Parameters you would like to pass to the handler function when it is called\n     * @return      The current actuator instance",
            "signature":"onUpdate(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"reverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Sets if the tween should be handled in reverse\n     * @param   value       Whether the tween should be reversed (Default is true)\n     * @return      The current actuator instance",
            "signature":"reverse(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"ease",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Sets the easing which is used when running the tween\n     * @param   easing      An easing equation, like Elastic.easeIn or Quad.easeOut\n     * @return      The current actuator instance",
            "signature":"ease(easing:luxe.tween.easing.IEasing) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "easing","type": "luxe.tween.easing.IEasing" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Text",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Visual" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"text_options",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"text_options : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"composite_geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"composite_geometry : phoenix.geometry.CompositeGeometry",
            "type":"phoenix.geometry.CompositeGeometry",
            "doc":""
        },
        {
          "name":"font",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"font : phoenix.BitmapFont",
            "type":"phoenix.BitmapFont",
            "doc":""
        },
        {
          "name":"ready",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"ready : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_batcher",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"text",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"text : String",
            "doc":"",
            "type":"String",
            "type_desc":"read/write"
        },
        {
          "name":"textsize",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"textsize : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "_options","type": "Dynamic" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "v","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_color",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_color(c:luxe.Color) : luxe.Color",
            "return":": luxe.Color",
            "args":[
              { "name": "c","type": "luxe.Color" }
            ]
          },
        {
          "name":"set_visible",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_visible(b:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "b","type": "Bool" }
            ]
          },
        {
          "name":"onloaded",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onloaded(font:phoenix.BitmapFont) : Void",
            "return":": Void",
            "args":[
              { "name": "font","type": "phoenix.BitmapFont" }
            ]
          },
        {
          "name":"set_textsize",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_textsize(v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "v","type": "Float" }
            ]
          },
        {
          "name":"set_text",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_text(t:String) : String",
            "return":": String",
            "args":[
              { "name": "t","type": "String" }
            ]
          },
        {
          "name":"set_locked",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_locked(l:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "l","type": "Bool" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.JSON",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.utils.Rendering",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"gl_blend_mode_from_BlendMode",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"gl_blend_mode_from_BlendMode(_b:phoenix.BlendMode) : Int",
            "return":": Int",
            "args":[
              { "name": "_b","type": "phoenix.BlendMode" }
            ]
          },
        {
          "name":"get_elements_for_type",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_elements_for_type(type:phoenix.PrimitiveType, length:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "type","type": "phoenix.PrimitiveType" },
              { "name": "length","type": "Int" }
            ]
          },
        {
          "name":"get_opengl_primitive_type",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_opengl_primitive_type(type:phoenix.PrimitiveType) : Int",
            "return":": Int",
            "args":[
              { "name": "type","type": "phoenix.PrimitiveType" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug.DebugView",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Objects" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"visible",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"visible : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onkeydown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeydown(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"onmousemove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousemove(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onmousedown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousedown(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"onmousewheel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousewheel(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"onkeyup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeyup(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onmouseup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmouseup(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.ComplexGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"quads",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"quads : Map<String,phoenix.geometry.ComplexQuad>",
            "type":"Map<String,phoenix.geometry.ComplexQuad>",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"quad_add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_add(_options:Dynamic) : String",
            "return":": String",
            "args":[
              { "name": "_options","type": "Dynamic" }
            ]
          },
        {
          "name":"quad_flipx",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_flipx(_quad_id:String, _flip:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_flip","type": "Bool" }
            ]
          },
        {
          "name":"quad_flipy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_flipy(_quad_id:String, _flip:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_flip","type": "Bool" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "_options","type": "Dynamic" }
            ]
          },
        {
          "name":"clear",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clear() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"quad_show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_show(_quad_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" }
            ]
          },
        {
          "name":"quad_pos",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_pos(_quad_id:String, _p:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_p","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"quad_resize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_resize(_quad_id:String, _quad:phoenix.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_quad","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"quad_uv",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_uv(_quad_id:String, _uv:phoenix.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_uv","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"quad_alpha",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_alpha(_quad_id:String, _a:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_a","type": "Float" }
            ]
          },
        {
          "name":"quad_uv_space",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_uv_space(_quad_id:String, _uv:phoenix.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_uv","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"quad_remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_remove(_quad_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" }
            ]
          },
        {
          "name":"quad_hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_hide(_quad_id:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" }
            ]
          },
        {
          "name":"quad_color",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"quad_color(_quad_id:String, _c:phoenix.Color) : Void",
            "return":": Void",
            "args":[
              { "name": "_quad_id","type": "String" },
              { "name": "_c","type": "phoenix.Color" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.ComponentPath",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
        { "name":"luxe.tween.IComponentPath" }
      ],
      "members":[
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"start : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"paths",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"paths : Array<luxe.tween.BezierPath>",
            "type":"Array<luxe.tween.BezierPath>",
            "doc":""
        },
        {
          "name":"totalStrength",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"totalStrength : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"end",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"end : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"addPath",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"addPath(path:luxe.tween.BezierPath) : Void",
            "return":": Void",
            "args":[
              { "name": "path","type": "luxe.tween.BezierPath" }
            ]
          },
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "k","type": "Float" }
            ]
          },
        {
          "name":"get_end",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_end() : Float",
            "return":": Float",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.RenderState",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_used_program",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_used_program : lime.gl.GLProgram",
            "type":"lime.gl.GLProgram",
            "doc":""
        },
        {
          "name":"_viewport",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_viewport : phoenix.Rectangle",
            "type":"phoenix.Rectangle",
            "doc":""
        },
        {
          "name":"_last_line_width",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_last_line_width : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"cull_face",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"cull_face : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"depth_test",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"depth_test : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"renderer",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"renderer : phoenix.Renderer",
            "type":"phoenix.Renderer",
            "doc":""
        },
        {
          "name":"_bound_texture_2D",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_bound_texture_2D : lime.gl.GLTexture",
            "type":"lime.gl.GLTexture",
            "doc":""
        },
        {
          "name":"_active_texture",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_active_texture : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"viewport",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"viewport(x:Float, y:Float, w:Float, h:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "x","type": "Float" },
              { "name": "y","type": "Float" },
              { "name": "w","type": "Float" },
              { "name": "h","type": "Float" }
            ]
          },
        {
          "name":"lineWidth",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"lineWidth(_width:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_width","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_renderer:phoenix.Renderer) ",
            "return":"",
            "args":[
              { "name": "_renderer","type": "phoenix.Renderer" }
            ]
          },
        {
          "name":"bindTexture2D",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"bindTexture2D(tex:lime.gl.GLTexture) : Void",
            "return":": Void",
            "args":[
              { "name": "tex","type": "lime.gl.GLTexture" }
            ]
          },
        {
          "name":"enable",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"enable(what:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "what","type": "Int" }
            ]
          },
        {
          "name":"disable",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"disable(what:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "what","type": "Int" }
            ]
          },
        {
          "name":"useProgram",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"useProgram(program:lime.gl.GLProgram) : Void",
            "return":": Void",
            "args":[
              { "name": "program","type": "lime.gl.GLProgram" }
            ]
          },
        {
          "name":"activeTexture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"activeTexture(val:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "val","type": "Int" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.TextResource",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Resource" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"text",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"text : String",
            "type":"String",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_id:String, _text:String, _manager:luxe.ResourceManager) ",
            "return":"",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "_text","type": "String" },
              { "name": "_manager","type": "luxe.ResourceManager" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.ResourceStats",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"render_textures",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"render_textures : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"datas",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"datas : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"sounds",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"sounds : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"texts",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"texts : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"unknown",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"unknown : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"textures",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"textures : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"shaders",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"shaders : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"resources",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"resources : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"fonts",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"fonts : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"reset",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"reset() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug._ProfilerDebugView.ProfilerBar",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"text_item",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"text_item : luxe.Text",
            "type":"luxe.Text",
            "doc":""
        },
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"visible",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"visible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"height2",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"height2 : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"bg_geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"bg_geometry : phoenix.geometry.QuadGeometry",
            "type":"phoenix.geometry.QuadGeometry",
            "doc":""
        },
        {
          "name":"max",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"max : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"color_green",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"color_green : luxe.Color",
            "type":"luxe.Color",
            "doc":""
        },
        {
          "name":"bar_geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"bar_geometry : phoenix.geometry.QuadGeometry",
            "type":"phoenix.geometry.QuadGeometry",
            "doc":""
        },
        {
          "name":"graphbg_geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"graphbg_geometry : phoenix.geometry.QuadGeometry",
            "type":"phoenix.geometry.QuadGeometry",
            "doc":""
        },
        {
          "name":"history",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"history : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"color_normal",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"color_normal : luxe.Color",
            "type":"luxe.Color",
            "doc":""
        },
        {
          "name":"graph_geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"graph_geometry : phoenix.geometry.Geometry",
            "type":"phoenix.geometry.Geometry",
            "doc":""
        },
        {
          "name":"height",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"height : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"segment",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"segment : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"color_red",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"color_red : luxe.Color",
            "type":"luxe.Color",
            "doc":""
        },
        {
          "name":"width",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"width : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"text",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"text : String",
            "doc":"",
            "type":"String",
            "type_desc":"read/write"
        },
        {
          "name":"ping",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"ping : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"pos",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"value",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"value : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_name:String, _color:luxe.Color) ",
            "return":"",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_color","type": "luxe.Color" }
            ]
          },
        {
          "name":"set_ping",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_ping(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_value",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_value(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_text",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_text(_t:String) : String",
            "return":": String",
            "args":[
              { "name": "_t","type": "String" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "luxe.Input",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"mouse_bindings",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"mouse_bindings : Map<String,Map>",
            "type":"Map<String,Map>",
            "doc":""
        },
        {
          "name":"Keys",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"Keys : lime.helpers.Keys",
            "type":"lime.helpers.Keys",
            "doc":""
        },
        {
          "name":"Gamepad",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"Gamepad : lime.helpers.Gamepad",
            "type":"lime.helpers.Gamepad",
            "doc":""
        },
        {
          "name":"key_bindings",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"key_bindings : Map<String,Map>",
            "type":"Map<String,Map>",
            "doc":""
        },
        {
          "name":"core",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"gamepadbuttonup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"gamepadbuttonup(_event:luxe.GamepadEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.GamepadEvent" }
            ]
          },
        {
          "name":"process",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"gamepadbuttondown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"gamepadbuttondown(_event:luxe.GamepadEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.GamepadEvent" }
            ]
          },
        {
          "name":"check_named_mouse",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"check_named_mouse(e:luxe.MouseEvent, ?_down:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" },
              { "name": "?_down","type": "Bool" }
            ]
          },
        {
          "name":"gotinputfocus",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"gotinputfocus(_event:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"lostinputfocus",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"lostinputfocus(_event:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"add_mouse_binding",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_mouse_binding(_name:String, _value:luxe.MouseButton) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "luxe.MouseButton" }
            ]
          },
        {
          "name":"check_named_keys",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"check_named_keys(e:luxe.KeyEvent, ?_down:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" },
              { "name": "?_down","type": "Bool" }
            ]
          },
        {
          "name":"mousedown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"mousedown(_event:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"touchend",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"touchend(_event:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"gamepadaxis",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"gamepadaxis(_event:luxe.GamepadEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.GamepadEvent" }
            ]
          },
        {
          "name":"onkeydown",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeydown(_event:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"mousemove",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"mousemove(_event:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"touchbegin",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"touchbegin(_event:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"onchar",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onchar(_event:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"mouseclick",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"mouseclick(_event:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"mouseup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"mouseup(_event:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"gamepadhat",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"gamepadhat(_event:luxe.GamepadEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.GamepadEvent" }
            ]
          },
        {
          "name":"add_key_binding",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_key_binding(_name:String, _value:luxe.KeyValue) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_value","type": "luxe.KeyValue" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(_name:String, _binding_value:add.T) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_binding_value","type": "add.T" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"gamepadball",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"gamepadball(_event:luxe.GamepadEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.GamepadEvent" }
            ]
          },
        {
          "name":"onkeyup",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeyup(_event:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"init",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"touchmove",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"touchmove(_event:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"touchtap",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"touchtap(_event:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_event","type": "luxe.TouchEvent" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Resource",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"persistent",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"persistent : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"type",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"type : luxe.ResourceType",
            "type":"luxe.ResourceType",
            "doc":""
        },
        {
          "name":"time_created",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"time_created : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"time_to_load",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"time_to_load : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"manager",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"manager : luxe.ResourceManager",
            "type":"luxe.ResourceManager",
            "doc":""
        },
        {
          "name":"dropped",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dropped : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_manager:luxe.ResourceManager, _type:luxe.ResourceType, ?_load_time:Float) ",
            "return":"",
            "args":[
              { "name": "_manager","type": "luxe.ResourceManager" },
              { "name": "_type","type": "luxe.ResourceType" },
              { "name": "?_load_time","type": "Float" }
            ]
          },
        {
          "name":"drop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"drop() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Visual",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Entity" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_rotation_vector",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_rotation_vector : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"_has_custom_origin",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_has_custom_origin : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"ignore_texture_on_geometry_change",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"ignore_texture_on_geometry_change : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_rotation_quat",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_rotation_quat : phoenix.Quaternion",
            "type":"phoenix.Quaternion",
            "doc":""
        },
        {
          "name":"_creating_geometry",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_creating_geometry : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"geometry",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"geometry : phoenix.geometry.Geometry",
            "doc":"",
            "type":"phoenix.geometry.Geometry",
            "type_desc":"read/write"
        },
        {
          "name":"texture",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"texture : phoenix.Texture",
            "doc":"",
            "type":"phoenix.Texture",
            "type_desc":"read/write"
        },
        {
          "name":"color",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"color : luxe.Color",
            "doc":"",
            "type":"luxe.Color",
            "type_desc":"read/write"
        },
        {
          "name":"group",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"group : Int",
            "doc":"",
            "type":"Int",
            "type_desc":"read/write"
        },
        {
          "name":"size",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"size : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"locked",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"locked : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"visible",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"visible : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"origin",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"origin : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"shader",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"shader : phoenix.Shader",
            "doc":"",
            "type":"phoenix.Shader",
            "type_desc":"read/write"
        },
        {
          "name":"depth",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"depth : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"rotation_z",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation_z : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"radians",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"radians : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"clip",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clip : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"clip_rect",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clip_rect : luxe.Rectangle",
            "doc":"",
            "type":"luxe.Rectangle",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_r:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_r","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_clip",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"destroyed",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroyed() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_geometry",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_geometry(_g:phoenix.geometry.Geometry) : phoenix.geometry.Geometry",
            "return":": phoenix.geometry.Geometry",
            "args":[
              { "name": "_g","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_size_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_size_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"set_shader",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_shader(_s:phoenix.Shader) : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
              { "name": "_s","type": "phoenix.Shader" }
            ]
          },
        {
          "name":"set_radians",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_radians(_r:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_r","type": "Float" }
            ]
          },
        {
          "name":"set_clip_rect",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip_rect(val:luxe.Rectangle) : luxe.Rectangle",
            "return":": luxe.Rectangle",
            "args":[
              { "name": "val","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"set_origin",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_origin(_o:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_o","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_locked",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_locked(_l:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_l","type": "Bool" }
            ]
          },
        {
          "name":"set_texture",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_texture(_t:phoenix.Texture) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "_t","type": "phoenix.Texture" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_options:luxe.options.VisualOptions<new.T>) ",
            "return":"",
            "args":[
              { "name": "_options","type": "luxe.options.VisualOptions<new.T>" }
            ]
          },
        {
          "name":"set_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale(_v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_v","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_color",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_color(_c:luxe.Color) : luxe.Color",
            "return":": luxe.Color",
            "args":[
              { "name": "_c","type": "luxe.Color" }
            ]
          },
        {
          "name":"get_serialize_data",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialize_data() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"set_visible",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_visible(_v:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_v","type": "Bool" }
            ]
          },
        {
          "name":"set_group",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_group(_v:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "_v","type": "Int" }
            ]
          },
        {
          "name":"get_rotation_z",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation_z() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"on_geometry_created",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"on_geometry_created() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_create_geometry",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_create_geometry() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_depth",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_depth(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"set_size",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_size(_v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_v","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_rotation_z",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation_z(_r:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_r","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug.StatsDebugView",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.debug.DebugView" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"debug_geometry_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"debug_geometry_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"render_stats_text",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"render_stats_text : luxe.Text",
            "type":"luxe.Text",
            "doc":""
        },
        {
          "name":"debug_draw_call_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"debug_draw_call_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"hide_debug",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"hide_debug : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_render_stats",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_render_stats : luxe.debug.RenderStats",
            "type":"luxe.debug.RenderStats",
            "doc":""
        },
        {
          "name":"resource_stats_text",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"resource_stats_text : luxe.Text",
            "type":"luxe.Text",
            "doc":""
        },
        {
          "name":"resource_list_text",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"resource_list_text : luxe.Text",
            "type":"luxe.Text",
            "doc":""
        },
        {
          "name":"_last_render_stats",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_last_render_stats : luxe.debug.RenderStats",
            "type":"luxe.debug.RenderStats",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onkeydown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeydown(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"get_render_stats_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_render_stats_string() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"toggle_debug_stats",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toggle_debug_stats() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"get_resource_stats_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_resource_stats_string() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"refresh_render_stats",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh_render_stats() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"update_render_stats",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update_render_stats() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.IComponentPath",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"start : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "k","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Texture",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Resource" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"texture",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"texture : lime.gl.GLTexture",
            "type":"lime.gl.GLTexture",
            "doc":""
        },
        {
          "name":"lime_bitmap_data_from_bytes",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"lime_bitmap_data_from_bytes : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"lime_bitmap_data_height",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"lime_bitmap_data_height : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"height",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"height : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"_onload_handlers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"_onload_handlers : Array<null>",
            "type":"Array<null>",
            "doc":""
        },
        {
          "name":"actual_width",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"actual_width : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"loaded",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"loaded : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"slot",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"slot : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"lime_bitmap_data_get_pixels",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"lime_bitmap_data_get_pixels : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"actual_height",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"actual_height : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"width",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"width : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"lime_bitmap_data_width",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"lime_bitmap_data_width : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"data : lime.utils.UInt8Array",
            "type":"lime.utils.UInt8Array",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"onload",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":false,
            "set":true,
            "signature":"onload : Dynamic",
            "doc":"",
            "type":"Dynamic",
            "type_desc":"(write only)"
        },
        {
          "name":"filter_min",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"filter_min : phoenix.FilterType",
            "doc":"",
            "type":"phoenix.FilterType",
            "type_desc":"read/write"
        },
        {
          "name":"filter_mag",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"filter_mag : phoenix.FilterType",
            "doc":"",
            "type":"phoenix.FilterType",
            "type_desc":"read/write"
        },
        {
          "name":"filter",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"filter : phoenix.FilterType",
            "doc":"",
            "type":"phoenix.FilterType",
            "type_desc":"read/write"
        },
        {
          "name":"clamp",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"clamp : phoenix.ClampType",
            "doc":"",
            "type":"phoenix.ClampType",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"do_onload",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"do_onload() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"get_pixel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pixel(_pos:phoenix.Vector) : null<null,null,null,null>",
            "return":": null<null,null,null,null>",
            "args":[
              { "name": "_pos","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_onload",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_onload(f:phoenix.Texture->Void) : phoenix.Texture->Void",
            "return":": phoenix.Texture->Void",
            "args":[
              { "name": "f","type": "phoenix.Texture->Void" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"build",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"build(_size:phoenix.Vector, _color:phoenix.Color) : Void",
            "return":": Void",
            "args":[
              { "name": "_size","type": "phoenix.Vector" },
              { "name": "_color","type": "phoenix.Color" }
            ]
          },
        {
          "name":"bind",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"bind() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_pixel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pixel(_pos:phoenix.Vector, _color:phoenix.Color) : Void",
            "return":": Void",
            "args":[
              { "name": "_pos","type": "phoenix.Vector" },
              { "name": "_color","type": "phoenix.Color" }
            ]
          },
        {
          "name":"_set_clamp",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_set_clamp(_clamp:phoenix.ClampType) : Void",
            "return":": Void",
            "args":[
              { "name": "_clamp","type": "phoenix.ClampType" }
            ]
          },
        {
          "name":"generate_mipmaps",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"generate_mipmaps() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_set_filter",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_set_filter(_filter:phoenix.FilterType) : Void",
            "return":": Void",
            "args":[
              { "name": "_filter","type": "phoenix.FilterType" }
            ]
          },
        {
          "name":"lock",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"lock() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"set_filter_mag",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_filter_mag(_filter:phoenix.FilterType) : phoenix.FilterType",
            "return":": phoenix.FilterType",
            "args":[
              { "name": "_filter","type": "phoenix.FilterType" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_manager:luxe.ResourceManager, ?_type:luxe.ResourceType) ",
            "return":"",
            "args":[
              { "name": "_manager","type": "luxe.ResourceManager" },
              { "name": "?_type","type": "luxe.ResourceType" }
            ]
          },
        {
          "name":"create_from_bytes",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create_from_bytes(_asset_name:String, _asset_bytes:haxe.io.Bytes) : Void",
            "return":": Void",
            "args":[
              { "name": "_asset_name","type": "String" },
              { "name": "_asset_bytes","type": "haxe.io.Bytes" }
            ]
          },
        {
          "name":"_set_filter_mag",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_set_filter_mag(_filter:phoenix.FilterType) : Void",
            "return":": Void",
            "args":[
              { "name": "_filter","type": "phoenix.FilterType" }
            ]
          },
        {
          "name":"create_from_bytes_html",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create_from_bytes_html(_asset_name:String, _asset_bytes:Dynamic, _width:Float, _height:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_asset_name","type": "String" },
              { "name": "_asset_bytes","type": "Dynamic" },
              { "name": "_width","type": "Float" },
              { "name": "_height","type": "Float" }
            ]
          },
        {
          "name":"create_from_bytes_using_haxe",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create_from_bytes_using_haxe(_asset_name:String, _asset_bytes:haxe.io.Bytes) : Void",
            "return":": Void",
            "args":[
              { "name": "_asset_name","type": "String" },
              { "name": "_asset_bytes","type": "haxe.io.Bytes" }
            ]
          },
        {
          "name":"estimated_memory",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"estimated_memory() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"unlock",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"unlock() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_filter_min",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_filter_min(_filter:phoenix.FilterType) : phoenix.FilterType",
            "return":": phoenix.FilterType",
            "args":[
              { "name": "_filter","type": "phoenix.FilterType" }
            ]
          },
        {
          "name":"drop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"drop() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"activate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"activate(att:lime.gl.GLUniformLocation) : Void",
            "return":": Void",
            "args":[
              { "name": "att","type": "lime.gl.GLUniformLocation" }
            ]
          },
        {
          "name":"_set_filter_min",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_set_filter_min(_filter:phoenix.FilterType) : Void",
            "return":": Void",
            "args":[
              { "name": "_filter","type": "phoenix.FilterType" }
            ]
          },
        {
          "name":"set_filter",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_filter(_filter:phoenix.FilterType) : phoenix.FilterType",
            "return":": phoenix.FilterType",
            "args":[
              { "name": "_filter","type": "phoenix.FilterType" }
            ]
          },
        {
          "name":"set_clamp",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clamp(_clamp:phoenix.ClampType) : phoenix.ClampType",
            "return":": phoenix.ClampType",
            "args":[
              { "name": "_clamp","type": "phoenix.ClampType" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.json.JSONEncoder",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"jsonString",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"jsonString : String",
            "type":"String",
            "doc":"The string that is going to represent the object we're encoding"
        },
        {
          "name":"debug",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"debug : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"mapHash",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"mapHash(value:Map<String,Dynamic>) : Dynamic",
            "return":": Dynamic",
            "args":[
              { "name": "value","type": "Map<String,Dynamic>" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Creates a new JSONEncoder.\n     *\n     * @param o The object to encode as a JSON string",
            "signature":"new(value:Dynamic) ",
            "return":"",
            "args":[
              { "name": "value","type": "Dynamic" }
            ]
          },
        {
          "name":"convertToString",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Converts a value to it's JSON string equivalent.\n     *\n     * @param value The value to convert.  Could be any \n     *      type (object, number, array, etc)",
            "signature":"convertToString(value:Dynamic) : String",
            "return":": String",
            "args":[
              { "name": "value","type": "Dynamic" }
            ]
          },
        {
          "name":"escapeString",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Escapes a string accoding to the JSON specification.\n     *\n     * @param str The string to be escaped\n     * @return The string with escaped special characters\n     *      according to the JSON specification",
            "signature":"escapeString(str:String) : String",
            "return":": String",
            "args":[
              { "name": "str","type": "String" }
            ]
          },
        {
          "name":"arrayToString",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"<![CDATA[* Converts an array to it's JSON string equivalent\n     *\n     * @param a The array to convert\n     * @return The JSON string representation of <code>a</code>]]>",
            "signature":"arrayToString(a:Array<Dynamic>) : String",
            "return":": String",
            "args":[
              { "name": "a","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"instanceToString",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"<![CDATA[* Converts an instance object to it's JSON string equivalent\n   *\n   * @param o The instance object to convert\n   * @param cls The class of instance object\n   * @return The JSON string representation of <code>o</code>]]>",
            "signature":"instanceToString(o:Dynamic, cls:Class<Dynamic>) : String",
            "return":": String",
            "args":[
              { "name": "o","type": "Dynamic" },
              { "name": "cls","type": "Class<Dynamic>" }
            ]
          },
        {
          "name":"objectToString",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"<![CDATA[* Converts an object to it's JSON string equivalent\n     *\n     * @param o The object to convert\n     * @return The JSON string representation of <code>o</code>]]>",
            "signature":"objectToString(o:Dynamic) : String",
            "return":": String",
            "args":[
              { "name": "o","type": "Dynamic" }
            ]
          },
        {
          "name":"getString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Gets the JSON string from the encoder.\n     *\n     * @return The JSON string representation of the object\n     *      that was passed to the constructor",
            "signature":"getString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"_trace",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_trace(e:String) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "String" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Circle",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"y",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"y : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"r",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"r : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"x",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"x : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"point_inside",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"point_inside(_p:phoenix.Vector) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_p","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.Circle",
            "return":": phoenix.Circle",
            "args":[
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_x:Float, ?_y:Float, ?_r:Float) : phoenix.Circle",
            "return":": phoenix.Circle",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_r","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_x:Float, ?_y:Float, ?_r:Float) ",
            "return":"",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_r","type": "Float" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Sprite",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Visual" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_hit_box_vert_list",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_hit_box_vert_list : Array<luxe.Vector>",
            "type":"Array<luxe.Vector>",
            "doc":""
        },
        {
          "name":"_hit_origin_offset",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_hit_origin_offset : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"geometry_quad",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"geometry_quad : phoenix.geometry.QuadGeometry",
            "type":"phoenix.geometry.QuadGeometry",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"centered",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"centered : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"flipy",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"flipy : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"flipx",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"flipx : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"uv",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"uv : luxe.Rectangle",
            "doc":"",
            "type":"luxe.Rectangle",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"point_inside",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"point_inside(_p:luxe.Vector) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_attach_rect_listener",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_attach_rect_listener(_v:luxe.Rectangle, listener:Float->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "luxe.Rectangle" },
              { "name": "listener","type": "Float->Void" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:luxe.options.SpriteOptions<new.T>) ",
            "return":"",
            "args":[
              { "name": "options","type": "luxe.options.SpriteOptions<new.T>" }
            ]
          },
        {
          "name":"set_geometry",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_geometry(_g:phoenix.geometry.Geometry) : phoenix.geometry.Geometry",
            "return":": phoenix.geometry.Geometry",
            "args":[
              { "name": "_g","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"set_flipy",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_flipy(_v:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_v","type": "Bool" }
            ]
          },
        {
          "name":"get_serialize_data",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialize_data() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"point_inside_exact",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"point_inside_exact(_p:luxe.Vector) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_uv",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_uv(_uv:luxe.Rectangle) : luxe.Rectangle",
            "return":": luxe.Rectangle",
            "args":[
              { "name": "_uv","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"set_centered",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_centered(_c:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_c","type": "Bool" }
            ]
          },
        {
          "name":"on_geometry_created",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"on_geometry_created() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_flipx",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_flipx(_v:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_v","type": "Bool" }
            ]
          },
        {
          "name":"_uv_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_uv_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"set_size",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_size(_v:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_v","type": "luxe.Vector" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.QuadGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_uv_cache",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_uv_cache : luxe.Rectangle",
            "type":"luxe.Rectangle",
            "doc":""
        },
        {
          "name":"is_set",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"is_set : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"flipy",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"flipy : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        },
        {
          "name":"flipx",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"flipx : Bool",
            "doc":"",
            "type":"Bool",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(quad:luxe.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "quad","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          },
        {
          "name":"set_flipy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_flipy(_val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_val","type": "Bool" }
            ]
          },
        {
          "name":"resize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"resize(quad:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "quad","type": "luxe.Vector" }
            ]
          },
        {
          "name":"uv_space",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uv_space(_rect:luxe.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_rect","type": "luxe.Rectangle" }
            ]
          },
        {
          "name":"set_flipx",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_flipx(_val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_val","type": "Bool" }
            ]
          },
        {
          "name":"uv",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uv(_rect:luxe.Rectangle) : Void",
            "return":": Void",
            "args":[
              { "name": "_rect","type": "luxe.Rectangle" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.DataResource",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Resource" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"data : lime.utils.ByteArray",
            "type":"lime.utils.ByteArray",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_id:String, _data:lime.utils.ByteArray, _manager:luxe.ResourceManager) ",
            "return":"",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "_data","type": "lime.utils.ByteArray" },
              { "name": "_manager","type": "luxe.ResourceManager" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.debug.BatcherDebugView",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.debug.DebugView" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"as_immediate",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"as_immediate : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_tree_geom",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_tree_geom : phoenix.geometry.CompositeGeometry",
            "type":"phoenix.geometry.CompositeGeometry",
            "doc":""
        },
        {
          "name":"dragging",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dragging : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"dragstart",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dragstart : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"dragmstart",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"dragmstart : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"batcher",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"clear_batcher_tree",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clear_batcher_tree() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"draw_batcher_tree",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"draw_batcher_tree() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onmousedown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousedown(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"onmousewheel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousewheel(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"keystr",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"keystr(key:phoenix.geometry.GeometryKey, key2:phoenix.geometry.GeometryKey) : String",
            "return":": String",
            "args":[
              { "name": "key","type": "phoenix.geometry.GeometryKey" },
              { "name": "key2","type": "phoenix.geometry.GeometryKey" }
            ]
          },
        {
          "name":"onmouseup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmouseup(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"onmousemove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousemove(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"draw_geom_leaf",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"draw_geom_leaf(L:Bool, _leaf:luxe.structural.BalancedBinarySearchTreeNode<phoenix.geometry.GeometryKey,phoenix.geometry.Geometry>, _p:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "L","type": "Bool" },
              { "name": "_leaf","type": "luxe.structural.BalancedBinarySearchTreeNode<phoenix.geometry.GeometryKey,phoenix.geometry.Geometry>" },
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"hide",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"hide() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"show",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"draw_geom_node",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"draw_geom_node(l:Bool, _leaf:luxe.structural.BalancedBinarySearchTreeNode<phoenix.geometry.GeometryKey,phoenix.geometry.Geometry>, _p:luxe.Vector, ?_bbw:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "l","type": "Bool" },
              { "name": "_leaf","type": "luxe.structural.BalancedBinarySearchTreeNode<phoenix.geometry.GeometryKey,phoenix.geometry.Geometry>" },
              { "name": "_p","type": "luxe.Vector" },
              { "name": "?_bbw","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.Base64",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"encodeBytesData",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"encodeBytesData(bytesData:haxe.io.BytesData) : String",
            "return":": String",
            "args":[
              { "name": "bytesData","type": "haxe.io.BytesData" }
            ]
          },
        {
          "name":"encode",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"encode(_string:String) : String",
            "return":": String",
            "args":[
              { "name": "_string","type": "String" }
            ]
          },
        {
          "name":"decodeBytesData",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"decodeBytesData(base64:String) : haxe.io.BytesData",
            "return":": haxe.io.BytesData",
            "args":[
              { "name": "base64","type": "String" }
            ]
          },
        {
          "name":"decode",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"decode(_string:String) : String",
            "return":": String",
            "args":[
              { "name": "_string","type": "String" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.PropertyPathDetails",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.tween.actuators.PropertyDetails" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"path",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"path : luxe.tween.IComponentPath",
            "type":"luxe.tween.IComponentPath",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(target:Dynamic, propertyName:String, path:luxe.tween.IComponentPath, ?isField:Bool) ",
            "return":"",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "propertyName","type": "String" },
              { "name": "path","type": "luxe.tween.IComponentPath" },
              { "name": "?isField","type": "Bool" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.defaults.TinyButton",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"data() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.RendererStats",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"dynamic_batched_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dynamic_batched_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"group_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"group_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"batchers",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"batchers : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"geometry_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"geometry_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"visible_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"visible_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"static_batched_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"static_batched_count : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"draw_calls",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"draw_calls : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"reset",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"reset() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.Vertex",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"color",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"color : phoenix.Color",
            "type":"phoenix.Color",
            "doc":""
        },
        {
          "name":"normal",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"normal : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"pos",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"pos : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"uv",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv : phoenix.geometry.TextureCoordSet",
            "type":"phoenix.geometry.TextureCoordSet",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_pos:phoenix.Vector, ?_normal:phoenix.Vector, ?_color:phoenix.Color) ",
            "return":"",
            "args":[
              { "name": "_pos","type": "phoenix.Vector" },
              { "name": "?_normal","type": "phoenix.Vector" },
              { "name": "?_color","type": "phoenix.Color" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Timer",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"core",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"schedule",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"schedule(_time_in_seconds:Float, _on_time:Void, ?repeat:Bool) : haxe.Timer",
            "return":": haxe.Timer",
            "args":[
              { "name": "_time_in_seconds","type": "Float" },
              { "name": "_on_time","type": "Void" },
              { "name": "?repeat","type": "Bool" }
            ]
          },
        {
          "name":"process",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"destroy",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"init",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.RingGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.CircleGeometry" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.RenderPath",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"renderer",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"renderer : phoenix.Renderer",
            "type":"phoenix.Renderer",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_renderer:phoenix.Renderer) ",
            "return":"",
            "args":[
              { "name": "_renderer","type": "phoenix.Renderer" }
            ]
          },
        {
          "name":"render",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"render(_batchers:Array<phoenix.Batcher>, _stats:phoenix.RendererStats) : Void",
            "return":": Void",
            "args":[
              { "name": "_batchers","type": "Array<phoenix.Batcher>" },
              { "name": "_stats","type": "phoenix.RendererStats" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.PhysicsEngine",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"paused",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"paused : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"pause",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"pause(?_pause:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?_pause","type": "Bool" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"init",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Quaternion",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"euler",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"euler : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"z",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"z : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"y",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"y : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"x",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"x : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"w",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"w : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"setFromRotationMatrix",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setFromRotationMatrix(_m:phoenix.Matrix4) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"multiplyScalar",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyScalar(_scalar:Float) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_scalar","type": "Float" }
            ]
          },
        {
          "name":"set_y",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_y(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_x:Float, ?_y:Float, ?_z:Float, ?_w:Float) ",
            "return":"",
            "args":[
              { "name": "?_x","type": "Float" },
              { "name": "?_y","type": "Float" },
              { "name": "?_z","type": "Float" },
              { "name": "?_w","type": "Float" }
            ]
          },
        {
          "name":"setFromEuler",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setFromEuler(_euler:phoenix.Vector, ?_order:String) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_euler","type": "phoenix.Vector" },
              { "name": "?_order","type": "String" }
            ]
          },
        {
          "name":"setFromAxisAngle",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setFromAxisAngle(_axis:phoenix.Vector, _angle:Float) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_axis","type": "phoenix.Vector" },
              { "name": "_angle","type": "Float" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(_quaternion:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_quaternion","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"multiplyQuaternions",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyQuaternions(_a:phoenix.Quaternion, _b:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_a","type": "phoenix.Quaternion" },
              { "name": "_b","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"inverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"inverse() : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
            ]
          },
        {
          "name":"copy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"copy(_quaternion:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_quaternion","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"slerp",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"slerp(_qb:phoenix.Quaternion, _t:Float) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_qb","type": "phoenix.Quaternion" },
              { "name": "_t","type": "Float" }
            ]
          },
        {
          "name":"dot",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"dot(_other:phoenix.Quaternion) : Float",
            "return":": Float",
            "args":[
              { "name": "_other","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"set_x",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_x(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"Slerp",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Slerp(_qa:phoenix.Quaternion, _qb:phoenix.Quaternion, _qm:phoenix.Quaternion, _t:Float) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_qa","type": "phoenix.Quaternion" },
              { "name": "_qb","type": "phoenix.Quaternion" },
              { "name": "_qm","type": "phoenix.Quaternion" },
              { "name": "_t","type": "Float" }
            ]
          },
        {
          "name":"length",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"length() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"toArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toArray() : Array<Float>",
            "return":": Array<Float>",
            "args":[
            ]
          },
        {
          "name":"Dot",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"Dot(_a:phoenix.Quaternion, _b:phoenix.Quaternion) : Float",
            "return":": Float",
            "args":[
              { "name": "_a","type": "phoenix.Quaternion" },
              { "name": "_b","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"equals",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"equals(_q:phoenix.Quaternion) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_q","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"update_euler",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update_euler() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"lengthSq",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"lengthSq() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"multiply",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiply(_quaternion:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_quaternion","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(_x:Float, _y:Float, _z:Float, _w:Float) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "_z","type": "Float" },
              { "name": "_w","type": "Float" }
            ]
          },
        {
          "name":"conjugate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"conjugate() : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
            ]
          },
        {
          "name":"fromArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromArray(_a:Array<Float>) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_a","type": "Array<Float>" }
            ]
          },
        {
          "name":"set_w",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_w(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"normalize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"normalize() : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
            ]
          },
        {
          "name":"set_z",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_z(_v:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"addQuaternions",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"addQuaternions(_a:phoenix.Quaternion, _b:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_a","type": "phoenix.Quaternion" },
              { "name": "_b","type": "phoenix.Quaternion" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.components.Components",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"_show_debug",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"_show_debug : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"components",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"components : Map<String,luxe.components.Component>",
            "type":"Map<String,luxe.components.Component>",
            "doc":""
        },
        {
          "name":"entity",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"entity : luxe.Entity",
            "type":"luxe.Entity",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(?_name:String, ?_data:remove.T) : Bool",
            "return":": Bool",
            "args":[
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "remove.T" }
            ]
          },
        {
          "name":"has",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"has(_name:String) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_entity:luxe.Entity) ",
            "return":"",
            "args":[
              { "name": "_entity","type": "luxe.Entity" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(type:Class<add.T1>, ?_name:String, ?_data:add.T2) : add.T1",
            "return":": add.T1",
            "args":[
              { "name": "type","type": "Class<add.T1>" },
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "add.T2" }
            ]
          },
        {
          "name":"_debug",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_debug(v:String) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "String" }
            ]
          },
        {
          "name":"get",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get(_name:String, ?in_children:Bool) : get.T",
            "return":": get.T",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?in_children","type": "Bool" }
            ]
          },
        {
          "name":"_call",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_call(_object:Dynamic, _name:String, ?args:Array<Dynamic>) : Void",
            "return":": Void",
            "args":[
              { "name": "_object","type": "Dynamic" },
              { "name": "_name","type": "String" },
              { "name": "?args","type": "Array<Dynamic>" }
            ]
          },
        {
          "name":"get_any",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_any(_name:String, ?in_children:Bool, ?first_only:Bool) : Array<get_any.T>",
            "return":": Array<get_any.T>",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?in_children","type": "Bool" },
              { "name": "?first_only","type": "Bool" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.actuators.SimpleActuator",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.tween.actuators.GenericActuator" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"setVisible",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"setVisible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"actuators",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"actuators : Array<luxe.tween.actuators.SimpleActuator>",
            "type":"Array<luxe.tween.actuators.SimpleActuator>",
            "doc":""
        },
        {
          "name":"initialized",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"initialized : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"paused",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"paused : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"has_timescaled_starttime",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"has_timescaled_starttime : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"update_timer",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"update_timer : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"pauseTime",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"pauseTime : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"startTime",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"startTime : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"actuatorsLength",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"actuatorsLength : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"sendChange",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"sendChange : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"timer",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"timer : haxe.Timer",
            "type":"haxe.Timer",
            "doc":""
        },
        {
          "name":"current_time",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"current_time : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"timeOffset",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"timeOffset : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"active",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"active : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"toggleVisible",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"toggleVisible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"propertyDetails",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"propertyDetails : Array<luxe.tween.actuators.PropertyDetails>",
            "type":"Array<luxe.tween.actuators.PropertyDetails>",
            "doc":""
        },
        {
          "name":"haxe_doc",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"haxe_doc : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"cacheVisible",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"cacheVisible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"addedEvent",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"addedEvent : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"detailsLength",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"detailsLength : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"autoVisible",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* @inheritDoc",
            "signature":"autoVisible(?value:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "?value","type": "Bool" }
            ]
          },
        {
          "name":"delay",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* @inheritDoc",
            "signature":"delay(duration:Float) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "duration","type": "Float" }
            ]
          },
        {
          "name":"move",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"move() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"resume",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"resume() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(target:Dynamic, duration:Float, properties:Dynamic) ",
            "return":"",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "properties","type": "Dynamic" }
            ]
          },
        {
          "name":"stop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"stop(properties:Dynamic, complete:Bool, sendEvent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "properties","type": "Dynamic" },
              { "name": "complete","type": "Bool" },
              { "name": "sendEvent","type": "Bool" }
            ]
          },
        {
          "name":"pause",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"pause() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"on_internal_update",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"on_internal_update(dt:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "dt","type": "Float" }
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(currentTime:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "currentTime","type": "Float" }
            ]
          },
        {
          "name":"initialize",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"initialize() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onUpdate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* @inheritDoc",
            "signature":"onUpdate(handler:Dynamic, ?parameters:Array<Dynamic>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "handler","type": "Dynamic" },
              { "name": "?parameters","type": "Array<Dynamic>" }
            ]
          }
      ],
      "ispublic":true,
      "doc":"* @author Joshua Granick\n * @version 1.2"
    },
    { "name": "phoenix.defaults.FontBytes",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"data() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Objects",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"_show_debug",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"_show_debug : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"_show_debug_verbose",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"_show_debug_verbose : Bool",
            "type":"Bool",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"_merge_properties",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_merge_properties(_properties:Dynamic, _with:Dynamic) : Dynamic",
            "return":": Dynamic",
            "args":[
              { "name": "_properties","type": "Dynamic" },
              { "name": "_with","type": "Dynamic" }
            ]
          },
        {
          "name":"_debug",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_debug(v:String, ?verbose:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "String" },
              { "name": "?verbose","type": "Bool" }
            ]
          },
        {
          "name":"_call",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_call(_object:luxe.Objects, _name:String, ?args:Array<Dynamic>) : Void",
            "return":": Void",
            "args":[
              { "name": "_object","type": "luxe.Objects" },
              { "name": "_name","type": "String" },
              { "name": "?args","type": "Array<Dynamic>" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Camera",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"projection_matrix",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"projection_matrix : phoenix.Matrix4",
            "type":"phoenix.Matrix4",
            "doc":""
        },
        {
          "name":"target",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"target : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"_origin_matrix_inv",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_origin_matrix_inv : phoenix.Matrix4",
            "type":"phoenix.Matrix4",
            "doc":""
        },
        {
          "name":"projection",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"projection : phoenix.ProjectionType",
            "type":"phoenix.ProjectionType",
            "doc":""
        },
        {
          "name":"up",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"up : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"minimum_zoom",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"minimum_zoom : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"_rot_matrix",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_rot_matrix : phoenix.Matrix4",
            "type":"phoenix.Matrix4",
            "doc":""
        },
        {
          "name":"perspective_options",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"perspective_options : luxe.options.ProjectionOptions",
            "type":"luxe.options.ProjectionOptions",
            "doc":""
        },
        {
          "name":"ortho_options",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"ortho_options : luxe.options.ProjectionOptions",
            "type":"luxe.options.ProjectionOptions",
            "doc":""
        },
        {
          "name":"view_matrix",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"view_matrix : phoenix.Matrix4",
            "type":"phoenix.Matrix4",
            "doc":""
        },
        {
          "name":"_pos_matrix",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_pos_matrix : phoenix.Matrix4",
            "type":"phoenix.Matrix4",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"viewport",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"viewport : phoenix.Rectangle",
            "doc":"",
            "type":"phoenix.Rectangle",
            "type_desc":"read/write"
        },
        {
          "name":"rotation",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation : phoenix.Quaternion",
            "doc":"",
            "type":"phoenix.Quaternion",
            "type_desc":"read/write"
        },
        {
          "name":"zoom",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"zoom : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"center",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"center : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"pos",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scale",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scale : phoenix.Vector",
            "doc":"",
            "type":"phoenix.Vector",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"get_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"_scale_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_scale_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"update_view_matrix",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update_view_matrix() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_ortho",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_ortho(options:luxe.options.ProjectionOptions) : Void",
            "return":": Void",
            "args":[
              { "name": "options","type": "luxe.options.ProjectionOptions" }
            ]
          },
        {
          "name":"get_center",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_center() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"get_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"get_viewport",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_viewport() : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
            ]
          },
        {
          "name":"_attach_listener",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_attach_listener(_v:phoenix.Vector, listener:Float->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "phoenix.Vector" },
              { "name": "listener","type": "Float->Void" }
            ]
          },
        {
          "name":"ortho_world_to_screen",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ortho_world_to_screen(_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_zoom",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_zoom(_p:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_p","type": "Float" }
            ]
          },
        {
          "name":"_merge_options",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_merge_options(projection_options:luxe.options.ProjectionOptions, options:luxe.options.ProjectionOptions) : Void",
            "return":": Void",
            "args":[
              { "name": "projection_options","type": "luxe.options.ProjectionOptions" },
              { "name": "options","type": "luxe.options.ProjectionOptions" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?options:luxe.options.CameraOptions) ",
            "return":"",
            "args":[
              { "name": "?options","type": "luxe.options.CameraOptions" }
            ]
          },
        {
          "name":"persepective_world_to_screen",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"persepective_world_to_screen(_vector:phoenix.Vector, ?_viewport:phoenix.Rectangle) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" },
              { "name": "?_viewport","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"screen_point_to_world",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"screen_point_to_world(_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"world_point_to_screen",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"world_point_to_screen(_vector:phoenix.Vector, ?_viewport:phoenix.Rectangle) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" },
              { "name": "?_viewport","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"default_camera_options",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"default_camera_options() : luxe.options.CameraOptions",
            "return":": luxe.options.CameraOptions",
            "args":[
            ]
          },
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_q:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_q","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"apply_ortho",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"apply_ortho() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_perspective",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_perspective(options:luxe.options.ProjectionOptions) : Void",
            "return":": Void",
            "args":[
              { "name": "options","type": "luxe.options.ProjectionOptions" }
            ]
          },
        {
          "name":"unprojectVector",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"unprojectVector(_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_p:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_p","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"ortho_screen_to_world",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ortho_screen_to_world(_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"_pos_change",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_pos_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"default_ortho_options",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"default_ortho_options() : luxe.options.ProjectionOptions",
            "return":": luxe.options.ProjectionOptions",
            "args":[
            ]
          },
        {
          "name":"default_perspective_options",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"default_perspective_options() : luxe.options.ProjectionOptions",
            "return":": luxe.options.ProjectionOptions",
            "args":[
            ]
          },
        {
          "name":"update_look_at",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update_look_at() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_center",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_center(_p:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_p","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_viewport",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_viewport(_r:phoenix.Rectangle) : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
              { "name": "_r","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"set_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale(_s:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_s","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"projectVector",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"projectVector(_vector:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"apply_perspective",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"apply_perspective() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"get_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation() : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
            ]
          },
        {
          "name":"screen_point_to_ray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"screen_point_to_ray(_vector:phoenix.Vector) : phoenix.Ray",
            "return":": phoenix.Ray",
            "args":[
              { "name": "_vector","type": "phoenix.Vector" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.defaults.TinyBox",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"data",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"data() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.easing.QuadEaseIn",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
        { "name":"luxe.tween.easing.IEasing" }
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"calculate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"calculate(k:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "k","type": "Float" }
            ]
          },
        {
          "name":"ease",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ease(t:Float, b:Float, c:Float, d:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "t","type": "Float" },
              { "name": "b","type": "Float" },
              { "name": "c","type": "Float" },
              { "name": "d","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.Maths",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"RAD2DEG",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"RAD2DEG : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"DEG2RAD",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"DEG2RAD : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"nearest_power_of_two",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"nearest_power_of_two(_value:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "_value","type": "Int" }
            ]
          },
        {
          "name":"radToDeg",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"radToDeg(rad:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "rad","type": "Float" }
            ]
          },
        {
          "name":"clamp_bottom",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"clamp_bottom(value:Float, a:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "value","type": "Float" },
              { "name": "a","type": "Float" }
            ]
          },
        {
          "name":"sign",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"sign(x:Float) : Int",
            "return":": Int",
            "args":[
              { "name": "x","type": "Float" }
            ]
          },
        {
          "name":"smoothstep",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"smoothstep(x:Float, min:Float, max:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "x","type": "Float" },
              { "name": "min","type": "Float" },
              { "name": "max","type": "Float" }
            ]
          },
        {
          "name":"random16",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"random16() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"random_float",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"random_float(low:Float, high:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "low","type": "Float" },
              { "name": "high","type": "Float" }
            ]
          },
        {
          "name":"random_float_spread",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"random_float_spread(range:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "range","type": "Float" }
            ]
          },
        {
          "name":"smootherstep",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"smootherstep(x:Float, min:Float, max:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "x","type": "Float" },
              { "name": "min","type": "Float" },
              { "name": "max","type": "Float" }
            ]
          },
        {
          "name":"within_range",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"within_range(value:Float, start_range:Float, end_range:Float) : Bool",
            "return":": Bool",
            "args":[
              { "name": "value","type": "Float" },
              { "name": "start_range","type": "Float" },
              { "name": "end_range","type": "Float" }
            ]
          },
        {
          "name":"random_int",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"random_int(low:Int, high:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "low","type": "Int" },
              { "name": "high","type": "Int" }
            ]
          },
        {
          "name":"fixed",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"fixed(value:Float, precision:Int) : Float",
            "return":": Float",
            "args":[
              { "name": "value","type": "Float" },
              { "name": "precision","type": "Int" }
            ]
          },
        {
          "name":"clamp",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"clamp(value:Float, a:Float, b:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "value","type": "Float" },
              { "name": "a","type": "Float" },
              { "name": "b","type": "Float" }
            ]
          },
        {
          "name":"wrap_angle",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"wrap_angle(degrees:Float, lower:Float, upper:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "degrees","type": "Float" },
              { "name": "lower","type": "Float" },
              { "name": "upper","type": "Float" }
            ]
          },
        {
          "name":"map_linear",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"map_linear(value:Float, a1:Float, a2:Float, b1:Float, b2:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "value","type": "Float" },
              { "name": "a1","type": "Float" },
              { "name": "a2","type": "Float" },
              { "name": "b1","type": "Float" },
              { "name": "b2","type": "Float" }
            ]
          },
        {
          "name":"degToRad",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"degToRad(deg:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "deg","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.json.JSONToken",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"type",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"type : luxe.utils.json.JSONTokenType",
            "type":"luxe.utils.json.JSONTokenType",
            "doc":"type of the token"
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"value",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"value : Dynamic",
            "type":"Dynamic",
            "doc":"value of the token"
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Creates a new JSONToken with a specific token type and value.\n   *\n   * @param type The JSONTokenType of the token\n   * @param value The value of the token",
            "signature":"new(?type:luxe.utils.json.JSONTokenType, ?value:Dynamic) ",
            "return":"",
            "args":[
              { "name": "?type","type": "luxe.utils.json.JSONTokenType" },
              { "name": "?value","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.json.JSONDecoder",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"strict",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"strict : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"tokenizer",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"tokenizer : luxe.utils.json.JSONTokenizer",
            "type":"luxe.utils.json.JSONTokenizer",
            "doc":"The tokenizer designated to read the JSON string"
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"value",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"value : Dynamic",
            "type":"Dynamic",
            "doc":"The value that will get parsed from the JSON string"
        },
        {
          "name":"token",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"token : luxe.utils.json.JSONToken",
            "type":"luxe.utils.json.JSONToken",
            "doc":"The current token from the tokenizer"
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Constructs a new JSONDecoder to parse a JSON string \n     * into a native object.\n     *\n     * @param s The JSON string to be converted into a native object",
            "signature":"new(s:String, strict:Bool) ",
            "return":"",
            "args":[
              { "name": "s","type": "String" },
              { "name": "strict","type": "Bool" }
            ]
          },
        {
          "name":"nextToken",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Returns the next token from the tokenzier reading\n     * the JSON string",
            "signature":"nextToken() : luxe.utils.json.JSONToken",
            "return":": luxe.utils.json.JSONToken",
            "args":[
            ]
          },
        {
          "name":"parseObject",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Attempt to parse an object",
            "signature":"parseObject() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"parseArray",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Attempt to parse an array",
            "signature":"parseArray() : Array<Dynamic>",
            "return":": Array<Dynamic>",
            "args":[
            ]
          },
        {
          "name":"parseValue",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"* Attempt to parse a value",
            "signature":"parseValue() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"getValue",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Gets the internal object that was created by parsing\n     * the JSON string passed to the constructor.\n     *\n     * @return The internal object representation of the JSON\n     *      string that was passed to the constructor",
            "signature":"getValue() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.json.JSONParseError",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"name",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"message",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"message : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"_location",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_location : Int",
            "type":"Int",
            "doc":"The location in the string where the error occurred"
        },
        {
          "name":"_text",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_text : String",
            "type":"String",
            "doc":"The string in which the parse error occurred"
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"text",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"text : String",
            "doc":"",
            "type":"String",
            "type_desc":"(read only)"
        },
        {
          "name":"location",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"location : Int",
            "doc":"",
            "type":"Int",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Constructs a new JSONParseError.\n     *\n     * @param message The error message that occured during parsing",
            "signature":"new(?message:String, ?location:Int, ?text:String) ",
            "return":"",
            "args":[
              { "name": "?message","type": "String" },
              { "name": "?location","type": "Int" },
              { "name": "?text","type": "String" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"get_text",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Provides read-only access to the text variable.\n     *\n     * @return The string in which the error occurred",
            "signature":"get_text() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"get_location",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"* Provides read-only access to the location variable.\n     *\n     * @return The location in the string where the error occurred",
            "signature":"get_location() : Int",
            "return":": Int",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Debug",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"profile_path",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"profile_path : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"visible",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"visible : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"last_cursor_locked",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"last_cursor_locked : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"view",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"view : phoenix.Camera",
            "type":"phoenix.Camera",
            "doc":""
        },
        {
          "name":"started",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"started : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"views",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"views : Array<luxe.debug.DebugView>",
            "type":"Array<luxe.debug.DebugView>",
            "doc":""
        },
        {
          "name":"dt_average",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dt_average : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"current_view_index",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"current_view_index : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"shut_down",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"shut_down : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"trace_callbacks",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"trace_callbacks : Map<String,null>",
            "type":"Map<String,null>",
            "doc":""
        },
        {
          "name":"batcher",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        },
        {
          "name":"last_view_index",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"last_view_index : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"dt_average_accum",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dt_average_accum : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"last_cursor_shown",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"last_cursor_shown : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"overlay",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"overlay : phoenix.geometry.QuadGeometry",
            "type":"phoenix.geometry.QuadGeometry",
            "doc":""
        },
        {
          "name":"profiling",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"profiling : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"debug_font",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"debug_font : phoenix.BitmapFont",
            "type":"phoenix.BitmapFont",
            "doc":""
        },
        {
          "name":"dt_average_span",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dt_average_span : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"current_view",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"current_view : luxe.debug.DebugView",
            "type":"luxe.debug.DebugView",
            "doc":""
        },
        {
          "name":"padding",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"padding : luxe.Vector",
            "type":"luxe.Vector",
            "doc":""
        },
        {
          "name":"core",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        },
        {
          "name":"debug_inspector",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"debug_inspector : luxe.debug.Inspector",
            "type":"luxe.debug.Inspector",
            "doc":""
        },
        {
          "name":"dt_average_count",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dt_average_count : Int",
            "type":"Int",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"onresize",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onresize(e:null<null,null>) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "null<null,null>" }
            ]
          },
        {
          "name":"refresh",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onmousedown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousedown(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"onmousewheel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousewheel(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"switch_view",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"switch_view() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onmouseup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmouseup(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"add_trace_listener",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_trace_listener(_name:String, _callback:null->haxe.PosInfos->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_callback","type": "null->haxe.PosInfos->Void" }
            ]
          },
        {
          "name":"create_debug_console",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create_debug_console() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onkeydown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeydown(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"remove_trace_listener",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove_trace_listener(_name:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"onmousemove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousemove(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"start(_name:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"internal_trace",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"internal_trace(v:Dynamic, ?inf:haxe.PosInfos) : Void",
            "return":": Void",
            "args":[
              { "name": "v","type": "Dynamic" },
              { "name": "?inf","type": "haxe.PosInfos" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"end",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"end(_name:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" }
            ]
          },
        {
          "name":"onkeyup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeyup(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"show_console",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"show_console(?_show:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?_show","type": "Bool" }
            ]
          },
        {
          "name":"init",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.TextureCoordSet",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"uv6",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv6 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv4",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv4 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv2",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv2 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv0",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv0 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv7",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv7 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv5",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv5 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv3",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv3 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        },
        {
          "name":"uv1",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"uv1 : phoenix.geometry.TextureCoord",
            "type":"phoenix.geometry.TextureCoord",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Scene",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Objects" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"entities",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"entities : Map<String,luxe.Entity>",
            "type":"Map<String,luxe.Entity>",
            "doc":""
        },
        {
          "name":"inited",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"inited : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"started",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"started : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"_delayed_init_entities",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_delayed_init_entities : Array<luxe.Entity>",
            "type":"Array<luxe.Entity>",
            "doc":""
        },
        {
          "name":"_delayed_start_entities",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_delayed_start_entities : Array<luxe.Entity>",
            "type":"Array<luxe.Entity>",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"entitycount",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"entitycount : Int",
            "doc":"",
            "type":"Int",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"onmousedown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousedown(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"get_entitycount",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_entitycount() : Int",
            "return":": Int",
            "args":[
            ]
          },
        {
          "name":"onmousewheel",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousewheel(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"onmouseup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmouseup(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"handle_delayed_additions",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"handle_delayed_additions() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"create",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"create(type:Class<create.T1>, ?_name:String, ?_data:create.T2) : create.T1",
            "return":": create.T1",
            "args":[
              { "name": "type","type": "Class<create.T1>" },
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "create.T2" }
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(entity:luxe.Entity) : Bool",
            "return":": Bool",
            "args":[
              { "name": "entity","type": "luxe.Entity" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          },
        {
          "name":"onmousemove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onmousemove(e:luxe.MouseEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.MouseEvent" }
            ]
          },
        {
          "name":"ongamepadaxis",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadaxis(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"start",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"start() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"serialize_to_disk",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"serialize_to_disk(_destination_path:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_destination_path","type": "String" }
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(entity:luxe.Entity) : Void",
            "return":": Void",
            "args":[
              { "name": "entity","type": "luxe.Entity" }
            ]
          },
        {
          "name":"fixed_update",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fixed_update() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"onkeyup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeyup(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"ontouchbegin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ontouchbegin(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"list_entities",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"list_entities() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"ontouchend",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ontouchend(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"ongamepadbuttondown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadbuttondown(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"empty",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"empty() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"ontouchmove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ontouchmove(e:luxe.TouchEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.TouchEvent" }
            ]
          },
        {
          "name":"ongamepadhat",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadhat(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"ongamepadbuttonup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadbuttonup(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"onkeydown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"onkeydown(e:luxe.KeyEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "luxe.KeyEvent" }
            ]
          },
        {
          "name":"oninputdown",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"oninputdown(_name:String, e:luxe.InputEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "e","type": "luxe.InputEvent" }
            ]
          },
        {
          "name":"_do_init",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_do_init() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(dt:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "dt","type": "Float" }
            ]
          },
        {
          "name":"oninputup",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"oninputup(_name:String, e:luxe.InputEvent) : Void",
            "return":": Void",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "e","type": "luxe.InputEvent" }
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"ongamepadball",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ongamepadball(e:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "e","type": "Dynamic" }
            ]
          },
        {
          "name":"init",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.TextureCoord",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"v",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"v : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"u",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"u : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"t",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"t : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"w",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"w : Float",
            "type":"Float",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(?_u:Float, ?_v:Float, ?_w:Float, ?_t:Float) : phoenix.geometry.TextureCoord",
            "return":": phoenix.geometry.TextureCoord",
            "args":[
              { "name": "?_u","type": "Float" },
              { "name": "?_v","type": "Float" },
              { "name": "?_w","type": "Float" },
              { "name": "?_t","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_u:Float, ?_v:Float, ?_w:Float, ?_t:Float) ",
            "return":"",
            "args":[
              { "name": "?_u","type": "Float" },
              { "name": "?_v","type": "Float" },
              { "name": "?_w","type": "Float" },
              { "name": "?_t","type": "Float" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.BatchState",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"last_group",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"last_group : Int",
            "type":"Int",
            "doc":""
        },
        {
          "name":"last_shader_id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"last_shader_id : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"log",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"log : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"last_geom_state",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"last_geom_state : phoenix.geometry.GeometryState",
            "type":"phoenix.geometry.GeometryState",
            "doc":""
        },
        {
          "name":"is_clipping",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"is_clipping : Bool",
            "type":"Bool",
            "doc":""
        },
        {
          "name":"geom_state",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"geom_state : phoenix.geometry.GeometryState",
            "type":"phoenix.geometry.GeometryState",
            "doc":""
        },
        {
          "name":"last_texture_id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"last_texture_id : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"clip_rect",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"clip_rect : phoenix.Rectangle",
            "type":"phoenix.Rectangle",
            "doc":""
        },
        {
          "name":"last_clip_rect",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"last_clip_rect : phoenix.Rectangle",
            "type":"phoenix.Rectangle",
            "doc":""
        },
        {
          "name":"batcher",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"batcher : phoenix.Batcher",
            "type":"phoenix.Batcher",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_r:phoenix.Batcher) ",
            "return":"",
            "args":[
              { "name": "_r","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"update(geom:phoenix.geometry.Geometry) : Bool",
            "return":": Bool",
            "args":[
              { "name": "geom","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"str",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"str() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"deactivate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"deactivate(batcher:phoenix.Batcher) : Void",
            "return":": Void",
            "args":[
              { "name": "batcher","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"activate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"activate(batcher:phoenix.Batcher) : Void",
            "return":": Void",
            "args":[
              { "name": "batcher","type": "phoenix.Batcher" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Physics",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"engines",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"engines : Array<luxe.PhysicsEngine>",
            "type":"Array<luxe.PhysicsEngine>",
            "doc":""
        },
        {
          "name":"core",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"core : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_core:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_core","type": "luxe.Core" }
            ]
          },
        {
          "name":"process",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"process() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"destroy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"destroy() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"add_engine",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_engine(type:Class<add_engine.T1>, ?_data:add_engine.T2) : add_engine.T1",
            "return":": add_engine.T1",
            "args":[
              { "name": "type","type": "Class<add_engine.T1>" },
              { "name": "?_data","type": "add_engine.T2" }
            ]
          },
        {
          "name":"init",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"init() : Void",
            "return":": Void",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.structural.BinarySearchTree",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"root",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"root : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "type":"luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "doc":""
        },
        {
          "name":"compare",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"compare : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"_floor",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_floor(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _key:luxe.structural.BinarySearchTree.K) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"ceil",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ceil(_key:luxe.structural.BinarySearchTree.K) : Null<luxe.structural.BinarySearchTree.K>",
            "return":": Null<luxe.structural.BinarySearchTree.K>",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"_deleteMax",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_deleteMax(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" }
            ]
          },
        {
          "name":"iterator",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"iterator() : Iterator<luxe.structural.BinarySearchTree.T>",
            "return":": Iterator<luxe.structural.BinarySearchTree.T>",
            "args":[
            ]
          },
        {
          "name":"max",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"max() : luxe.structural.BinarySearchTree.K",
            "return":": luxe.structural.BinarySearchTree.K",
            "args":[
            ]
          },
        {
          "name":"_rank",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_rank(_key:luxe.structural.BinarySearchTree.K, _node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>) : Int",
            "return":": Int",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" },
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" }
            ]
          },
        {
          "name":"_remove",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_remove(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _key:luxe.structural.BinarySearchTree.K) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"traverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"traverse(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _traverse_method:luxe.structural.BinarySearchTraverseMethod, _process_node_function:luxe.structural.BinarySearchTreeNode->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_traverse_method","type": "luxe.structural.BinarySearchTraverseMethod" },
              { "name": "_process_node_function","type": "luxe.structural.BinarySearchTreeNode->Void" }
            ]
          },
        {
          "name":"contains",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"contains(_key:luxe.structural.BinarySearchTree.K) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"select",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"select(_rank:Int) : luxe.structural.BinarySearchTree.K",
            "return":": luxe.structural.BinarySearchTree.K",
            "args":[
              { "name": "_rank","type": "Int" }
            ]
          },
        {
          "name":"floor",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"floor(_key:luxe.structural.BinarySearchTree.K) : Null<luxe.structural.BinarySearchTree.K>",
            "return":": Null<luxe.structural.BinarySearchTree.K>",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"_ceil",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ceil(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _key:luxe.structural.BinarySearchTree.K) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(_key:luxe.structural.BinarySearchTree.K) : Void",
            "return":": Void",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(compare_function:luxe.structural.BinarySearchTree.K->luxe.structural.BinarySearchTree.K->Int) ",
            "return":"",
            "args":[
              { "name": "compare_function","type": "luxe.structural.BinarySearchTree.K->luxe.structural.BinarySearchTree.K->Int" }
            ]
          },
        {
          "name":"size",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"size() : Int",
            "return":": Int",
            "args":[
            ]
          },
        {
          "name":"_max",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_max(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" }
            ]
          },
        {
          "name":"_find",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_find(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _key:luxe.structural.BinarySearchTree.K) : luxe.structural.BinarySearchTree.T",
            "return":": luxe.structural.BinarySearchTree.T",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"insert",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"insert(_key:luxe.structural.BinarySearchTree.K, _value:luxe.structural.BinarySearchTree.T) : Void",
            "return":": Void",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" },
              { "name": "_value","type": "luxe.structural.BinarySearchTree.T" }
            ]
          },
        {
          "name":"find",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find(_key:luxe.structural.BinarySearchTree.K) : luxe.structural.BinarySearchTree.T",
            "return":": luxe.structural.BinarySearchTree.T",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"_select",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_select(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _rank:Int) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_rank","type": "Int" }
            ]
          },
        {
          "name":"deleteMax",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"deleteMax() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"deleteMin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"deleteMin() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"min",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"min() : luxe.structural.BinarySearchTree.K",
            "return":": luxe.structural.BinarySearchTree.K",
            "args":[
            ]
          },
        {
          "name":"toArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toArray() : Array<luxe.structural.BinarySearchTree.T>",
            "return":": Array<luxe.structural.BinarySearchTree.T>",
            "args":[
            ]
          },
        {
          "name":"_size",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_size(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>) : Int",
            "return":": Int",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" }
            ]
          },
        {
          "name":"rank",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rank(_key:luxe.structural.BinarySearchTree.K) : Int",
            "return":": Int",
            "args":[
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" }
            ]
          },
        {
          "name":"keys",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"keys() : Array<luxe.structural.BinarySearchTree.K>",
            "return":": Array<luxe.structural.BinarySearchTree.K>",
            "args":[
            ]
          },
        {
          "name":"_min",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_min(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" }
            ]
          },
        {
          "name":"_insert",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_insert(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>, _key:luxe.structural.BinarySearchTree.K, _value:luxe.structural.BinarySearchTree.T) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BinarySearchTree.K" },
              { "name": "_value","type": "luxe.structural.BinarySearchTree.T" }
            ]
          },
        {
          "name":"_deleteMin",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_deleteMin(_node:luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>) : luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "return":": luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BinarySearchTreeNode<luxe.structural.BinarySearchTree.K,luxe.structural.BinarySearchTree.T>" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.Actuate",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"defaultEase",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"defaultEase : luxe.tween.easing.IEasing",
            "type":"luxe.tween.easing.IEasing",
            "doc":""
        },
        {
          "name":"defaultActuator",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":true,
            "signature":"defaultActuator : Class<luxe.tween.actuators.GenericActuator>",
            "type":"Class<luxe.tween.actuators.GenericActuator>",
            "doc":""
        },
        {
          "name":"targetLibraries",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":true,
            "signature":"targetLibraries : luxe.tween.ObjectHash<Array>",
            "type":"luxe.tween.ObjectHash<Array>",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"reset",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"* Resets Actuate by stopping and removing tweens for all objects",
            "signature":"reset() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"resume",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"* Resumes paused tweens for the specified target objects\n     * @param   ... targets     The target objects which will have their tweens resumed. Passing no value resumes tweens for all objects",
            "signature":"resume(target:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "target","type": "Dynamic" }
            ]
          },
        {
          "name":"resumeAll",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"resumeAll() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"stop",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"* Stops all tweens for an individual object\n     * @param   target      The target object which will have its tweens stopped, or a generic actuator instance\n     * @param   properties      A string, array or object which contains the properties you wish to stop, like \"alpha\", [ \"x\", \"y\" ] or { alpha: null }. Passing no value removes all tweens for the object (Optional)\n     * @param   complete        If tweens should apply their final target values before stopping. Default is false (Optional) \n     * @param   sendEvent   If a complete() event should be dispatched for the specified target. Default is true (Optional)",
            "signature":"stop(target:Dynamic, ?properties:Dynamic, ?complete:Bool, ?sendEvent:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "?properties","type": "Dynamic" },
              { "name": "?complete","type": "Bool" },
              { "name": "?sendEvent","type": "Bool" }
            ]
          },
        {
          "name":"unload",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"unload(actuator:luxe.tween.actuators.GenericActuator) : Void",
            "return":": Void",
            "args":[
              { "name": "actuator","type": "luxe.tween.actuators.GenericActuator" }
            ]
          },
        {
          "name":"pause",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"* Pauses tweens for the specified target objects\n     * @param   ... targets     The target objects which will have their tweens paused. Passing no value pauses tweens for all objects",
            "signature":"pause(target:Dynamic) : Void",
            "return":": Void",
            "args":[
              { "name": "target","type": "Dynamic" }
            ]
          },
        {
          "name":"pauseAll",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"pauseAll() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"update",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"<![CDATA[* Creates a new tween that updates a method rather than setting the properties of an object\n     * @example     <code>Actuate.update (trace, 1, [\"Value: \", 0], [\"\", 1]).onComplete (trace, [ \"Finished tracing values between 0 and 1\" ]);</code>\n     * @param   target      The method to update        \n     * @param   duration        The length of the tween in seconds\n     * @param   start       The starting parameters of the method call. You may use both numeric and non-numeric values\n     * @param   end     The ending parameters of the method call. You may use both numeric and non-numeric values, but the signature should match the start parameters\n     * @param   overwrite       Sets whether previous tweens for the same target and properties will be overwritten (Default is true)\n     * @return      The current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate]]>",
            "signature":"update(target:Dynamic, duration:Float, ?start:Array<Dynamic>, ?end:Array<Dynamic>, ?overwrite:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "?start","type": "Array<Dynamic>" },
              { "name": "?end","type": "Array<Dynamic>" },
              { "name": "?overwrite","type": "Bool" }
            ]
          },
        {
          "name":"tween",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"<![CDATA[* Creates a new tween\n     * @example     <code>Actuate.tween (MyClip, 1, { alpha: 1 } ).onComplete (trace, [ \"MyClip is now visible\" ]);</code>\n     * @param   target      The object to tween\n     * @param   duration        The length of the tween in seconds\n     * @param   properties      The end values to tween the target to\n     * @param   overwrite           Sets whether previous tweens for the same target and properties will be overwritten (Default is true)\n     * @param   customActuator      A custom actuator to use instead of the default (Optional)\n     * @return      The current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate]]>",
            "signature":"tween(target:Dynamic, duration:Float, properties:Dynamic, ?overwrite:Bool, ?customActuator:Class<luxe.tween.actuators.GenericActuator>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "properties","type": "Dynamic" },
              { "name": "?overwrite","type": "Bool" },
              { "name": "?customActuator","type": "Class<luxe.tween.actuators.GenericActuator>" }
            ]
          },
        {
          "name":"getLibrary",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"getLibrary(target:Dynamic) : Array<luxe.tween.actuators.GenericActuator>",
            "return":": Array<luxe.tween.actuators.GenericActuator>",
            "args":[
              { "name": "target","type": "Dynamic" }
            ]
          },
        {
          "name":"apply",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"<![CDATA[* Copies properties from one object to another. Conflicting tweens are stopped automatically\n     * @example     <code>Actuate.apply (MyClip, { alpha: 1 } );</code>\n     * @param   target      The object to copy to\n     * @param   properties      The object to copy from\n     * @param   customActuator      A custom actuator to use instead of the default (Optional)\n     * @return      The current actuator instance, which can be used to apply properties like onComplete or onUpdate handlers]]>",
            "signature":"apply(target:Dynamic, properties:Dynamic, ?customActuator:Class<luxe.tween.actuators.GenericActuator>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "properties","type": "Dynamic" },
              { "name": "?customActuator","type": "Class<luxe.tween.actuators.GenericActuator>" }
            ]
          },
        {
          "name":"motionPath",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"* Creates a new MotionPath tween\n     * @param   target      The object to tween\n     * @param   duration        The length of the tween in seconds\n     * @param   properties      An object containing a motion path for each property you wish to tween\n     * @param   overwrite       Sets whether previous tweens for the same target and properties will be overwritten (Default is true)\n     * @return      The current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate",
            "signature":"motionPath(target:Dynamic, duration:Float, properties:Dynamic, ?overwrite:Bool) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "target","type": "Dynamic" },
              { "name": "duration","type": "Float" },
              { "name": "properties","type": "Dynamic" },
              { "name": "?overwrite","type": "Bool" }
            ]
          },
        {
          "name":"timer",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"<![CDATA[* Creates a tween-based timer, which is useful for synchronizing function calls with other animations\n     * @example     <code>Actuate.timer (1).onComplete (trace, [ \"Timer is now complete\" ]);</code>\n     * @param   duration        The length of the timer in seconds\n     * @param   customActuator      A custom actuator to use instead of the default (Optional)\n     * @return      The current actuator instance, which can be used to apply properties like onComplete or to gain a reference to the target timer object]]>",
            "signature":"timer(duration:Float, ?customActuator:Class<luxe.tween.actuators.GenericActuator>) : luxe.tween.actuators.IGenericActuator",
            "return":": luxe.tween.actuators.IGenericActuator",
            "args":[
              { "name": "duration","type": "Float" },
              { "name": "?customActuator","type": "Class<luxe.tween.actuators.GenericActuator>" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.CircleGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(_x:Float, _y:Float, _rx:Float, _ry:Float, _steps:Int, ?_start_angle:Float, ?_end_angle:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "_rx","type": "Float" },
              { "name": "_ry","type": "Float" },
              { "name": "_steps","type": "Int" },
              { "name": "?_start_angle","type": "Float" },
              { "name": "?_end_angle","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.Game",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"luxecore",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"luxecore : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new() ",
            "return":"",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.ArcGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.CircleGeometry" }
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "options","type": "Dynamic" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.structural.BalancedBinarySearchTree",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"root",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"root : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "type":"luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "doc":""
        },
        {
          "name":"compare",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"compare : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"_floor",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_floor(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _key:luxe.structural.BalancedBinarySearchTree.K) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"ceil",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"ceil(_key:luxe.structural.BalancedBinarySearchTree.K) : Null<luxe.structural.BalancedBinarySearchTree.K>",
            "return":": Null<luxe.structural.BalancedBinarySearchTree.K>",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"rotate_left",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rotate_left(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"_deleteMax",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_deleteMax(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"iterator",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"iterator() : Iterator<luxe.structural.BalancedBinarySearchTree.T>",
            "return":": Iterator<luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
            ]
          },
        {
          "name":"max",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"max() : luxe.structural.BalancedBinarySearchTree.K",
            "return":": luxe.structural.BalancedBinarySearchTree.K",
            "args":[
            ]
          },
        {
          "name":"_rank",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_rank(_key:luxe.structural.BalancedBinarySearchTree.K, _node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : Int",
            "return":": Int",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" },
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"_remove",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_remove(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _key:luxe.structural.BalancedBinarySearchTree.K) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"traverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"traverse(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _traverse_method:luxe.structural.BalancedBinarySearchTraverseMethod, _process_node_function:luxe.structural.BalancedBinarySearchTreeNode->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_traverse_method","type": "luxe.structural.BalancedBinarySearchTraverseMethod" },
              { "name": "_process_node_function","type": "luxe.structural.BalancedBinarySearchTreeNode->Void" }
            ]
          },
        {
          "name":"contains",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"contains(_key:luxe.structural.BalancedBinarySearchTree.K) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"select",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"select(_rank:Int) : luxe.structural.BalancedBinarySearchTree.K",
            "return":": luxe.structural.BalancedBinarySearchTree.K",
            "args":[
              { "name": "_rank","type": "Int" }
            ]
          },
        {
          "name":"floor",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"floor(_key:luxe.structural.BalancedBinarySearchTree.K) : Null<luxe.structural.BalancedBinarySearchTree.K>",
            "return":": Null<luxe.structural.BalancedBinarySearchTree.K>",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"_ceil",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_ceil(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _key:luxe.structural.BalancedBinarySearchTree.K) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(_key:luxe.structural.BalancedBinarySearchTree.K) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"is_red",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"is_red(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : Bool",
            "return":": Bool",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"balance",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"balance(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(compare_function:luxe.structural.BalancedBinarySearchTree.K->luxe.structural.BalancedBinarySearchTree.K->Int) ",
            "return":"",
            "args":[
              { "name": "compare_function","type": "luxe.structural.BalancedBinarySearchTree.K->luxe.structural.BalancedBinarySearchTree.K->Int" }
            ]
          },
        {
          "name":"size",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"size() : Int",
            "return":": Int",
            "args":[
            ]
          },
        {
          "name":"_max",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_max(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"flip_colors",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"flip_colors(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : Void",
            "return":": Void",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"_find",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_find(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _key:luxe.structural.BalancedBinarySearchTree.K) : luxe.structural.BalancedBinarySearchTree.T",
            "return":": luxe.structural.BalancedBinarySearchTree.T",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"insert",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"insert(_key:luxe.structural.BalancedBinarySearchTree.K, _value:luxe.structural.BalancedBinarySearchTree.T) : Void",
            "return":": Void",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" },
              { "name": "_value","type": "luxe.structural.BalancedBinarySearchTree.T" }
            ]
          },
        {
          "name":"find",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find(_key:luxe.structural.BalancedBinarySearchTree.K) : luxe.structural.BalancedBinarySearchTree.T",
            "return":": luxe.structural.BalancedBinarySearchTree.T",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"_select",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_select(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _rank:Int) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_rank","type": "Int" }
            ]
          },
        {
          "name":"deleteMax",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"deleteMax() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"move_red_right",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"move_red_right(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"deleteMin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"deleteMin() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"_height",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_height(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : Int",
            "return":": Int",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"min",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"min() : luxe.structural.BalancedBinarySearchTree.K",
            "return":": luxe.structural.BalancedBinarySearchTree.K",
            "args":[
            ]
          },
        {
          "name":"toArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toArray() : Array<luxe.structural.BalancedBinarySearchTree.T>",
            "return":": Array<luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
            ]
          },
        {
          "name":"empty",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"empty() : Bool",
            "return":": Bool",
            "args":[
            ]
          },
        {
          "name":"_size",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_size(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : Int",
            "return":": Int",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"rank",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rank(_key:luxe.structural.BalancedBinarySearchTree.K) : Int",
            "return":": Int",
            "args":[
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" }
            ]
          },
        {
          "name":"keys",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"keys() : Array<luxe.structural.BalancedBinarySearchTree.K>",
            "return":": Array<luxe.structural.BalancedBinarySearchTree.K>",
            "args":[
            ]
          },
        {
          "name":"height",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"height() : Int",
            "return":": Int",
            "args":[
            ]
          },
        {
          "name":"_min",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_min(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"_insert",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_insert(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>, _key:luxe.structural.BalancedBinarySearchTree.K, _value:luxe.structural.BalancedBinarySearchTree.T) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" },
              { "name": "_key","type": "luxe.structural.BalancedBinarySearchTree.K" },
              { "name": "_value","type": "luxe.structural.BalancedBinarySearchTree.T" }
            ]
          },
        {
          "name":"move_red_left",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"move_red_left(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"_deleteMin",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_deleteMin(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          },
        {
          "name":"rotate_right",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"rotate_right(_node:luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>) : luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "return":": luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>",
            "args":[
              { "name": "_node","type": "luxe.structural.BalancedBinarySearchTreeNode<luxe.structural.BalancedBinarySearchTree.K,luxe.structural.BalancedBinarySearchTree.T>" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.SoundResource",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Resource" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"name : String",
            "type":"String",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_name:String, _id:String, _manager:luxe.ResourceManager) ",
            "return":"",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "_id","type": "String" },
              { "name": "_manager","type": "luxe.ResourceManager" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween._Actuate.TweenTimer",
      "meta":[
      { "name":":noCompletion", "value":"" }
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"progress",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"progress : Float",
            "type":"Float",
            "doc":""
        },
        {
          "name":"meta",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"meta : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(progress:Float) ",
            "return":"",
            "args":[
              { "name": "progress","type": "Float" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "phoenix.Ray",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"viewport",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"viewport : phoenix.Rectangle",
            "type":"phoenix.Rectangle",
            "doc":""
        },
        {
          "name":"origin",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"origin : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"dir",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"dir : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        },
        {
          "name":"camera",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"camera : phoenix.Camera",
            "type":"phoenix.Camera",
            "doc":""
        },
        {
          "name":"end",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"end : phoenix.Vector",
            "type":"phoenix.Vector",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"refresh",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"refresh(_screen_pos:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_screen_pos","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_screen_pos:phoenix.Vector, _camera:phoenix.Camera, ?_viewport:phoenix.Rectangle) ",
            "return":"",
            "args":[
              { "name": "_screen_pos","type": "phoenix.Vector" },
              { "name": "_camera","type": "phoenix.Camera" },
              { "name": "?_viewport","type": "phoenix.Rectangle" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.utils.Utils",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"geometry : luxe.utils.GeometryUtils",
            "type":"luxe.utils.GeometryUtils",
            "doc":""
        },
        {
          "name":"luxe",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"luxe : luxe.Core",
            "type":"luxe.Core",
            "doc":""
        },
        {
          "name":"_byte_levels",
            "meta":[
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"_byte_levels : Array<String>",
            "type":"Array<String>",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"arrayToBytes",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"arrayToBytes(array:Array<Int>) : haxe.io.Bytes",
            "return":": haxe.io.Bytes",
            "args":[
              { "name": "array","type": "Array<Int>" }
            ]
          },
        {
          "name":"file_bytes_to_class",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"file_bytes_to_class(_file:String, _outfile:String, ?_string_length:Int) : Void",
            "return":": Void",
            "args":[
              { "name": "_file","type": "String" },
              { "name": "_outfile","type": "String" },
              { "name": "?_string_length","type": "Int" }
            ]
          },
        {
          "name":"new",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_luxe:luxe.Core) ",
            "return":"",
            "args":[
              { "name": "_luxe","type": "luxe.Core" }
            ]
          },
        {
          "name":"uniqueid",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uniqueid() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"base64_decode",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"base64_decode(_string:String) : String",
            "return":": String",
            "args":[
              { "name": "_string","type": "String" }
            ]
          },
        {
          "name":"find_assets_image_sequence",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"find_assets_image_sequence(_name:String, ?_ext:String, ?_start:String) : Array<String>",
            "return":": Array<String>",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?_ext","type": "String" },
              { "name": "?_start","type": "String" }
            ]
          },
        {
          "name":"stacktrace",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"stacktrace(?_depth:Int) : String",
            "return":": String",
            "args":[
              { "name": "?_depth","type": "Int" }
            ]
          },
        {
          "name":"bytes_to_string",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"bytes_to_string(bytes:Int) : String",
            "return":": String",
            "args":[
              { "name": "bytes","type": "Int" }
            ]
          },
        {
          "name":"uuid",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"uuid() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"base64_encode",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"base64_encode(_string:String) : String",
            "return":": String",
            "args":[
              { "name": "_string","type": "String" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe._Events.EventConnection",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"event_name",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"event_name : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"id",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"id : String",
            "type":"String",
            "doc":""
        },
        {
          "name":"listener",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"listener : Dynamic",
            "type":"Dynamic",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(_id:String, _event_name:String, _listener:null->Void) ",
            "return":"",
            "args":[
              { "name": "_id","type": "String" },
              { "name": "_event_name","type": "String" },
              { "name": "_listener","type": "null->Void" }
            ]
          }
      ],
      "ispublic":false,
      "doc":""
    },
    { "name": "luxe.components.Component",
      "meta":[
      ],
      "extends":[
        { "name":"luxe.Objects" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"options",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "inline":false,
            "static":false,
            "signature":"options : Dynamic",
            "type":"Dynamic",
            "doc":""
        },
        {
          "name":"entity",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"entity : luxe.Entity",
            "type":"luxe.Entity",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"pos_local",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos_local : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"rotation",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"rotation_local",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"rotation_local : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scale_local",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scale_local : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"pos",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"pos : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        },
        {
          "name":"scale",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"scale : luxe.Vector",
            "doc":"",
            "type":"luxe.Vector",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"get_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_r:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_r","type": "luxe.Vector" }
            ]
          },
        {
          "name":"entity_scale_change",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"entity_scale_change(_p:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_init",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_init() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_pos_change",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_pos_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"_scale_change",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_scale_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          },
        {
          "name":"entity_pos_change",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"entity_pos_change(_p:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"get",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get(_name:String, ?in_children:Bool) : get.T",
            "return":": get.T",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?in_children","type": "Bool" }
            ]
          },
        {
          "name":"get_pos_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_pos_local() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"get_rotation_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation_local() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"get_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"get_any",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_any(_name:String, ?in_children:Bool, ?first_only:Bool) : Array<get_any.T>",
            "return":": Array<get_any.T>",
            "args":[
              { "name": "_name","type": "String" },
              { "name": "?in_children","type": "Bool" },
              { "name": "?first_only","type": "Bool" }
            ]
          },
        {
          "name":"_attach_listener",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_attach_listener(_v:luxe.Vector, listener:Float->Void) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "luxe.Vector" },
              { "name": "listener","type": "Float->Void" }
            ]
          },
        {
          "name":"_reset",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_reset() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"remove",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove(?_name:String, ?_data:remove.T) : Bool",
            "return":": Bool",
            "args":[
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "remove.T" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?_options:luxe.options.ComponentOptions<new.T>) ",
            "return":"",
            "args":[
              { "name": "?_options","type": "luxe.options.ComponentOptions<new.T>" }
            ]
          },
        {
          "name":"set_pos_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos_local(_p:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_rotation_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation_local(_r:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_r","type": "luxe.Vector" }
            ]
          },
        {
          "name":"set_scale",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale(_s:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_s","type": "luxe.Vector" }
            ]
          },
        {
          "name":"get_serialize_data",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_serialize_data() : Dynamic",
            "return":": Dynamic",
            "args":[
            ]
          },
        {
          "name":"serialize_to_disk",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"serialize_to_disk(_destination_path:String) : Void",
            "return":": Void",
            "args":[
              { "name": "_destination_path","type": "String" }
            ]
          },
        {
          "name":"get_scale_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_scale_local() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"add",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add(type:Class<add.T1>, ?_name:String, ?_data:add.T2) : add.T1",
            "return":": add.T1",
            "args":[
              { "name": "type","type": "Class<add.T1>" },
              { "name": "?_name","type": "String" },
              { "name": "?_data","type": "add.T2" }
            ]
          },
        {
          "name":"entity_rotation_change",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"entity_rotation_change(_p:luxe.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_p","type": "luxe.Vector" }
            ]
          },
        {
          "name":"get_rotation",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_rotation() : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
            ]
          },
        {
          "name":"set_scale_local",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_scale_local(_s:luxe.Vector) : luxe.Vector",
            "return":": luxe.Vector",
            "args":[
              { "name": "_s","type": "luxe.Vector" }
            ]
          },
        {
          "name":"_rotation_change",
            "meta":[
            { "name":":noCompletion", "value":"" }
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"_rotation_change(_v:Float) : Void",
            "return":": Void",
            "args":[
              { "name": "_v","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "luxe.tween.easing.Quad",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
      ],
      "properties":[
        {
          "name":"easeInOut",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"easeInOut : luxe.tween.easing.IEasing",
            "doc":"",
            "type":"luxe.tween.easing.IEasing",
            "type_desc":"(read only)"
        },
        {
          "name":"easeOut",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"easeOut : luxe.tween.easing.IEasing",
            "doc":"",
            "type":"luxe.tween.easing.IEasing",
            "type_desc":"(read only)"
        },
        {
          "name":"easeIn",
            "meta":[
            ],
            "get":true,
            "set":false,
            "signature":"easeIn : luxe.tween.easing.IEasing",
            "doc":"",
            "type":"luxe.tween.easing.IEasing",
            "type_desc":"(read only)"
        }
      ],
      "methods":[
        {
          "name":"get_easeIn",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_easeIn() : luxe.tween.easing.IEasing",
            "return":": luxe.tween.easing.IEasing",
            "args":[
            ]
          },
        {
          "name":"get_easeInOut",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_easeInOut() : luxe.tween.easing.IEasing",
            "return":": luxe.tween.easing.IEasing",
            "args":[
            ]
          },
        {
          "name":"get_easeOut",
            "meta":[
            ],
            "public":false,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"get_easeOut() : luxe.tween.easing.IEasing",
            "return":": luxe.tween.easing.IEasing",
            "args":[
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.Matrix4",
      "meta":[
      ],
      "extends":[
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"elements",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"elements : Array<Float>",
            "type":"Array<Float>",
            "doc":""
        }
      ],
      "properties":[
        {
          "name":"M44",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M44 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M21",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M21 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M14",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M14 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M33",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M33 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M22",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M22 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M41",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M41 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M34",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M34 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M11",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M11 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M23",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M23 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M42",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M42 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M12",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M12 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M31",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M31 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M24",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M24 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M43",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M43 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M13",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M13 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        },
        {
          "name":"M32",
            "meta":[
            { "name":":isVar", "value":"" }
            ],
            "get":true,
            "set":true,
            "signature":"M32 : Float",
            "doc":"",
            "type":"Float",
            "type_desc":"read/write"
        }
      ],
      "methods":[
        {
          "name":"copyPosition",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"copyPosition(m:phoenix.Matrix4) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"GetBackward",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"GetBackward(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"getMaxScaleOnAxis",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"getMaxScaleOnAxis() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"makeRotationAxis",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeRotationAxis(_axis:phoenix.Vector, _angle:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_axis","type": "phoenix.Vector" },
              { "name": "_angle","type": "Float" }
            ]
          },
        {
          "name":"flattenToArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"flattenToArray(?_flat:Array<Float>) : Array<Float>",
            "return":": Array<Float>",
            "args":[
              { "name": "?_flat","type": "Array<Float>" }
            ]
          },
        {
          "name":"makeScale",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeScale(_x:Float, _y:Float, _z:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "_z","type": "Float" }
            ]
          },
        {
          "name":"decompose",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"decompose(?_position:phoenix.Vector, ?_quaternion:phoenix.Quaternion, ?_scale:phoenix.Vector) : phoenix.MatrixTransform",
            "return":": phoenix.MatrixTransform",
            "args":[
              { "name": "?_position","type": "phoenix.Vector" },
              { "name": "?_quaternion","type": "phoenix.Quaternion" },
              { "name": "?_scale","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"copy",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"copy(m:phoenix.Matrix4) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"set_M44",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M44(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M43",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M43(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M42",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M42(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"makeOrthographic",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeOrthographic(_left:Float, _right:Float, _top:Float, _bottom:Float, _near:Float, _far:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_left","type": "Float" },
              { "name": "_right","type": "Float" },
              { "name": "_top","type": "Float" },
              { "name": "_bottom","type": "Float" },
              { "name": "_near","type": "Float" },
              { "name": "_far","type": "Float" }
            ]
          },
        {
          "name":"toArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toArray() : Array<Float>",
            "return":": Array<Float>",
            "args":[
            ]
          },
        {
          "name":"set_M34",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M34(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M41",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M41(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M33",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M33(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"makeRotationFromQuaternion",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeRotationFromQuaternion(q:phoenix.Quaternion) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "q","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"multiply",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiply(_m:phoenix.Matrix4) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"set_M32",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M32(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M24",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M24(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M31",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M31(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"float32array",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"float32array() : lime.utils.Float32Array",
            "return":": lime.utils.Float32Array",
            "args":[
            ]
          },
        {
          "name":"makeRotationZ",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeRotationZ(_theta:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_theta","type": "Float" }
            ]
          },
        {
          "name":"set_M23",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M23(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"determinant",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"determinant() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"GetDown",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"GetDown(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"set_M22",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M22(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M14",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M14(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M21",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M21(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"makeTranslation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeTranslation(_x:Float, _y:Float, _z:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "_z","type": "Float" }
            ]
          },
        {
          "name":"fromArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"fromArray(_from:Array<Float>) : Void",
            "return":": Void",
            "args":[
              { "name": "_from","type": "Array<Float>" }
            ]
          },
        {
          "name":"set_M13",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M13(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"set_M12",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M12(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"get_M44",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M44() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"set_M11",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_M11(_value:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "_value","type": "Float" }
            ]
          },
        {
          "name":"get_M43",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M43() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"makeRotationFromEuler",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeRotationFromEuler(_v:phoenix.Vector, ?_order:String) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_v","type": "phoenix.Vector" },
              { "name": "?_order","type": "String" }
            ]
          },
        {
          "name":"flattenToArrayOffset",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"flattenToArrayOffset(_flat:Array<Float>, _offset:Int) : Array<Float>",
            "return":": Array<Float>",
            "args":[
              { "name": "_flat","type": "Array<Float>" },
              { "name": "_offset","type": "Int" }
            ]
          },
        {
          "name":"get_M42",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M42() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"getInverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"getInverse(_m:phoenix.Matrix4) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"makePerspective",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makePerspective(_fov:Float, _aspect:Float, _near:Float, _far:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_fov","type": "Float" },
              { "name": "_aspect","type": "Float" },
              { "name": "_near","type": "Float" },
              { "name": "_far","type": "Float" }
            ]
          },
        {
          "name":"get_M34",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M34() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M41",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M41() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"makeRotationY",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeRotationY(_theta:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_theta","type": "Float" }
            ]
          },
        {
          "name":"get_M33",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M33() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M32",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M32() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"extractRotation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"extractRotation(m:phoenix.Matrix4) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"multiplyVector3Array",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyVector3Array(_a:Array<Float>) : Array<Float>",
            "return":": Array<Float>",
            "args":[
              { "name": "_a","type": "Array<Float>" }
            ]
          },
        {
          "name":"get_M24",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M24() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M31",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M31() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"lookAt",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"lookAt(_eye:phoenix.Vector, _target:phoenix.Vector, _up:phoenix.Vector) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_eye","type": "phoenix.Vector" },
              { "name": "_target","type": "phoenix.Vector" },
              { "name": "_up","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"get_M23",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M23() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M22",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M22() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"multiplyScalar",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyScalar(_s:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_s","type": "Float" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?n11:Float, ?n12:Float, ?n13:Float, ?n14:Float, ?n21:Float, ?n22:Float, ?n23:Float, ?n24:Float, ?n31:Float, ?n32:Float, ?n33:Float, ?n34:Float, ?n41:Float, ?n42:Float, ?n43:Float, ?n44:Float) ",
            "return":"",
            "args":[
              { "name": "?n11","type": "Float" },
              { "name": "?n12","type": "Float" },
              { "name": "?n13","type": "Float" },
              { "name": "?n14","type": "Float" },
              { "name": "?n21","type": "Float" },
              { "name": "?n22","type": "Float" },
              { "name": "?n23","type": "Float" },
              { "name": "?n24","type": "Float" },
              { "name": "?n31","type": "Float" },
              { "name": "?n32","type": "Float" },
              { "name": "?n33","type": "Float" },
              { "name": "?n34","type": "Float" },
              { "name": "?n41","type": "Float" },
              { "name": "?n42","type": "Float" },
              { "name": "?n43","type": "Float" },
              { "name": "?n44","type": "Float" }
            ]
          },
        {
          "name":"get_M14",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M14() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M21",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M21() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M13",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M13() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"multiplyToArray",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyToArray(_a:phoenix.Matrix4, _b:phoenix.Matrix4, _r:Array<Float>) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_a","type": "phoenix.Matrix4" },
              { "name": "_b","type": "phoenix.Matrix4" },
              { "name": "_r","type": "Array<Float>" }
            ]
          },
        {
          "name":"compose",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"compose(_position:phoenix.Vector, _quaternion:phoenix.Quaternion, _scale:phoenix.Vector) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_position","type": "phoenix.Vector" },
              { "name": "_quaternion","type": "phoenix.Quaternion" },
              { "name": "_scale","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"GetUp",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"GetUp(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"get_M12",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M12() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"get_M11",
            "meta":[
            ],
            "public":false,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"get_M11() : Float",
            "return":": Float",
            "args":[
            ]
          },
        {
          "name":"inverse",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"inverse() : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
            ]
          },
        {
          "name":"makeRotationX",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeRotationX(_theta:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_theta","type": "Float" }
            ]
          },
        {
          "name":"setPosition",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"setPosition(_v:phoenix.Vector) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_v","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"multiplyMatrices",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"multiplyMatrices(_a:phoenix.Matrix4, _b:phoenix.Matrix4) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_a","type": "phoenix.Matrix4" },
              { "name": "_b","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"scale",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"scale(_v:phoenix.Vector) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_v","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"compose_with_origin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"compose_with_origin(_position:phoenix.Vector, _origin:phoenix.Vector, _quaternion:phoenix.Quaternion, _scale:phoenix.Vector) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_position","type": "phoenix.Vector" },
              { "name": "_origin","type": "phoenix.Vector" },
              { "name": "_quaternion","type": "phoenix.Quaternion" },
              { "name": "_scale","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"clone",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clone() : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
            ]
          },
        {
          "name":"identity",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"identity() : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
            ]
          },
        {
          "name":"set",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set(n11:Float, n12:Float, n13:Float, n14:Float, n21:Float, n22:Float, n23:Float, n24:Float, n31:Float, n32:Float, n33:Float, n34:Float, n41:Float, n42:Float, n43:Float, n44:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "n11","type": "Float" },
              { "name": "n12","type": "Float" },
              { "name": "n13","type": "Float" },
              { "name": "n14","type": "Float" },
              { "name": "n21","type": "Float" },
              { "name": "n22","type": "Float" },
              { "name": "n23","type": "Float" },
              { "name": "n24","type": "Float" },
              { "name": "n31","type": "Float" },
              { "name": "n32","type": "Float" },
              { "name": "n33","type": "Float" },
              { "name": "n34","type": "Float" },
              { "name": "n41","type": "Float" },
              { "name": "n42","type": "Float" },
              { "name": "n43","type": "Float" },
              { "name": "n44","type": "Float" }
            ]
          },
        {
          "name":"transpose",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"transpose() : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
            ]
          },
        {
          "name":"makeFrustum",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"makeFrustum(_left:Float, _right:Float, _bottom:Float, _top:Float, _near:Float, _far:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_left","type": "Float" },
              { "name": "_right","type": "Float" },
              { "name": "_bottom","type": "Float" },
              { "name": "_top","type": "Float" },
              { "name": "_near","type": "Float" },
              { "name": "_far","type": "Float" }
            ]
          },
        {
          "name":"getPosition",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"getPosition() : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
            ]
          },
        {
          "name":"GetRight",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"GetRight(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"GetLeft",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"GetLeft(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"GetForward",
            "meta":[
            ],
            "public":true,
            "static":true,
            "inline":false,
            "doc":"",
            "signature":"GetForward(_m:phoenix.Matrix4) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_m","type": "phoenix.Matrix4" }
            ]
          },
        {
          "name":"make2D",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"make2D(_x:Float, _y:Float, ?_scale:Float, ?_rotation:Float) : phoenix.Matrix4",
            "return":": phoenix.Matrix4",
            "args":[
              { "name": "_x","type": "Float" },
              { "name": "_y","type": "Float" },
              { "name": "?_scale","type": "Float" },
              { "name": "?_rotation","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    },
    { "name": "phoenix.geometry.CompositeGeometry",
      "meta":[
      ],
      "extends":[
        { "name":"phoenix.geometry.Geometry" }
      ],
      "implements":[
      ],
      "members":[
        {
          "name":"geometry",
            "meta":[
            ],
            "public":true,
            "inline":false,
            "static":false,
            "signature":"geometry : Array<phoenix.geometry.Geometry>",
            "type":"Array<phoenix.geometry.Geometry>",
            "doc":""
        }
      ],
      "properties":[
      ],
      "methods":[
        {
          "name":"set_rotation",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_rotation(_rotation:phoenix.Quaternion) : phoenix.Quaternion",
            "return":": phoenix.Quaternion",
            "args":[
              { "name": "_rotation","type": "phoenix.Quaternion" }
            ]
          },
        {
          "name":"set_clip",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"toString",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"toString() : String",
            "return":": String",
            "args":[
            ]
          },
        {
          "name":"translate",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"translate(_offset:phoenix.Vector) : Void",
            "return":": Void",
            "args":[
              { "name": "_offset","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"has_geometry",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"has_geometry(g:phoenix.geometry.Geometry) : Bool",
            "return":": Bool",
            "args":[
              { "name": "g","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"add_to_batcher",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_to_batcher(_batcher:phoenix.Batcher) : Void",
            "return":": Void",
            "args":[
              { "name": "_batcher","type": "phoenix.Batcher" }
            ]
          },
        {
          "name":"set_pos",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_pos(_position:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_position","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_shader",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_shader(val:phoenix.Shader) : phoenix.Shader",
            "return":": phoenix.Shader",
            "args":[
              { "name": "val","type": "phoenix.Shader" }
            ]
          },
        {
          "name":"set_dirty",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_dirty(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"add_geometry",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"add_geometry(g:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "g","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"set_clip_rect",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_clip_rect(val:phoenix.Rectangle) : phoenix.Rectangle",
            "return":": phoenix.Rectangle",
            "args":[
              { "name": "val","type": "phoenix.Rectangle" }
            ]
          },
        {
          "name":"remove_geometry",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"remove_geometry(g:phoenix.geometry.Geometry) : Void",
            "return":": Void",
            "args":[
              { "name": "g","type": "phoenix.geometry.Geometry" }
            ]
          },
        {
          "name":"set_origin",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_origin(_origin:phoenix.Vector) : phoenix.Vector",
            "return":": phoenix.Vector",
            "args":[
              { "name": "_origin","type": "phoenix.Vector" }
            ]
          },
        {
          "name":"set_locked",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_locked(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"set_texture",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_texture(val:phoenix.Texture) : phoenix.Texture",
            "return":": phoenix.Texture",
            "args":[
              { "name": "val","type": "phoenix.Texture" }
            ]
          },
        {
          "name":"new",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"new(?options:Dynamic) ",
            "return":"",
            "args":[
              { "name": "?options","type": "Dynamic" }
            ]
          },
        {
          "name":"clear",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"clear() : Void",
            "return":": Void",
            "args":[
            ]
          },
        {
          "name":"set_primitive_type",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_primitive_type(val:phoenix.PrimitiveType) : phoenix.PrimitiveType",
            "return":": phoenix.PrimitiveType",
            "args":[
              { "name": "val","type": "phoenix.PrimitiveType" }
            ]
          },
        {
          "name":"set_color",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_color(_color:phoenix.Color) : phoenix.Color",
            "return":": phoenix.Color",
            "args":[
              { "name": "_color","type": "phoenix.Color" }
            ]
          },
        {
          "name":"set_visible",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_visible(val:Bool) : Bool",
            "return":": Bool",
            "args":[
              { "name": "val","type": "Bool" }
            ]
          },
        {
          "name":"set_group",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_group(val:Int) : Int",
            "return":": Int",
            "args":[
              { "name": "val","type": "Int" }
            ]
          },
        {
          "name":"drop",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"drop(?remove:Bool) : Void",
            "return":": Void",
            "args":[
              { "name": "?remove","type": "Bool" }
            ]
          },
        {
          "name":"replace",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"replace(_geometry:Array<phoenix.geometry.Geometry>) : Void",
            "return":": Void",
            "args":[
              { "name": "_geometry","type": "Array<phoenix.geometry.Geometry>" }
            ]
          },
        {
          "name":"set_depth",
            "meta":[
            ],
            "public":true,
            "static":false,
            "inline":false,
            "doc":"",
            "signature":"set_depth(val:Float) : Float",
            "return":": Float",
            "args":[
              { "name": "val","type": "Float" }
            ]
          }
      ],
      "ispublic":true,
      "doc":""
    }
  ]
}
