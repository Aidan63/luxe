	
		//To implement a new editor mode, 
		//simply add a js file to the folder and handle events here.
		
			//supported events to handle : 
				//editor.mode.init 
				//editor.mode.destroy
				//editor.mode.save
				//editor.mode.load
				//editor.mode.undo
				//editor.mode.redo
				//editor.*.mode.activate (* being your mode. Like grid mode, editor.grid.mode.enter 
				//editor.*.mode.deactivate ( same )

			//First create a class for your editor.
		var GridEditor = new Class({
			initialize: function() {
			
				this.mode = 'grid';
				this.events = [];
				
				this.events.push( events.connect('editor.mode.init', this.init.bind(this)) );
				this.events.push( events.connect('editor.mode.destroy', this.destroy.bind(this)) );
				this.events.push( events.connect('editor.grid.mode.activate', this.activate.bind(this)) );
				this.events.push( events.connect('editor.grid.mode.deactivate', this.deactivate.bind(this)) );
				
				this.init();
			},
			
			init: function() {
				this.window = new Container('data/window.png', vec2(phoenix.resolution.x - 380, 20), vec2(360, 200), 'Grid Editor', 9999, 902);
				this.window.hide(true);
				
					//add the editor buttons
				var buttontemplate = {
					imagename : 'data/button.png',
					font: gamelab.font,
					hidden : true,
					textoffset : vec2(0,16),
					size: vec2(76,35),
					centered: false,
					fontscale : 0.35, 
					normalAlpha : 0.9,
					depth: 10000,
					group: 902,
					fadeSpeed : 250
				};
				
						var scnbut = buttontemplate;
							scnbut.text = 'scene';
							scnbut.pos = this.window.pos.add( 20, 60 );
							scnbut.textcolor = color().RGB( 57, 57, 57, 1);
								
				this.sceneButton = new fadeButton( scnbut );
					this.sceneButton.connect(function(){
						Editor.switchmode('scene', {returning:true});
					}.bind(this));
				
				this.labelEditors = new Text('EDITORS', this.window.pos.add(20,40), 0.35, color().RGB(182,178,172,1), 10000, 902);
					this.labelEditors.hide(true);
					
			},
			
			destroy: function() {
				this.events.each(function(item) {
					events.disconnect(item);
				}.bind(this));
			},
			
			activate: function() {
				this.window.show();
				this.sceneButton.show();
				this.labelEditors.show();
			},
			
			deactivate: function() {
				this.window.hide();
				this.sceneButton.hide();
				this.labelEditors.hide();
			},
		});
		
		if(Editor) {
			Editor.modes.push(new GridEditor());
		}
				
		
		

	
	
	